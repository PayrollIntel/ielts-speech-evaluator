{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ielts-speech-evaluator\\\\src\\\\components\\\\SpeechEvaluator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions-corrected\";\nimport sampleAnswers from \"../data/sampleAnswers\";\nimport './SpeechEvaluator.css';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport jsPDF from 'jspdf';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\nconst getBandColor = band => {\n  if (band >= 8.5) return \"#2e7d32\";\n  if (band >= 7) return \"#388e3c\";\n  if (band >= 6.5) return \"#689f38\";\n  if (band >= 6) return \"#afb42b\";\n  if (band >= 5.5) return \"#f57f17\";\n  if (band >= 5) return \"#ff8f00\";\n  if (band >= 4) return \"#d32f2f\";\n  return \"#d32f2f\";\n};\nconst createIELTSTest = () => {\n  const availableTopics = [...questionBank.part1Topics];\n  const shuffled = availableTopics.sort(() => 0.5 - Math.random());\n  const introTopic = shuffled[0];\n  const introQuestions = [...introTopic.questions].sort(() => 0.5 - Math.random()).slice(0, 2);\n  const secondTopic = shuffled[1];\n  const secondQuestions = [...secondTopic.questions].sort(() => 0.5 - Math.random()).slice(0, Math.random() > 0.5 ? 2 : 3);\n  let part1 = [];\n  introQuestions.forEach(q => part1.push({\n    ...q,\n    topicName: introTopic.topicName,\n    part: 1,\n    expectedDuration: 30\n  }));\n  secondQuestions.forEach(q => part1.push({\n    ...q,\n    topicName: secondTopic.topicName,\n    part: 1,\n    expectedDuration: 30\n  }));\n  const cueCards = [...questionBank.part2CueCards];\n  const selectedCard = cueCards[Math.floor(Math.random() * cueCards.length)];\n  const part2 = {\n    ...selectedCard,\n    part: 2,\n    expectedDuration: 120,\n    preparationTime: 60\n  };\n  const relatedDiscussion = questionBank.part3Discussions.find(d => d.relatedToPart2 === selectedCard.id);\n  let part3 = [];\n  if (relatedDiscussion) {\n    const discQuestions = [...relatedDiscussion.questions].sort(() => 0.5 - Math.random());\n    const count = Math.min(discQuestions.length, Math.floor(Math.random() * 3) + 4);\n    part3 = discQuestions.slice(0, count).map(q => ({\n      ...q,\n      part: 3,\n      topicName: relatedDiscussion.topicTheme,\n      expectedDuration: 60\n    }));\n  }\n  const allQuestions = [...part1, {\n    ...part2,\n    prompt: part2.cueCard.mainPrompt\n  }, ...part3];\n  return {\n    testId: `ielts_${Date.now()}`,\n    title: `IELTS Speaking Test - ${new Date().toLocaleDateString()}`,\n    testStructure: {\n      part1: {\n        name: \"Part 1: Introduction & Interview\",\n        duration: \"4-5 minutes\",\n        questions: part1,\n        topics: [introTopic.topicName, secondTopic.topicName]\n      },\n      part2: {\n        name: \"Part 2: Individual Long Turn\",\n        duration: \"3-4 minutes\",\n        question: part2,\n        cueCard: part2.cueCard\n      },\n      part3: {\n        name: \"Part 3: Discussion\",\n        duration: \"4-5 minutes\",\n        questions: part3,\n        theme: relatedDiscussion ? relatedDiscussion.topicTheme : \"General\"\n      }\n    },\n    allQuestions,\n    totalQuestions: allQuestions.length\n  };\n};\nclass SimplePronunciationAnalyzer {\n  constructor() {\n    this.audioContext = null;\n    this.analyser = null;\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isRunning = false;\n  }\n  async initialize() {\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      if (this.audioContext.state === 'suspended') await this.audioContext.resume();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  async startAnalysis(stream) {\n    if (!this.audioContext) throw new Error(\"No audioContext\");\n    const source = this.audioContext.createMediaStreamSource(stream);\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = 2048;\n    this.analyser.smoothingTimeConstant = 0.8;\n    source.connect(this.analyser);\n    this.isRunning = true;\n    this.extractFeatures();\n  }\n  extractFeatures() {\n    if (!this.isRunning) return;\n    const freqData = new Float32Array(this.analyser.frequencyBinCount);\n    const timeData = new Float32Array(this.analyser.fftSize);\n    this.analyser.getFloatFrequencyData(freqData);\n    this.analyser.getFloatTimeDomainData(timeData);\n    const ts = this.audioContext.currentTime;\n    const rms = this.calcRMS(timeData);\n    const zcr = this.calcZCR(timeData);\n    const centroid = this.calcSpectralCentroid(freqData);\n    const pitch = this.calcPitch(timeData);\n    this.features.rms.push({\n      value: rms,\n      ts\n    });\n    this.features.zcr.push({\n      value: zcr,\n      ts\n    });\n    this.features.spectralCentroid.push({\n      value: centroid,\n      ts\n    });\n    if (pitch > 50 && pitch < 800) this.features.pitch.push({\n      value: pitch,\n      ts\n    });\n    requestAnimationFrame(() => this.extractFeatures());\n  }\n  calcRMS(data) {\n    let sum = 0;\n    for (let i = 0; i < data.length; i++) sum += data[i] * data[i];\n    return Math.sqrt(sum / data.length);\n  }\n  calcZCR(data) {\n    let count = 0;\n    for (let i = 1; i < data.length; i++) if (data[i] >= 0 !== data[i - 1] >= 0) count++;\n    return count / (data.length - 1);\n  }\n  calcSpectralCentroid(freqData) {\n    let num = 0,\n      den = 0;\n    for (let i = 0; i < freqData.length; i++) {\n      const mag = Math.pow(10, freqData[i] / 10);\n      const freq = i * this.audioContext.sampleRate / (2 * freqData.length);\n      num += freq * mag;\n      den += mag;\n    }\n    return den ? num / den : 0;\n  }\n  calcPitch(data) {\n    const sr = this.audioContext.sampleRate;\n    const minPeriod = Math.floor(sr / 800);\n    const maxPeriod = Math.floor(sr / 50);\n    let bestCorr = 0,\n      bestPeriod = -1;\n    for (let per = minPeriod; per < maxPeriod && per < data.length / 2; per++) {\n      let corr = 0;\n      for (let i = 0; i < data.length - per; i++) corr += data[i] * data[i + per];\n      if (corr > bestCorr) {\n        bestCorr = corr;\n        bestPeriod = per;\n      }\n    }\n    return bestPeriod > 0 ? sr / bestPeriod : 0;\n  }\n  stop() {\n    this.isRunning = false;\n  }\n  getFeatures() {\n    return {\n      ...this.features\n    };\n  }\n  reset() {\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isRunning = false;\n  }\n}\nexport default function SpeechEvaluator() {\n  _s();\n  // States\n  const [currentTest, setCurrentTest] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentPart, setCurrentPart] = useState(1);\n  const [answers, setAnswers] = useState([]);\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [feedbacks, setFeedbacks] = useState(null);\n  const [testSummary, setTestSummary] = useState(null);\n  const [error, setError] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [preparationTime, setPreparationTime] = useState(0);\n  const [isPreparing, setIsPreparing] = useState(false);\n  const [autoStart, setAutoStart] = useState(false);\n  const [initializationError, setInitializationError] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n  const [audioFeatures, setAudioFeatures] = useState({});\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const pronunciationAnalyzerRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const recordingTimerRef = useRef(null);\n  const preparationTimerRef = useRef(null);\n  const currentStreamRef = useRef(null);\n\n  // Initialize\n  useEffect(() => {\n    async function init() {\n      try {\n        const test = createIELTSTest();\n        setCurrentTest(test);\n        setAnswers(Array(test.totalQuestions).fill(\"\"));\n        pronunciationAnalyzerRef.current = new SimplePronunciationAnalyzer();\n        setIsReady(true);\n      } catch {\n        setInitializationError(\"Failed to initialize. Refresh page.\");\n        setIsReady(true);\n      }\n    }\n    init();\n    return () => {\n      if (recordingTimerRef.current) clearInterval(recordingTimerRef.current);\n      if (preparationTimerRef.current) clearInterval(preparationTimerRef.current);\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (pronunciationAnalyzerRef.current) {\n        pronunciationAnalyzerRef.current.stop();\n      }\n    };\n  }, []);\n\n  // Auto-start recording after preparation\n  useEffect(() => {\n    if (autoStart && !isPreparing && preparationTime === 0) {\n      const to = setTimeout(() => {\n        toggleRecording();\n        setAutoStart(false);\n      }, 500);\n      return () => clearTimeout(to);\n    }\n  }, [autoStart, preparationTime, isPreparing]);\n\n  // Timer handlers\n  const startRecordingTimer = useCallback(() => {\n    setRecordingTime(0);\n    recordingTimerRef.current = setInterval(() => setRecordingTime(t => t + 1), 1000);\n  }, []);\n  const stopRecordingTimer = useCallback(() => {\n    if (recordingTimerRef.current) {\n      clearInterval(recordingTimerRef.current);\n      recordingTimerRef.current = null;\n    }\n  }, []);\n  const startPreparationTimer = useCallback(() => {\n    setPreparationTime(60);\n    setAutoStart(true);\n    setIsPreparing(true);\n    preparationTimerRef.current = setInterval(() => {\n      setPreparationTime(t => {\n        if (t <= 1) {\n          clearInterval(preparationTimerRef.current);\n          setIsPreparing(false);\n          return 0;\n        }\n        return t - 1;\n      });\n    }, 1000);\n  }, []);\n  const formatTime = seconds => {\n    const m = Math.floor(seconds / 60);\n    const s = seconds % 60;\n    return `${m}:${s.toString().padStart(2, \"0\")}`;\n  };\n\n  // Navigation helpers\n  const getCurrentPartInfo = () => {\n    if (!currentTest) return null;\n    const len = currentTest.testStructure.part1.questions.length;\n    if (currentQuestionIndex < len) return {\n      part: 1,\n      info: currentTest.testStructure.part1\n    };\n    if (currentQuestionIndex === len) return {\n      part: 2,\n      info: currentTest.testStructure.part2\n    };\n    return {\n      part: 3,\n      info: currentTest.testStructure.part3\n    };\n  };\n  const toggleRecording = async () => {\n    if (recording) {\n      stopRecording();\n    } else {\n      await startRecording();\n    }\n  };\n  async function startRecording() {\n    if (!(\"webkitSpeechRecognition\" in window) && !(\"SpeechRecognition\" in window)) {\n      setError(\"Speech recognition not supported in this browser.\");\n      return;\n    }\n    if (pronunciationAnalyzerRef.current && !pronunciationAnalyzerRef.current.audioContext) {\n      await pronunciationAnalyzerRef.current.initialize();\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: false\n        }\n      });\n      currentStreamRef.current = stream;\n      if (pronunciationAnalyzerRef.current) {\n        pronunciationAnalyzerRef.current.reset();\n        await pronunciationAnalyzerRef.current.startAnalysis(stream);\n        setIsAnalyzing(true);\n      }\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.lang = \"en-US\";\n      recognition.interimResults = false;\n      recognition.continuous = true;\n      recognition.onstart = () => {\n        setRecording(true);\n        setError(null);\n        startRecordingTimer();\n      };\n      recognition.onresult = e => {\n        let text = Array.from(e.results).map(r => r[0].transcript).join(\" \");\n        setAnswers(a => {\n          const copy = [...a];\n          copy[currentQuestionIndex] = text.trim();\n          return copy;\n        });\n      };\n      recognition.onend = () => {\n        setRecording(false);\n        stopRecordingTimer();\n      };\n      recognition.onerror = e => {\n        setError(`Speech recognition error: ${e.error}`);\n        setRecording(false);\n        stopRecordingTimer();\n        setIsAnalyzing(false);\n      };\n      recognitionRef.current = recognition;\n      recognition.start();\n    } catch (err) {\n      setError(\"Error accessing microphone.\");\n    }\n  }\n  function stopRecording() {\n    if (recognitionRef.current) recognitionRef.current.stop();\n    if (pronunciationAnalyzerRef.current && isAnalyzing) {\n      pronunciationAnalyzerRef.current.stop();\n      let feats = pronunciationAnalyzerRef.current.getFeatures();\n      setAudioFeatures(f => ({\n        ...f,\n        [currentQuestionIndex]: feats\n      }));\n      setIsAnalyzing(false);\n    }\n    if (currentStreamRef.current) {\n      currentStreamRef.current.getTracks().forEach(t => t.stop());\n    }\n    setTimeout(() => {\n      if (currentQuestionIndex < currentTest.totalQuestions - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      }\n    }, 1500);\n  }\n  const goPrev = () => {\n    if (currentQuestionIndex > 0) setCurrentQuestionIndex(currentQuestionIndex - 1);\n  };\n  async function submitTest() {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await fetch(\"/api/analyze-batch\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          testId: currentTest.testId,\n          questions: currentTest.allQuestions.map(q => q.prompt),\n          answers,\n          audioFeatures,\n          testType: \"IELTS_AUTHENTIC\"\n        })\n      });\n      if (!res.ok) throw new Error(`Error ${res.status}`);\n      const data = await res.json();\n      setFeedbacks(data.feedbacks);\n      setTestSummary(data.testSummary);\n      setShowResults(true);\n    } catch (e) {\n      setError(\"Submission error, please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n  function resetTest() {\n    const test = createIELTSTest();\n    setCurrentTest(test);\n    setAnswers(Array(test.totalQuestions).fill(''));\n    setCurrentQuestionIndex(0);\n    setCurrentPart(1);\n    setFeedbacks(null);\n    setTestSummary(null);\n    setShowResults(false);\n    setError(null);\n    setRecordingTime(0);\n    setPreparationTime(0);\n    setIsPreparing(false);\n    setAutoStart(false);\n    if (pronunciationAnalyzerRef.current) pronunciationAnalyzerRef.current.reset();\n  }\n  if (!isReady) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: initializationError || \"Initializing...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 25\n  }, this);\n  if (!currentTest) return null;\n  const partInfo = getCurrentPartInfo();\n  const bandData = {\n    labels: ['Part 1', 'Part 2', 'Part 3'],\n    datasets: [{\n      label: 'Bands',\n      data: [(testSummary === null || testSummary === void 0 ? void 0 : testSummary.part1Band) || 0, (testSummary === null || testSummary === void 0 ? void 0 : testSummary.part2Band) || 0, (testSummary === null || testSummary === void 0 ? void 0 : testSummary.part3Band) || 0],\n      backgroundColor: [getBandColor(testSummary === null || testSummary === void 0 ? void 0 : testSummary.part1Band), getBandColor(testSummary === null || testSummary === void 0 ? void 0 : testSummary.part2Band), getBandColor(testSummary === null || testSummary === void 0 ? void 0 : testSummary.part3Band)]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-evaluator\",\n    children: !showResults ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"test-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: currentTest.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-id\",\n            children: [\"ID: \", currentTest.testId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: [\"Progress: \", answers.filter(a => a.trim()).length, \" / \", currentTest.totalQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"test-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"part-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: partInfo.info.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"part-duration\",\n            children: partInfo.info.duration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), partInfo.part === 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Topics: \", partInfo.info.topics.join(\", \")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 39\n          }, this), partInfo.part === 2 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Preparation: 1 min \\u2192 Auto record \\u2192 Speak 1-2 min\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 39\n          }, this), partInfo.part === 3 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Theme: \", partInfo.info.theme]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"question-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"question-number\",\n              children: [\"Q\", currentQuestionIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), partInfo.part === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"topic-badge\",\n              children: currentTest.allQuestions[currentQuestionIndex].topicName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"question-prompt\",\n            children: currentTest.allQuestions[currentQuestionIndex].prompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duration-guide\",\n            children: [\"Approx. \", currentTest.allQuestions[currentQuestionIndex].expectedDuration || 30, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Your Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: answers[currentQuestionIndex],\n              onChange: e => {\n                const val = e.target.value;\n                setAnswers(a => {\n                  const copy = [...a];\n                  copy[currentQuestionIndex] = val;\n                  return copy;\n                });\n              },\n              className: \"form-control\",\n              rows: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"recording-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleRecording,\n            className: `btn ${recording ? 'btn--danger' : 'btn--primary'}`,\n            children: recording ? \"Stop Recording\" : \"Start Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Recording Time: \", formatTime(recordingTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"navigation-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: goPrev,\n              disabled: currentQuestionIndex === 0,\n              className: \"btn btn--secondary\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (currentQuestionIndex < currentTest.totalQuestions - 1) setCurrentQuestionIndex(idx => idx + 1);\n              },\n              disabled: currentQuestionIndex >= currentTest.totalQuestions - 1,\n              className: \"btn btn--secondary\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: submitTest,\n              disabled: loading || answers.filter(a => a.trim()).length < currentTest.totalQuestions,\n              className: \"btn btn--success\",\n              children: loading ? \"Submitting...\" : \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"test-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"band-score\",\n          style: {\n            borderLeftColor: getBandColor(testSummary.part1Band)\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Part 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: testSummary.part1Band\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"band-score\",\n          style: {\n            borderLeftColor: getBandColor(testSummary.part2Band)\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Part 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: testSummary.part2Band\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"band-score\",\n          style: {\n            borderLeftColor: getBandColor(testSummary.part3Band)\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Part 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: testSummary.part3Band\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"band-score overall\",\n          style: {\n            background: `linear-gradient(135deg, ${getBandColor(testSummary.overallBand)}, #0d6f62)`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Overall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: testSummary.overallBand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"band-chart-wrapper\",\n        style: {\n          maxWidth: 450,\n          margin: \"0 auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: bandData,\n          options: {\n            scales: {\n              y: {\n                min: 0,\n                max: 9,\n                ticks: {\n                  stepSize: 0.5\n                }\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--primary export-pdf-btn\",\n        onClick: () => {\n          if (!testSummary) return;\n          const doc = new jsPDF();\n          doc.setFontSize(18);\n          doc.text(\"IELTS Speaking Feedback\", 10, 10);\n          doc.setFontSize(14);\n          doc.text(`Part 1 Band: ${testSummary.part1Band}`, 10, 30);\n          doc.text(`Part 2 Band: ${testSummary.part2Band}`, 10, 40);\n          doc.text(`Part 3 Band: ${testSummary.part3Band}`, 10, 50);\n          doc.text(`Overall Band: ${testSummary.overallBand}`, 10, 60);\n          if (feedbacks) {\n            let y = 80;\n            feedbacks.forEach((fb, idx) => {\n              var _sampleAnswers$find;\n              doc.text(`Q${idx + 1}: ${fb.question}`, 10, y);\n              y += 8;\n              doc.text(`Your Answer: ${fb.answer}`, 10, y);\n              y += 8;\n              doc.text(`Feedback: ${fb.feedback}`, 10, y);\n              y += 8;\n              const sample = (_sampleAnswers$find = sampleAnswers.find(s => s.question === fb.question)) === null || _sampleAnswers$find === void 0 ? void 0 : _sampleAnswers$find.sample;\n              if (sample) {\n                doc.text(`Sample Answer: ${sample}`, 10, y);\n                y += 12;\n              } else {\n                y += 4;\n              }\n              if (y > 270) {\n                doc.addPage();\n                y = 20;\n              }\n            });\n          }\n          doc.save(\"IELTS_Feedback.pdf\");\n        },\n        children: \"Export PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"detailed-feedback\",\n        children: feedbacks && feedbacks.map((fb, idx) => {\n          var _sampleAnswers$find2;\n          return /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"feedback-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Q\", idx + 1, \": \", fb.question]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Your Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 20\n              }, this), \" \", fb.answer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Feedback:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 20\n              }, this), \" \", fb.feedback]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sample Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 20\n              }, this), \" \", ((_sampleAnswers$find2 = sampleAnswers.find(s => s.question === fb.question)) === null || _sampleAnswers$find2 === void 0 ? void 0 : _sampleAnswers$find2.sample) || \"Coming soon...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--secondary\",\n        onClick: () => {\n          setShowResults(false);\n          setFeedbacks(null);\n          setTestSummary(null);\n          setAnswers(Array(currentTest.totalQuestions).fill(''));\n          setCurrentQuestionIndex(0);\n          setCurrentPart(1);\n        },\n        children: \"Retake Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n}\n_s(SpeechEvaluator, \"MJL7o3d4+kihfS3388eeSNOj9yA=\");\n_c = SpeechEvaluator;\nvar _c;\n$RefreshReg$(_c, \"SpeechEvaluator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","questionBank","sampleAnswers","Bar","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Title","Tooltip","Legend","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","register","getBandColor","band","createIELTSTest","availableTopics","part1Topics","shuffled","sort","Math","random","introTopic","introQuestions","questions","slice","secondTopic","secondQuestions","part1","forEach","q","push","topicName","part","expectedDuration","cueCards","part2CueCards","selectedCard","floor","length","part2","preparationTime","relatedDiscussion","part3Discussions","find","d","relatedToPart2","id","part3","discQuestions","count","min","map","topicTheme","allQuestions","prompt","cueCard","mainPrompt","testId","Date","now","title","toLocaleDateString","testStructure","name","duration","topics","question","theme","totalQuestions","SimplePronunciationAnalyzer","constructor","audioContext","analyser","features","pitch","rms","spectralCentroid","zcr","isRunning","initialize","window","AudioContext","webkitAudioContext","state","resume","startAnalysis","stream","Error","source","createMediaStreamSource","createAnalyser","fftSize","smoothingTimeConstant","connect","extractFeatures","freqData","Float32Array","frequencyBinCount","timeData","getFloatFrequencyData","getFloatTimeDomainData","ts","currentTime","calcRMS","calcZCR","centroid","calcSpectralCentroid","calcPitch","value","requestAnimationFrame","data","sum","i","sqrt","num","den","mag","pow","freq","sampleRate","sr","minPeriod","maxPeriod","bestCorr","bestPeriod","per","corr","stop","getFeatures","reset","SpeechEvaluator","_s","currentTest","setCurrentTest","currentQuestionIndex","setCurrentQuestionIndex","currentPart","setCurrentPart","answers","setAnswers","recording","setRecording","loading","setLoading","feedbacks","setFeedbacks","testSummary","setTestSummary","error","setError","recordingTime","setRecordingTime","showResults","setShowResults","setPreparationTime","isPreparing","setIsPreparing","autoStart","setAutoStart","initializationError","setInitializationError","isReady","setIsReady","audioFeatures","setAudioFeatures","isAnalyzing","setIsAnalyzing","pronunciationAnalyzerRef","recognitionRef","recordingTimerRef","preparationTimerRef","currentStreamRef","init","test","Array","fill","current","clearInterval","getTracks","track","to","setTimeout","toggleRecording","clearTimeout","startRecordingTimer","setInterval","t","stopRecordingTimer","startPreparationTimer","formatTime","seconds","m","s","toString","padStart","getCurrentPartInfo","len","info","stopRecording","startRecording","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","SpeechRecognition","webkitSpeechRecognition","recognition","lang","interimResults","continuous","onstart","onresult","e","text","from","results","r","transcript","join","a","copy","trim","onend","onerror","start","err","feats","f","goPrev","submitTest","res","fetch","method","headers","body","JSON","stringify","testType","ok","status","json","resetTest","className","children","fileName","_jsxFileName","lineNumber","columnNumber","partInfo","bandData","labels","datasets","label","part1Band","part2Band","part3Band","backgroundColor","filter","onChange","val","target","rows","onClick","disabled","idx","style","borderLeftColor","background","overallBand","maxWidth","margin","options","scales","y","max","ticks","stepSize","plugins","legend","display","doc","setFontSize","fb","_sampleAnswers$find","answer","feedback","sample","addPage","save","_sampleAnswers$find2","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/ielts-speech-evaluator/src/components/SpeechEvaluator.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions-corrected\";\nimport sampleAnswers from \"../data/sampleAnswers\";\nimport './SpeechEvaluator.css';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport jsPDF from 'jspdf';\n\nChartJS.register(BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\n\nconst getBandColor = (band) => {\n  if (band >= 8.5) return \"#2e7d32\";\n  if (band >= 7) return \"#388e3c\";\n  if (band >= 6.5) return \"#689f38\";\n  if (band >= 6) return \"#afb42b\";\n  if (band >= 5.5) return \"#f57f17\";\n  if (band >= 5) return \"#ff8f00\";\n  if (band >= 4) return \"#d32f2f\";\n  return \"#d32f2f\";\n};\n\nconst createIELTSTest = () => {\n  const availableTopics = [...questionBank.part1Topics];\n  const shuffled = availableTopics.sort(() => 0.5 - Math.random());\n  const introTopic = shuffled[0];\n  const introQuestions = [...introTopic.questions].sort(() => 0.5 - Math.random()).slice(0, 2);\n  const secondTopic = shuffled[1];\n  const secondQuestions = [...secondTopic.questions].sort(() => 0.5 - Math.random()).slice(0, Math.random() > 0.5 ? 2 : 3);\n  let part1 = [];\n  introQuestions.forEach(q => part1.push({ ...q, topicName: introTopic.topicName, part: 1, expectedDuration: 30 }));\n  secondQuestions.forEach(q => part1.push({ ...q, topicName: secondTopic.topicName, part: 1, expectedDuration: 30 }));\n  const cueCards = [...questionBank.part2CueCards];\n  const selectedCard = cueCards[Math.floor(Math.random() * cueCards.length)];\n  const part2 = { ...selectedCard, part: 2, expectedDuration: 120, preparationTime: 60 };\n  const relatedDiscussion = questionBank.part3Discussions.find(d => d.relatedToPart2 === selectedCard.id);\n  let part3 = [];\n  if (relatedDiscussion) {\n    const discQuestions = [...relatedDiscussion.questions].sort(() => 0.5 - Math.random());\n    const count = Math.min(discQuestions.length, Math.floor(Math.random() * 3) + 4);\n    part3 = discQuestions.slice(0, count).map(q => ({ ...q, part: 3, topicName: relatedDiscussion.topicTheme, expectedDuration: 60 }));\n  }\n  const allQuestions = [...part1, { ...part2, prompt: part2.cueCard.mainPrompt }, ...part3];\n  return {\n    testId: `ielts_${Date.now()}`,\n    title: `IELTS Speaking Test - ${new Date().toLocaleDateString()}`,\n    testStructure: {\n      part1: { name: \"Part 1: Introduction & Interview\", duration: \"4-5 minutes\", questions: part1, topics: [introTopic.topicName, secondTopic.topicName] },\n      part2: { name: \"Part 2: Individual Long Turn\", duration: \"3-4 minutes\", question: part2, cueCard: part2.cueCard },\n      part3: { name: \"Part 3: Discussion\", duration: \"4-5 minutes\", questions: part3, theme: relatedDiscussion ? relatedDiscussion.topicTheme : \"General\" },\n    },\n    allQuestions,\n    totalQuestions: allQuestions.length,\n  };\n};\n\nclass SimplePronunciationAnalyzer {\n  constructor() {\n    this.audioContext = null;\n    this.analyser = null;\n    this.features = { pitch: [], rms: [], spectralCentroid: [], zcr: [] };\n    this.isRunning = false;\n  }\n  async initialize() {\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      if (this.audioContext.state === 'suspended') await this.audioContext.resume();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  async startAnalysis(stream) {\n    if (!this.audioContext) throw new Error(\"No audioContext\");\n    const source = this.audioContext.createMediaStreamSource(stream);\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = 2048;\n    this.analyser.smoothingTimeConstant = 0.8;\n    source.connect(this.analyser);\n    this.isRunning = true;\n    this.extractFeatures();\n  }\n  extractFeatures() {\n    if (!this.isRunning) return;\n    const freqData = new Float32Array(this.analyser.frequencyBinCount);\n    const timeData = new Float32Array(this.analyser.fftSize);\n    this.analyser.getFloatFrequencyData(freqData);\n    this.analyser.getFloatTimeDomainData(timeData);\n    const ts = this.audioContext.currentTime;\n    const rms = this.calcRMS(timeData);\n    const zcr = this.calcZCR(timeData);\n    const centroid = this.calcSpectralCentroid(freqData);\n    const pitch = this.calcPitch(timeData);\n    this.features.rms.push({ value: rms, ts });\n    this.features.zcr.push({ value: zcr, ts });\n    this.features.spectralCentroid.push({ value: centroid, ts });\n    if (pitch > 50 && pitch < 800) this.features.pitch.push({ value: pitch, ts });\n    requestAnimationFrame(() => this.extractFeatures());\n  }\n  calcRMS(data) {\n    let sum = 0;\n    for (let i = 0; i < data.length; i++) sum += data[i] * data[i];\n    return Math.sqrt(sum / data.length);\n  }\n  calcZCR(data) {\n    let count = 0;\n    for (let i = 1; i < data.length; i++) if ((data[i] >= 0) !== (data[i - 1] >= 0)) count++;\n    return count / (data.length - 1);\n  }\n  calcSpectralCentroid(freqData) {\n    let num = 0, den = 0;\n    for (let i = 0; i < freqData.length; i++) {\n      const mag = Math.pow(10, freqData[i] / 10);\n      const freq = (i * this.audioContext.sampleRate) / (2 * freqData.length);\n      num += freq * mag;\n      den += mag;\n    }\n    return den ? num / den : 0;\n  }\n  calcPitch(data) {\n    const sr = this.audioContext.sampleRate;\n    const minPeriod = Math.floor(sr / 800);\n    const maxPeriod = Math.floor(sr / 50);\n    let bestCorr = 0, bestPeriod = -1;\n    for (let per = minPeriod; per < maxPeriod && per < data.length / 2; per++) {\n      let corr = 0;\n      for (let i = 0; i < data.length - per; i++) corr += data[i] * data[i + per];\n      if (corr > bestCorr) { bestCorr = corr; bestPeriod = per; }\n    }\n    return bestPeriod > 0 ? sr / bestPeriod : 0;\n  }\n  stop() { this.isRunning = false; }\n  getFeatures() { return { ...this.features }; }\n  reset() { this.features = { pitch: [], rms: [], spectralCentroid: [], zcr: [] }; this.isRunning = false; }\n}\n\nexport default function SpeechEvaluator() {\n  // States\n  const [currentTest, setCurrentTest] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentPart, setCurrentPart] = useState(1);\n  const [answers, setAnswers] = useState([]);\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [feedbacks, setFeedbacks] = useState(null);\n  const [testSummary, setTestSummary] = useState(null);\n  const [error, setError] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [preparationTime, setPreparationTime] = useState(0);\n  const [isPreparing, setIsPreparing] = useState(false);\n  const [autoStart, setAutoStart] = useState(false);\n  const [initializationError, setInitializationError] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n  const [audioFeatures, setAudioFeatures] = useState({});\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const pronunciationAnalyzerRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const recordingTimerRef = useRef(null);\n  const preparationTimerRef = useRef(null);\n  const currentStreamRef = useRef(null);\n\n  // Initialize\n  useEffect(() => {\n    async function init() {\n      try {\n        const test = createIELTSTest();\n        setCurrentTest(test);\n        setAnswers(Array(test.totalQuestions).fill(\"\"));\n        pronunciationAnalyzerRef.current = new SimplePronunciationAnalyzer();\n        setIsReady(true);\n      } catch {\n        setInitializationError(\"Failed to initialize. Refresh page.\");\n        setIsReady(true);\n      }\n    }\n    init();\n    return () => {\n      if (recordingTimerRef.current) clearInterval(recordingTimerRef.current);\n      if (preparationTimerRef.current) clearInterval(preparationTimerRef.current);\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (pronunciationAnalyzerRef.current) {\n        pronunciationAnalyzerRef.current.stop();\n      }\n    };\n  }, []);\n\n  // Auto-start recording after preparation\n  useEffect(() => {\n    if (autoStart && !isPreparing && preparationTime === 0) {\n      const to = setTimeout(() => {\n        toggleRecording();\n        setAutoStart(false);\n      }, 500);\n      return () => clearTimeout(to);\n    }\n  }, [autoStart, preparationTime, isPreparing]);\n\n  // Timer handlers\n  const startRecordingTimer = useCallback(() => {\n    setRecordingTime(0);\n    recordingTimerRef.current = setInterval(() => setRecordingTime(t => t + 1), 1000);\n  }, []);\n  const stopRecordingTimer = useCallback(() => {\n    if (recordingTimerRef.current) {\n      clearInterval(recordingTimerRef.current);\n      recordingTimerRef.current = null;\n    }\n  }, []);\n  const startPreparationTimer = useCallback(() => {\n    setPreparationTime(60);\n    setAutoStart(true);\n    setIsPreparing(true);\n    preparationTimerRef.current = setInterval(() => {\n      setPreparationTime(t => {\n        if (t <= 1) {\n          clearInterval(preparationTimerRef.current);\n          setIsPreparing(false);\n          return 0;\n        }\n        return t - 1;\n      });\n    }, 1000);\n  }, []);\n\n  const formatTime = (seconds) => {\n    const m = Math.floor(seconds / 60);\n    const s = seconds % 60;\n    return `${m}:${s.toString().padStart(2, \"0\")}`;\n  };\n\n  // Navigation helpers\n  const getCurrentPartInfo = () => {\n    if (!currentTest) return null;\n    const len = currentTest.testStructure.part1.questions.length;\n    if (currentQuestionIndex < len) return { part: 1, info: currentTest.testStructure.part1 };\n    if (currentQuestionIndex === len) return { part: 2, info: currentTest.testStructure.part2 };\n    return { part: 3, info: currentTest.testStructure.part3 };\n  };\n\n  const toggleRecording = async () => {\n    if (recording) {\n      stopRecording();\n    } else {\n      await startRecording();\n    }\n  };\n\n  async function startRecording() {\n    if (!(\"webkitSpeechRecognition\" in window) && !(\"SpeechRecognition\" in window)) {\n      setError(\"Speech recognition not supported in this browser.\");\n      return;\n    }\n    if (pronunciationAnalyzerRef.current && !pronunciationAnalyzerRef.current.audioContext) {\n      await pronunciationAnalyzerRef.current.initialize();\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: { echoCancellation: true, noiseSuppression: true, autoGainControl: false } });\n      currentStreamRef.current = stream;\n      if (pronunciationAnalyzerRef.current) {\n        pronunciationAnalyzerRef.current.reset();\n        await pronunciationAnalyzerRef.current.startAnalysis(stream);\n        setIsAnalyzing(true);\n      }\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.lang = \"en-US\";\n      recognition.interimResults = false;\n      recognition.continuous = true;\n      recognition.onstart = () => { setRecording(true); setError(null); startRecordingTimer(); };\n      recognition.onresult = e => {\n        let text = Array.from(e.results).map(r => r[0].transcript).join(\" \");\n        setAnswers(a => { const copy = [...a]; copy[currentQuestionIndex] = text.trim(); return copy; });\n      };\n      recognition.onend = () => {\n        setRecording(false);\n        stopRecordingTimer();\n      };\n      recognition.onerror = e => {\n        setError(`Speech recognition error: ${e.error}`);\n        setRecording(false);\n        stopRecordingTimer();\n        setIsAnalyzing(false);\n      };\n      recognitionRef.current = recognition;\n      recognition.start();\n    } catch (err) {\n      setError(\"Error accessing microphone.\");\n    }\n  }\n\n  function stopRecording() {\n    if (recognitionRef.current) recognitionRef.current.stop();\n    if (pronunciationAnalyzerRef.current && isAnalyzing) {\n      pronunciationAnalyzerRef.current.stop();\n      let feats = pronunciationAnalyzerRef.current.getFeatures();\n      setAudioFeatures(f => ({ ...f, [currentQuestionIndex]: feats }));\n      setIsAnalyzing(false);\n    }\n    if (currentStreamRef.current) {\n      currentStreamRef.current.getTracks().forEach(t => t.stop());\n    }\n    setTimeout(() => {\n      if (currentQuestionIndex < currentTest.totalQuestions - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      }\n    }, 1500);\n  }\n\n  const goPrev = () => {\n    if (currentQuestionIndex > 0) setCurrentQuestionIndex(currentQuestionIndex - 1);\n  };\n\n  async function submitTest() {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await fetch(\"/api/analyze-batch\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          testId: currentTest.testId,\n          questions: currentTest.allQuestions.map(q => q.prompt),\n          answers,\n          audioFeatures,\n          testType: \"IELTS_AUTHENTIC\"\n        }),\n      });\n      if (!res.ok) throw new Error(`Error ${res.status}`);\n      const data = await res.json();\n      setFeedbacks(data.feedbacks);\n      setTestSummary(data.testSummary);\n      setShowResults(true);\n    } catch (e) {\n      setError(\"Submission error, please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  function resetTest() {\n    const test = createIELTSTest();\n    setCurrentTest(test);\n    setAnswers(Array(test.totalQuestions).fill(''));\n    setCurrentQuestionIndex(0);\n    setCurrentPart(1);\n    setFeedbacks(null);\n    setTestSummary(null);\n    setShowResults(false);\n    setError(null);\n    setRecordingTime(0);\n    setPreparationTime(0);\n    setIsPreparing(false);\n    setAutoStart(false);\n    if (pronunciationAnalyzerRef.current) pronunciationAnalyzerRef.current.reset();\n  }\n\n  if (!isReady) return (<div className=\"loading-container\">{initializationError || \"Initializing...\"}</div>);\n  if (!currentTest) return null;\n\n  const partInfo = getCurrentPartInfo();\n\n  const bandData = {\n    labels: ['Part 1', 'Part 2', 'Part 3'],\n    datasets: [{\n      label: 'Bands',\n      data: [\n        testSummary?.part1Band || 0,\n        testSummary?.part2Band || 0,\n        testSummary?.part3Band || 0\n      ],\n      backgroundColor: [\n        getBandColor(testSummary?.part1Band),\n        getBandColor(testSummary?.part2Band),\n        getBandColor(testSummary?.part3Band)\n      ]\n    }]\n  };\n\n  return (\n    <div className=\"speech-evaluator\">\n      {!showResults ? (\n        <>\n          <header className=\"test-header\">\n            <h1>{currentTest.title}</h1>\n            <div className=\"test-info\">\n              <div className=\"test-id\">ID: {currentTest.testId}</div>\n              <div className=\"progress\">Progress: {answers.filter(a => a.trim()).length} / {currentTest.totalQuestions}</div>\n            </div>\n          </header>\n\n          <section className=\"test-content\">\n            <article className=\"part-indicator\">\n              <h2>{partInfo.info.name}</h2>\n              <p className=\"part-duration\">{partInfo.info.duration}</p>\n              {partInfo.part === 1 && <p>Topics: {partInfo.info.topics.join(\", \")}</p>}\n              {partInfo.part === 2 && <p>Preparation: 1 min → Auto record → Speak 1-2 min</p>}\n              {partInfo.part === 3 && <p>Theme: {partInfo.info.theme}</p>}\n            </article>\n\n            <article className=\"question-section\">\n              <div className=\"question-header\">\n                <span className=\"question-number\">Q{currentQuestionIndex + 1}</span>\n                {partInfo.part === 1 && (\n                  <span className=\"topic-badge\">{currentTest.allQuestions[currentQuestionIndex].topicName}</span>\n                )}\n              </div>\n              <h3 className=\"question-prompt\">{currentTest.allQuestions[currentQuestionIndex].prompt}</h3>\n              <div className=\"duration-guide\">Approx. {currentTest.allQuestions[currentQuestionIndex].expectedDuration || 30} seconds</div>\n              <div className=\"answer-section\">\n                <label>Your Answer</label>\n                <textarea\n                  value={answers[currentQuestionIndex]}\n                  onChange={e => {\n                    const val = e.target.value;\n                    setAnswers(a => {\n                      const copy = [...a];\n                      copy[currentQuestionIndex] = val;\n                      return copy;\n                    });\n                  }}\n                  className=\"form-control\"\n                  rows={5}\n                />\n              </div>\n            </article>\n\n            <article className=\"recording-section\">\n              <button\n                onClick={toggleRecording}\n                className={`btn ${recording ? 'btn--danger' : 'btn--primary'}`}\n              >\n                {recording ? \"Stop Recording\" : \"Start Recording\"}\n              </button>\n              <div>Recording Time: {formatTime(recordingTime)}</div>\n            </article>\n\n            <article className=\"navigation-section\">\n              <div className=\"nav-buttons\">\n                <button onClick={goPrev} disabled={currentQuestionIndex === 0} className=\"btn btn--secondary\">Previous</button>\n                <button onClick={() => {\n                  if (currentQuestionIndex < currentTest.totalQuestions - 1) setCurrentQuestionIndex(idx => idx + 1);\n                }} disabled={currentQuestionIndex >= currentTest.totalQuestions -1} className=\"btn btn--secondary\">Next</button>\n                <button onClick={submitTest} disabled={loading || answers.filter(a => a.trim()).length < currentTest.totalQuestions} className=\"btn btn--success\">\n                  {loading ? \"Submitting...\" : \"Submit\"}\n                </button>\n              </div>\n              {error && <div className=\"error-message\">{error}</div>}\n            </article>\n          </section>\n        </>\n      ) : (\n        <section className=\"results-container\">\n          <h2>Results</h2>\n          <section className=\"test-summary\">\n            <div className=\"band-score\" style={{ borderLeftColor: getBandColor(testSummary.part1Band) }}>\n              <span>Part 1</span>\n              <span>{testSummary.part1Band}</span>\n            </div>\n            <div className=\"band-score\" style={{ borderLeftColor: getBandColor(testSummary.part2Band) }}>\n              <span>Part 2</span>\n              <span>{testSummary.part2Band}</span>\n            </div>\n            <div className=\"band-score\" style={{ borderLeftColor: getBandColor(testSummary.part3Band) }}>\n              <span>Part 3</span>\n              <span>{testSummary.part3Band}</span>\n            </div>\n            <div className=\"band-score overall\" style={{ background: `linear-gradient(135deg, ${getBandColor(testSummary.overallBand)}, #0d6f62)` }}>\n              <span>Overall</span>\n              <span>{testSummary.overallBand}</span>\n            </div>\n          </section>\n\n          <section className=\"band-chart-wrapper\" style={{ maxWidth: 450, margin: \"0 auto\" }}>\n            <Bar data={bandData} options={{\n              scales: { y: { min: 0, max: 9, ticks: { stepSize: 0.5 } } },\n              plugins: { legend: { display: false } }\n            }} />\n          </section>\n\n          <button\n            className=\"btn btn--primary export-pdf-btn\"\n            onClick={() => {\n              if (!testSummary) return;\n              const doc = new jsPDF();\n              doc.setFontSize(18);\n              doc.text(\"IELTS Speaking Feedback\", 10, 10);\n              doc.setFontSize(14);\n              doc.text(`Part 1 Band: ${testSummary.part1Band}`, 10, 30);\n              doc.text(`Part 2 Band: ${testSummary.part2Band}`, 10, 40);\n              doc.text(`Part 3 Band: ${testSummary.part3Band}`, 10, 50);\n              doc.text(`Overall Band: ${testSummary.overallBand}`, 10, 60);\n              if (feedbacks) {\n                let y = 80;\n                feedbacks.forEach((fb, idx) => {\n                  doc.text(`Q${idx + 1}: ${fb.question}`, 10, y);\n                  y += 8;\n                  doc.text(`Your Answer: ${fb.answer}`, 10, y);\n                  y += 8;\n                  doc.text(`Feedback: ${fb.feedback}`, 10, y);\n                  y += 8;\n                  const sample = sampleAnswers.find(s => s.question === fb.question)?.sample;\n                  if (sample) {\n                    doc.text(`Sample Answer: ${sample}`, 10, y);\n                    y += 12;\n                  } else {\n                    y += 4;\n                  }\n                  if (y > 270) {\n                    doc.addPage();\n                    y = 20;\n                  }\n                });\n              }\n              doc.save(\"IELTS_Feedback.pdf\");\n            }}\n          >\n            Export PDF\n          </button>\n\n          <section className=\"detailed-feedback\">\n            {feedbacks && feedbacks.map((fb, idx) => (\n              <article key={idx} className=\"feedback-section\">\n                <h3>Q{idx + 1}: {fb.question}</h3>\n                <p><strong>Your Answer:</strong> {fb.answer}</p>\n                <p><strong>Feedback:</strong> {fb.feedback}</p>\n                <p><strong>Sample Answer:</strong> {sampleAnswers.find(s => s.question === fb.question)?.sample || \"Coming soon...\"}</p>\n              </article>\n            ))}\n          </section>\n\n          <button className=\"btn btn--secondary\" onClick={() => {\n            setShowResults(false);\n            setFeedbacks(null);\n            setTestSummary(null);\n            setAnswers(Array(currentTest.totalQuestions).fill(''));\n            setCurrentQuestionIndex(0);\n            setCurrentPart(1);\n          }}>Retake Test</button>\n        </section>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}