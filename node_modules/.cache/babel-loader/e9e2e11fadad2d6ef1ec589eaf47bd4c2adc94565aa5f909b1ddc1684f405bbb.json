{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ielts-speech-evaluator\\\\src\\\\components\\\\SpeechEvaluator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions-corrected\";\nimport \"./SpeechEvaluator.css\";\nimport \"./auto-record-styles.css\";\n\n// Build a real IELTS test\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createIELTSTest = () => {\n  const topics = [...questionBank.part1Topics].sort(() => Math.random() - 0.5);\n  const [first, second] = topics;\n  const introQs = [...first.questions].sort(() => Math.random() - 0.5).slice(0, 4);\n  const secondQs = [...second.questions].sort(() => Math.random() - 0.5).slice(0, Math.random() > 0.5 ? 3 : 4);\n  const part1Qs = [...introQs.map(q => ({\n    ...q,\n    topicName: first.topicName,\n    part: 1,\n    expectedDuration: 30\n  })), ...secondQs.map(q => ({\n    ...q,\n    topicName: second.topicName,\n    part: 1,\n    expectedDuration: 30\n  }))];\n  const cue = questionBank.part2CueCards[Math.floor(Math.random() * questionBank.part2CueCards.length)];\n  const part2Q = {\n    ...cue,\n    part: 2,\n    expectedDuration: 120,\n    preparationTime: 60\n  };\n  const disc = questionBank.part3Discussions.find(d => d.relatedToPart2 === cue.id) || {\n    questions: []\n  };\n  const part3Qs = [...disc.questions].sort(() => Math.random() - 0.5).slice(0, Math.floor(Math.random() * 3) + 4).map(q => ({\n    ...q,\n    part: 3,\n    expectedDuration: 60\n  }));\n  return {\n    testId: `ielts_${Date.now()}`,\n    title: `IELTS Speaking Test – ${new Date().toLocaleDateString()}`,\n    structure: {\n      part1: {\n        name: \"Part 1\",\n        duration: \"4–5 min\",\n        questions: part1Qs,\n        topics: [first.topicName, second.topicName]\n      },\n      part2: {\n        name: \"Part 2\",\n        duration: \"3–4 min\",\n        question: part2Q,\n        cueCard: cue.cueCard\n      },\n      part3: {\n        name: \"Part 3\",\n        duration: \"4–5 min\",\n        questions: part3Qs\n      }\n    },\n    allQuestions: [...part1Qs.map(q => ({\n      prompt: q.prompt,\n      ...q\n    })), {\n      prompt: part2Q.cueCard.mainPrompt,\n      ...part2Q\n    }, ...part3Qs.map(q => ({\n      prompt: q.prompt,\n      ...q\n    }))],\n    total: part1Qs.length + 1 + part3Qs.length\n  };\n};\nclass SimplePronunciationAnalyzer {\n  // ... same as before ...\n}\nexport default function SpeechEvaluator() {\n  _s();\n  const [test, setTest] = useState(null);\n  const [idx, setIdx] = useState(0);\n  const [recording, setRecording] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [prepTime, setPrepTime] = useState(0);\n  const [preparing, setPreparing] = useState(false);\n  const [autoStart, setAutoStart] = useState(false);\n  const recogRef = useRef(null);\n  const recTimerRef = useRef(null);\n  const prepRef = useRef(null);\n  const streamRef = useRef(null);\n  const analyzerRef = useRef(null);\n  useEffect(() => {\n    const init = async () => {\n      const newTest = createIELTSTest();\n      setTest(newTest);\n      setAnswers(Array(newTest.total).fill(\"\"));\n      analyzerRef.current = new SimplePronunciationAnalyzer();\n    };\n    init();\n  }, []);\n\n  // Auto-record start after prep finishes\n  useEffect(() => {\n    if (autoStart && !preparing && prepTime === 0) {\n      const t = setTimeout(() => {\n        startRecording();\n        setAutoStart(false);\n      }, 500);\n      return () => clearTimeout(t);\n    }\n  }, [autoStart, preparing, prepTime]);\n  const formatTime = s => {\n    const m = Math.floor(s / 60),\n      sec = s % 60;\n    return `${m}:${sec.toString().padStart(2, \"0\")}`;\n  };\n  const startPrep = () => {\n    setPreparing(true);\n    setPrepTime(60);\n    setAutoStart(true);\n    prepRef.current = setInterval(() => {\n      setPrepTime(p => {\n        if (p <= 1) {\n          clearInterval(prepRef.current);\n          setPreparing(false);\n          return 0;\n        }\n        return p - 1;\n      });\n    }, 1000);\n  };\n  const goNext = () => {\n    if (idx < test.total - 1) setIdx(idx + 1);\n  };\n  const stopRecording = () => {\n    var _recogRef$current, _analyzerRef$current, _streamRef$current;\n    (_recogRef$current = recogRef.current) === null || _recogRef$current === void 0 ? void 0 : _recogRef$current.stop();\n    (_analyzerRef$current = analyzerRef.current) === null || _analyzerRef$current === void 0 ? void 0 : _analyzerRef$current.stopAnalysis();\n    (_streamRef$current = streamRef.current) === null || _streamRef$current === void 0 ? void 0 : _streamRef$current.getTracks().forEach(t => t.stop());\n    setRecording(false);\n    clearInterval(recTimerRef.current);\n    setTimeout(goNext, 200);\n  };\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      streamRef.current = stream;\n      await analyzerRef.current.initialize();\n      await analyzerRef.current.startAnalysis(stream);\n      const SpeechRec = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const rec = new SpeechRec();\n      rec.lang = \"en-US\";\n      rec.continuous = true;\n      rec.interimResults = false;\n      rec.onstart = () => {\n        setRecording(true);\n        setTimer(0);\n        recTimerRef.current = setInterval(() => setTimer(t => t + 1), 1000);\n      };\n      rec.onresult = e => {\n        const text = Array.from(e.results).map(r => r[0].transcript).join(\" \");\n        setAnswers(a => {\n          a[idx] = text.trim();\n          return [...a];\n        });\n      };\n      rec.onend = stopRecording;\n      rec.onerror = () => stopRecording();\n      recogRef.current = rec;\n      rec.start();\n    } catch {\n      // handle error\n    }\n  };\n  if (!test) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 21\n  }, this);\n  const part1Len = test.structure.part1.questions.length;\n  const part2Idx = part1Len;\n  const part = idx < part1Len ? 1 : idx === part2Idx ? 2 : 3;\n  const q = test.allQuestions[idx];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-evaluator\",\n    children: [part === 2 && !preparing && timer === 0 && !recording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"part2-preparation-intro\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Part 2: Preparation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startPrep,\n        className: \"btn-primary\",\n        children: \"Start 1-min Prep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), preparing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preparation-phase\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Prep: \", formatTime(prepTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cue-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: q.cueCard.mainPrompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: q.cueCard.bulletPoints.map((b, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: b\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 52\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), !preparing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: part === 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cue-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: q.cueCard.mainPrompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: q.cueCard.bulletPoints.map((b, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: b\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 54\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: q.prompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), recording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auto-recording-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"recording-dot\",\n        children: \"\\u25CF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Recording: \", formatTime(timer)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        className: \"record-button recording\",\n        children: \"\\u23F9\\uFE0F Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), !recording && part !== 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      className: \"record-button\",\n      children: \"\\uD83C\\uDFA4 Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"answer-section\",\n      value: answers[idx] || \"\",\n      onChange: e => setAnswers(a => {\n        a[idx] = e.target.value;\n        return [...a];\n      }),\n      disabled: recording,\n      placeholder: \"Your response...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => idx > 0 && setIdx(idx - 1),\n          children: \"\\u2190 Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goNext,\n          children: \"Next \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(SpeechEvaluator, \"51dmclbj4akLvnSEQRaZaJaJ2oc=\");\n_c = SpeechEvaluator;\nvar _c;\n$RefreshReg$(_c, \"SpeechEvaluator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","questionBank","jsxDEV","_jsxDEV","createIELTSTest","topics","part1Topics","sort","Math","random","first","second","introQs","questions","slice","secondQs","part1Qs","map","q","topicName","part","expectedDuration","cue","part2CueCards","floor","length","part2Q","preparationTime","disc","part3Discussions","find","d","relatedToPart2","id","part3Qs","testId","Date","now","title","toLocaleDateString","structure","part1","name","duration","part2","question","cueCard","part3","allQuestions","prompt","mainPrompt","total","SimplePronunciationAnalyzer","SpeechEvaluator","_s","test","setTest","idx","setIdx","recording","setRecording","timer","setTimer","answers","setAnswers","prepTime","setPrepTime","preparing","setPreparing","autoStart","setAutoStart","recogRef","recTimerRef","prepRef","streamRef","analyzerRef","init","newTest","Array","fill","current","t","setTimeout","startRecording","clearTimeout","formatTime","s","m","sec","toString","padStart","startPrep","setInterval","p","clearInterval","goNext","stopRecording","_recogRef$current","_analyzerRef$current","_streamRef$current","stop","stopAnalysis","getTracks","forEach","stream","navigator","mediaDevices","getUserMedia","audio","initialize","startAnalysis","SpeechRec","window","SpeechRecognition","webkitSpeechRecognition","rec","lang","continuous","interimResults","onstart","onresult","e","text","from","results","r","transcript","join","a","trim","onend","onerror","start","children","fileName","_jsxFileName","lineNumber","columnNumber","part1Len","part2Idx","className","onClick","bulletPoints","b","i","value","onChange","target","disabled","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/ielts-speech-evaluator/src/components/SpeechEvaluator.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions-corrected\";\nimport \"./SpeechEvaluator.css\";\nimport \"./auto-record-styles.css\";\n\n// Build a real IELTS test\nconst createIELTSTest = () => {\n  const topics = [...questionBank.part1Topics].sort(() => Math.random() - 0.5);\n  const [first, second] = topics;\n  const introQs = [...first.questions].sort(() => Math.random() - 0.5).slice(0, 4);\n  const secondQs = [...second.questions].sort(() => Math.random() - 0.5).slice(0, Math.random() > 0.5 ? 3 : 4);\n  const part1Qs = [\n    ...introQs.map(q => ({ ...q, topicName: first.topicName, part: 1, expectedDuration: 30 })),\n    ...secondQs.map(q => ({ ...q, topicName: second.topicName, part: 1, expectedDuration: 30 }))\n  ];\n\n  const cue = questionBank.part2CueCards[Math.floor(Math.random() * questionBank.part2CueCards.length)];\n  const part2Q = { ...cue, part: 2, expectedDuration: 120, preparationTime: 60 };\n\n  const disc = questionBank.part3Discussions.find(d => d.relatedToPart2 === cue.id) || { questions: [] };\n  const part3Qs = [...disc.questions].sort(() => Math.random() - 0.5).slice(0, Math.floor(Math.random() * 3) + 4)\n    .map(q => ({ ...q, part: 3, expectedDuration: 60 }));\n\n  return {\n    testId: `ielts_${Date.now()}`,\n    title: `IELTS Speaking Test – ${new Date().toLocaleDateString()}`,\n    structure: {\n      part1: { name: \"Part 1\", duration: \"4–5 min\", questions: part1Qs, topics: [first.topicName, second.topicName] },\n      part2: { name: \"Part 2\", duration: \"3–4 min\", question: part2Q, cueCard: cue.cueCard },\n      part3: { name: \"Part 3\", duration: \"4–5 min\", questions: part3Qs }\n    },\n    allQuestions: [\n      ...part1Qs.map(q => ({ prompt: q.prompt, ...q })),\n      { prompt: part2Q.cueCard.mainPrompt, ...part2Q },\n      ...part3Qs.map(q => ({ prompt: q.prompt, ...q }))\n    ],\n    total: part1Qs.length + 1 + part3Qs.length\n  };\n};\n\nclass SimplePronunciationAnalyzer {\n  // ... same as before ...\n}\n\nexport default function SpeechEvaluator() {\n  const [test, setTest] = useState(null);\n  const [idx, setIdx] = useState(0);\n  const [recording, setRecording] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [prepTime, setPrepTime] = useState(0);\n  const [preparing, setPreparing] = useState(false);\n  const [autoStart, setAutoStart] = useState(false);\n\n  const recogRef = useRef(null);\n  const recTimerRef = useRef(null);\n  const prepRef = useRef(null);\n  const streamRef = useRef(null);\n  const analyzerRef = useRef(null);\n\n  useEffect(() => {\n    const init = async () => {\n      const newTest = createIELTSTest();\n      setTest(newTest);\n      setAnswers(Array(newTest.total).fill(\"\"));\n      analyzerRef.current = new SimplePronunciationAnalyzer();\n    };\n    init();\n  }, []);\n\n  // Auto-record start after prep finishes\n  useEffect(() => {\n    if (autoStart && !preparing && prepTime === 0) {\n      const t = setTimeout(() => {\n        startRecording();\n        setAutoStart(false);\n      }, 500);\n      return () => clearTimeout(t);\n    }\n  }, [autoStart, preparing, prepTime]);\n\n  const formatTime = s => {\n    const m = Math.floor(s / 60), sec = s % 60;\n    return `${m}:${sec.toString().padStart(2, \"0\")}`;\n  };\n\n  const startPrep = () => {\n    setPreparing(true);\n    setPrepTime(60);\n    setAutoStart(true);\n    prepRef.current = setInterval(() => {\n      setPrepTime(p => {\n        if (p <= 1) {\n          clearInterval(prepRef.current);\n          setPreparing(false);\n          return 0;\n        }\n        return p - 1;\n      });\n    }, 1000);\n  };\n\n  const goNext = () => {\n    if (idx < test.total - 1) setIdx(idx + 1);\n  };\n\n  const stopRecording = () => {\n    recogRef.current?.stop();\n    analyzerRef.current?.stopAnalysis();\n    streamRef.current?.getTracks().forEach(t => t.stop());\n    setRecording(false);\n    clearInterval(recTimerRef.current);\n    setTimeout(goNext, 200);\n  };\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      streamRef.current = stream;\n      await analyzerRef.current.initialize();\n      await analyzerRef.current.startAnalysis(stream);\n\n      const SpeechRec = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const rec = new SpeechRec();\n      rec.lang = \"en-US\"; rec.continuous = true; rec.interimResults = false;\n      rec.onstart = () => {\n        setRecording(true);\n        setTimer(0);\n        recTimerRef.current = setInterval(() => setTimer(t => t + 1), 1000);\n      };\n      rec.onresult = e => {\n        const text = Array.from(e.results).map(r => r[0].transcript).join(\" \");\n        setAnswers(a => { a[idx] = text.trim(); return [...a]; });\n      };\n      rec.onend = stopRecording;\n      rec.onerror = () => stopRecording();\n      recogRef.current = rec;\n      rec.start();\n    } catch {\n      // handle error\n    }\n  };\n\n  if (!test) return <div>Loading...</div>;\n\n  const part1Len = test.structure.part1.questions.length;\n  const part2Idx = part1Len;\n  const part = idx < part1Len ? 1 : idx === part2Idx ? 2 : 3;\n  const q = test.allQuestions[idx];\n\n  return (\n    <div className=\"speech-evaluator\">\n      {part === 2 && !preparing && timer === 0 && !recording && (\n        <div className=\"part2-preparation-intro\">\n          <h3>Part 2: Preparation</h3>\n          <button onClick={startPrep} className=\"btn-primary\">Start 1-min Prep</button>\n        </div>\n      )}\n\n      {preparing && (\n        <div className=\"preparation-phase\">\n          <h3>Prep: {formatTime(prepTime)}</h3>\n          <div className=\"cue-card\">\n            <h4>{q.cueCard.mainPrompt}</h4>\n            <ul>{q.cueCard.bulletPoints.map((b,i)=><li key={i}>{b}</li>)}</ul>\n          </div>\n        </div>\n      )}\n\n      {!preparing && (\n        <div className=\"question-section\">\n          {part === 2 ? (\n            <div className=\"cue-card\">\n              <h3>{q.cueCard.mainPrompt}</h3>\n              <ul>{q.cueCard.bulletPoints.map((b,i)=><li key={i}>{b}</li>)}</ul>\n            </div>\n          ) : (\n            <h3>{q.prompt}</h3>\n          )}\n        </div>\n      )}\n\n      {recording && (\n        <div className=\"auto-recording-status\">\n          <span className=\"recording-dot\">●</span>\n          <span>Recording: {formatTime(timer)}</span>\n          <button onClick={stopRecording} className=\"record-button recording\">⏹️ Stop</button>\n        </div>\n      )}\n\n      {!recording && part !== 2 && (\n        <button onClick={startRecording} className=\"record-button\">🎤 Start Recording</button>\n      )}\n\n      <textarea\n        className=\"answer-section\"\n        value={answers[idx] || \"\"}\n        onChange={e => setAnswers(a => { a[idx] = e.target.value; return [...a]; })}\n        disabled={recording}\n        placeholder=\"Your response...\"\n      />\n\n      {/* Navigation hidden via CSS (.nav-buttons { display: none; }) */}\n      <div className=\"navigation-section\">\n        <div className=\"nav-buttons\">\n          <button onClick={() => idx>0&&setIdx(idx-1)}>← Prev</button>\n          <button onClick={goNext}>Next →</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}