{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ielts-speech-evaluator\\\\src\\\\components\\\\SpeechEvaluator.jsx\",\n  _s = $RefreshSig$();\n// Enhanced SpeechEvaluator.jsx - Auto-Start Recording after Part 2 Preparation\n// Part 1: 7-8 questions from 2-3 topics, Part 2: 1 cue card (auto-record), Part 3: 4-6 discussion questions\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions-corrected\";\nimport './SpeechEvaluator.css';\n\n// Function to create authentic IELTS test structure (same as before)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst createIELTSTest = () => {\n  // PART 1: Select 2-3 topics and get 7-8 questions total\n  const availableTopics = [...questionBank.part1Topics];\n  const shuffledTopics = availableTopics.sort(() => Math.random() - 0.5);\n\n  // First topic: 3-4 questions (mandatory introductory topic)\n  const introTopic = shuffledTopics[0];\n  const introQuestions = [...introTopic.questions].sort(() => Math.random() - 0.5).slice(0, 2);\n\n  // Second topic: 3-4 questions\n  const secondTopic = shuffledTopics[1];\n  const secondQuestions = [...secondTopic.questions].sort(() => Math.random() - 0.5).slice(0, Math.random() > 0.5 ? 2 : 3);\n\n  // Build Part 1 questions (7-8 total)\n  let part1Questions = [];\n\n  // Add questions from first topic\n  introQuestions.forEach(q => {\n    part1Questions.push({\n      ...q,\n      topicName: introTopic.topicName,\n      part: 1,\n      expectedDuration: 30 // 20-30 seconds per answer\n    });\n  });\n\n  // Add questions from second topic\n  secondQuestions.forEach(q => {\n    part1Questions.push({\n      ...q,\n      topicName: secondTopic.topicName,\n      part: 1,\n      expectedDuration: 30\n    });\n  });\n\n  // PART 2: Select 1 cue card\n  const cueCards = [...questionBank.part2CueCards];\n  const selectedCueCard = cueCards[Math.floor(Math.random() * cueCards.length)];\n  const part2Question = {\n    ...selectedCueCard,\n    part: 2,\n    expectedDuration: 120,\n    // 1-2 minutes speaking\n    preparationTime: 60 // 1 minute preparation\n  };\n\n  // PART 3: Select 4-6 discussion questions related to Part 2 topic\n  const relatedDiscussion = questionBank.part3Discussions.find(disc => disc.relatedToPart2 === selectedCueCard.id);\n  let part3Questions = [];\n  if (relatedDiscussion) {\n    const shuffledDiscQuestions = [...relatedDiscussion.questions].sort(() => Math.random() - 0.5);\n    const numQuestions = Math.floor(Math.random() * 3) + 4; // 4-6 questions\n    part3Questions = shuffledDiscQuestions.slice(0, numQuestions).map(q => ({\n      ...q,\n      part: 3,\n      topicTheme: relatedDiscussion.topicTheme,\n      expectedDuration: 60 // 30-60 seconds per answer\n    }));\n  }\n  return {\n    testId: `ielts_test_${Date.now()}`,\n    title: `IELTS Speaking Test - ${new Date().toLocaleDateString()}`,\n    testStructure: {\n      part1: {\n        name: \"Part 1: Introduction & Interview\",\n        duration: \"4-5 minutes\",\n        questions: part1Questions,\n        topics: [introTopic.topicName, secondTopic.topicName]\n      },\n      part2: {\n        name: \"Part 2: Individual Long Turn\",\n        duration: \"3-4 minutes\",\n        question: part2Question,\n        cueCard: selectedCueCard.cueCard\n      },\n      part3: {\n        name: \"Part 3: Two-way Discussion\",\n        duration: \"4-5 minutes\",\n        questions: part3Questions,\n        theme: (relatedDiscussion === null || relatedDiscussion === void 0 ? void 0 : relatedDiscussion.topicTheme) || \"General Discussion\"\n      }\n    },\n    // Flatten all questions for sequential navigation\n    allQuestions: [...part1Questions.map(q => ({\n      ...q,\n      prompt: q.prompt\n    })), {\n      ...part2Question,\n      prompt: part2Question.cueCard.mainPrompt\n    }, ...part3Questions.map(q => ({\n      ...q,\n      prompt: q.prompt\n    }))],\n    totalQuestions: part1Questions.length + 1 + part3Questions.length\n  };\n};\n\n// Pronunciation Analyzer Class (same as before)\nclass SimplePronunciationAnalyzer {\n  constructor() {\n    this.audioContext = null;\n    this.analyser = null;\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isAnalyzing = false;\n  }\n  async initialize() {\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      if (this.audioContext.state === 'suspended') {\n        await this.audioContext.resume();\n      }\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize audio context:', error);\n      return false;\n    }\n  }\n  async startAnalysis(stream) {\n    if (!this.audioContext) {\n      throw new Error('Audio context not initialized');\n    }\n    const source = this.audioContext.createMediaStreamSource(stream);\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = 2048;\n    this.analyser.smoothingTimeConstant = 0.8;\n    source.connect(this.analyser);\n    this.isAnalyzing = true;\n    this.startFeatureExtraction();\n  }\n  startFeatureExtraction() {\n    const bufferLength = this.analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    const timeDataArray = new Float32Array(this.analyser.fftSize);\n    const extractFeatures = () => {\n      if (!this.isAnalyzing) return;\n      this.analyser.getFloatFrequencyData(dataArray);\n      this.analyser.getFloatTimeDomainData(timeDataArray);\n      const timestamp = this.audioContext.currentTime;\n      const rms = this.calculateRMS(timeDataArray);\n      const zcr = this.calculateZCR(timeDataArray);\n      const spectralCentroid = this.calculateSpectralCentroid(dataArray);\n      const pitch = this.detectPitch(timeDataArray);\n      this.features.rms.push({\n        value: rms,\n        timestamp\n      });\n      this.features.zcr.push({\n        value: zcr,\n        timestamp\n      });\n      this.features.spectralCentroid.push({\n        value: spectralCentroid,\n        timestamp\n      });\n      if (pitch && pitch > 50 && pitch < 800) {\n        this.features.pitch.push({\n          frequency: pitch,\n          timestamp\n        });\n      }\n      requestAnimationFrame(extractFeatures);\n    };\n    extractFeatures();\n  }\n  calculateRMS(timeData) {\n    let sum = 0;\n    for (let i = 0; i < timeData.length; i++) {\n      sum += timeData[i] * timeData[i];\n    }\n    return Math.sqrt(sum / timeData.length);\n  }\n  calculateZCR(timeData) {\n    let zeroCrossings = 0;\n    for (let i = 1; i < timeData.length; i++) {\n      if (timeData[i] >= 0 !== timeData[i - 1] >= 0) {\n        zeroCrossings++;\n      }\n    }\n    return zeroCrossings / (timeData.length - 1);\n  }\n  calculateSpectralCentroid(freqData) {\n    let weightedSum = 0;\n    let magnitudeSum = 0;\n    for (let i = 0; i < freqData.length; i++) {\n      const magnitude = Math.pow(10, freqData[i] / 10);\n      const frequency = i * this.audioContext.sampleRate / (2 * freqData.length);\n      weightedSum += frequency * magnitude;\n      magnitudeSum += magnitude;\n    }\n    return magnitudeSum > 0 ? weightedSum / magnitudeSum : 0;\n  }\n  detectPitch(timeData) {\n    const sampleRate = this.audioContext.sampleRate;\n    const minPeriod = Math.floor(sampleRate / 800);\n    const maxPeriod = Math.floor(sampleRate / 50);\n    let bestCorrelation = 0;\n    let bestPeriod = 0;\n    for (let period = minPeriod; period < Math.min(maxPeriod, timeData.length / 2); period++) {\n      let correlation = 0;\n      for (let i = 0; i < timeData.length - period; i++) {\n        correlation += timeData[i] * timeData[i + period];\n      }\n      if (correlation > bestCorrelation) {\n        bestCorrelation = correlation;\n        bestPeriod = period;\n      }\n    }\n    return bestPeriod > 0 ? sampleRate / bestPeriod : 0;\n  }\n  stopAnalysis() {\n    this.isAnalyzing = false;\n  }\n  getFeatures() {\n    return {\n      ...this.features\n    };\n  }\n  reset() {\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isAnalyzing = false;\n  }\n}\n\n// Main Speech Evaluator Component\nfunction SpeechEvaluator() {\n  _s();\n  // State management\n  const [currentTest, setCurrentTest] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentPart, setCurrentPart] = useState(1);\n  const [answers, setAnswers] = useState([]);\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [feedbacks, setFeedbacks] = useState(null);\n  const [testSummary, setTestSummary] = useState(null);\n  const [error, setError] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const getBandColorClass = band => {\n    if (band >= 7.0) return 'high-band';\n    if (band >= 5.5) return 'mid-band';\n    return 'low-band';\n  };\n  const getBandDescription = band => {\n    if (band >= 8.5) return 'Expert User';\n    if (band >= 7.0) return 'Good User';\n    if (band >= 6.0) return 'Competent User';\n    if (band >= 5.0) return 'Modest User';\n    return 'Limited User';\n  };\n  // Part 2 specific states\n  const [preparationTime, setPreparationTime] = useState(0);\n  const [isPreparingPart2, setIsPreparingPart2] = useState(false);\n  const [preparationNotes, setPreparationNotes] = useState(\"\");\n  const [autoStartRecording, setAutoStartRecording] = useState(false); // NEW: Flag for auto-start\n\n  // Component ready state\n  const [isComponentReady, setIsComponentReady] = useState(false);\n  const [initializationError, setInitializationError] = useState(null);\n\n  // Pronunciation analysis state\n  const [pronunciationAnalyzer, setPronunciationAnalyzer] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState({});\n  const [isAnalyzingPronunciation, setIsAnalyzingPronunciation] = useState(false);\n\n  // Refs\n  const recognitionRef = useRef(null);\n  const recordingTimerRef = useRef(null);\n  const preparationTimerRef = useRef(null);\n  const currentStreamRef = useRef(null);\n\n  // Initialize component\n  useEffect(() => {\n    const initializeComponent = async () => {\n      try {\n        const test = createIELTSTest();\n        setCurrentTest(test);\n        setAnswers(Array(test.totalQuestions).fill(\"\"));\n        const analyzer = new SimplePronunciationAnalyzer();\n        setPronunciationAnalyzer(analyzer);\n        setIsComponentReady(true);\n        setInitializationError(null);\n      } catch (error) {\n        console.error('Component initialization failed:', error);\n        setInitializationError('Failed to initialize speech evaluator. Please refresh the page.');\n        setIsComponentReady(true);\n      }\n    };\n    initializeComponent();\n  }, []);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (recordingTimerRef.current) clearInterval(recordingTimerRef.current);\n      if (preparationTimerRef.current) clearInterval(preparationTimerRef.current);\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (pronunciationAnalyzer) {\n        pronunciationAnalyzer.stopAnalysis();\n      }\n    };\n  }, [pronunciationAnalyzer]);\n\n  // NEW: Effect to handle auto-start recording after preparation\n  useEffect(() => {\n    if (autoStartRecording && !isPreparingPart2 && preparationTime === 0) {\n      // Small delay to ensure preparation phase is fully complete\n      const autoStartTimeout = setTimeout(() => {\n        startRecording();\n        setAutoStartRecording(false);\n      }, 500);\n      return () => clearTimeout(autoStartTimeout);\n    }\n  }, [autoStartRecording, isPreparingPart2, preparationTime]);\n\n  // Timer functions\n  const startRecordingTimer = useCallback(() => {\n    setRecordingTime(0);\n    recordingTimerRef.current = setInterval(() => {\n      setRecordingTime(prev => prev + 1);\n    }, 1000);\n  }, []);\n  const stopRecordingTimer = useCallback(() => {\n    if (recordingTimerRef.current) {\n      clearInterval(recordingTimerRef.current);\n      recordingTimerRef.current = null;\n    }\n  }, []);\n\n  // UPDATED: Preparation timer with auto-start flag\n  const startPreparationTimer = useCallback(() => {\n    setPreparationTime(60); // 1 minute for Part 2\n    setAutoStartRecording(true); // Set flag to auto-start recording\n    preparationTimerRef.current = setInterval(() => {\n      setPreparationTime(prev => {\n        if (prev <= 1) {\n          clearInterval(preparationTimerRef.current);\n          setIsPreparingPart2(false);\n          // Auto-start will be triggered by useEffect\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  }, []);\n  const formatTime = useCallback(seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  // Determine current part based on question index\n  const getCurrentPartInfo = () => {\n    if (!currentTest) return null;\n    const part1Length = currentTest.testStructure.part1.questions.length;\n    const part2Index = part1Length;\n    const part3StartIndex = part1Length + 1;\n    if (currentQuestionIndex < part1Length) {\n      return {\n        part: 1,\n        info: currentTest.testStructure.part1\n      };\n    } else if (currentQuestionIndex === part2Index) {\n      return {\n        part: 2,\n        info: currentTest.testStructure.part2\n      };\n    } else {\n      return {\n        part: 3,\n        info: currentTest.testStructure.part3\n      };\n    }\n  };\n\n  // Start Part 2 preparation\n  const startPart2Preparation = () => {\n    setIsPreparingPart2(true);\n    setPreparationNotes(\"\");\n    startPreparationTimer();\n  };\n\n  // UPDATED: Separated recording logic for reuse\n  const startRecording = async () => {\n    // Initialize AudioContext on first user interaction\n    if (pronunciationAnalyzer && !pronunciationAnalyzer.audioContext) {\n      try {\n        await pronunciationAnalyzer.initialize();\n      } catch (error) {\n        console.warn('AudioContext initialization error:', error);\n      }\n    }\n\n    // Check browser support\n    if (!(\"webkitSpeechRecognition\" in window) && !(\"SpeechRecognition\" in window)) {\n      setError(\"Speech recognition is not supported in this browser. Please use Chrome or Edge.\");\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: false\n        }\n      });\n      currentStreamRef.current = stream;\n\n      // Start pronunciation analysis\n      if (pronunciationAnalyzer && pronunciationAnalyzer.audioContext) {\n        try {\n          pronunciationAnalyzer.reset();\n          await pronunciationAnalyzer.startAnalysis(stream);\n          setIsAnalyzingPronunciation(true);\n        } catch (analysisError) {\n          console.warn('Pronunciation analysis failed:', analysisError);\n        }\n      }\n\n      // Setup speech recognition\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.lang = \"en-US\";\n      recognition.continuous = true;\n      recognition.interimResults = false;\n      recognition.onstart = () => {\n        setRecording(true);\n        setError(null);\n        startRecordingTimer();\n      };\n      recognition.onresult = event => {\n        const speechText = Array.from(event.results).map(result => result[0].transcript).join(\" \");\n        setAnswers(prev => {\n          const newAnswers = [...prev];\n          newAnswers[currentQuestionIndex] = speechText.trim();\n          return newAnswers;\n        });\n      };\n      recognition.onend = () => {\n        setRecording(false);\n        stopRecordingTimer();\n      };\n      recognition.onerror = event => {\n        setError(`Speech recognition error: ${event.error}. Please try again.`);\n        setRecording(false);\n        stopRecordingTimer();\n        setIsAnalyzingPronunciation(false);\n      };\n      recognitionRef.current = recognition;\n      recognition.start();\n    } catch (err) {\n      setError(\"Failed to access microphone. Please check permissions and try again.\");\n      console.error(\"Microphone access error:\", err);\n    }\n  };\n  const stopRecording = () => {\n    var _recognitionRef$curre;\n    (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n    if (pronunciationAnalyzer && isAnalyzingPronunciation) {\n      pronunciationAnalyzer.stopAnalysis();\n      const features = pronunciationAnalyzer.getFeatures();\n      setAudioFeatures(prev => ({\n        ...prev,\n        [currentQuestionIndex]: features\n      }));\n      setIsAnalyzingPronunciation(false);\n    }\n    if (currentStreamRef.current) {\n      currentStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n    // Add auto-advance to next question (Part 3)\n    setTimeout(goNext, 1500);\n  };\n\n  // UPDATED: Toggle recording function\n  const toggleRecording = async () => {\n    if (recording) {\n      stopRecording();\n    } else {\n      await startRecording();\n    }\n  };\n\n  // Navigation functions\n  const goNext = () => {\n    if (currentQuestionIndex < currentTest.totalQuestions - 1) {\n      const nextIndex = currentQuestionIndex + 1;\n      const nextPartInfo = getCurrentPartInfo();\n\n      // Check if moving to Part 2\n      if ((nextPartInfo === null || nextPartInfo === void 0 ? void 0 : nextPartInfo.part) === 2 && currentQuestionIndex + 1 === currentTest.testStructure.part1.questions.length) {\n        setCurrentPart(2);\n      } else if ((nextPartInfo === null || nextPartInfo === void 0 ? void 0 : nextPartInfo.part) === 3 && !currentPart === 3) {\n        setCurrentPart(3);\n      }\n      setCurrentQuestionIndex(nextIndex);\n    }\n  };\n  const goPrev = () => {\n    if (currentQuestionIndex > 0) {\n      const prevIndex = currentQuestionIndex - 1;\n      setCurrentQuestionIndex(prevIndex);\n\n      // Update current part\n      const partInfo = getCurrentPartInfo();\n      if (partInfo) {\n        setCurrentPart(partInfo.part);\n      }\n    }\n  };\n\n  // Submit test\n  // Submit test - UPDATED to show results even without API\n  const submitTest = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"/api/analyze-batch\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          testId: currentTest.testId,\n          questions: currentTest.allQuestions.map(q => q.prompt),\n          answers,\n          audioFeatures,\n          testType: \"IELTS_AUTHENTIC\"\n        })\n      });\n      if (!response.ok) throw new Error(`Server error: ${response.status}`);\n      const data = await response.json();\n      setFeedbacks(data.feedbacks);\n      setTestSummary(data.testSummary);\n      setShowResults(true);\n    } catch (err) {\n      console.error(\"Analysis error:\", err);\n\n      // SHOW RESULTS ANYWAY with mock data for demonstration\n      setTestSummary({\n        overallBand: 6.5,\n        part1Band: 6.0,\n        part2Band: 6.5,\n        part3Band: 7.0\n      });\n      setFeedbacks(currentTest.allQuestions.map((q, index) => ({\n        question: q.prompt,\n        answer: answers[index] || \"No response provided\",\n        feedback: \"Detailed feedback will be available when connected to the analysis API.\"\n      })));\n      setShowResults(true);\n      setError(null); // Clear the error so results show properly\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset test\n  const resetTest = () => {\n    const newTest = createIELTSTest();\n    setCurrentTest(newTest);\n    setAnswers(Array(newTest.totalQuestions).fill(\"\"));\n    setCurrentQuestionIndex(0);\n    setCurrentPart(1);\n    setFeedbacks(null);\n    setTestSummary(null);\n    setShowResults(false);\n    setError(null);\n    setRecordingTime(0);\n    setPreparationTime(0);\n    setIsPreparingPart2(false);\n    setPreparationNotes(\"\");\n    setAutoStartRecording(false);\n    if (pronunciationAnalyzer) pronunciationAnalyzer.reset();\n  };\n\n  // Get band color\n  const getBandColor = band => {\n    if (band >= 8.5) return \"#2e7d32\";\n    if (band >= 7) return \"#388e3c\";\n    if (band >= 6.5) return \"#689f38\";\n    if (band >= 6) return \"#afb42b\";\n    if (band >= 5.5) return \"#f57f17\";\n    if (band >= 5) return \"#ff8f00\";\n    if (band >= 4) return \"#d32f2f\";\n    return \"#d32f2f\";\n  };\n\n  // Loading state\n  if (!isComponentReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading IELTS Speaking Test...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this), initializationError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: initializationError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Setting up authentic IELTS format with auto-recording...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Get current question and part info\n  const currentQuestion = currentTest.allQuestions[currentQuestionIndex];\n  const currentPartInfo = getCurrentPartInfo();\n\n  // Results view\n  {\n    showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container enhanced\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"IELTS Speaking Test Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overall-score-circle\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"band-number\",\n              children: (testSummary === null || testSummary === void 0 ? void 0 : testSummary.overallBand) || '6.5'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"band-label\",\n              children: \"Overall Band\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"band-scores-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Performance by Part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"band-scores-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `band-score enhanced ${getBandColorClass((testSummary === null || testSummary === void 0 ? void 0 : testSummary.part1Band) || 6.0)}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"part-name\",\n              children: \"Part 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-value\",\n              children: (testSummary === null || testSummary === void 0 ? void 0 : testSummary.part1Band) || '6.0'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-description\",\n              children: getBandDescription((testSummary === null || testSummary === void 0 ? void 0 : testSummary.part1Band) || 6.0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `band-score enhanced ${getBandColorClass((testSummary === null || testSummary === void 0 ? void 0 : testSummary.part2Band) || 6.5)}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"part-name\",\n              children: \"Part 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-value\",\n              children: (testSummary === null || testSummary === void 0 ? void 0 : testSummary.part2Band) || '6.5'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-description\",\n              children: getBandDescription((testSummary === null || testSummary === void 0 ? void 0 : testSummary.part2Band) || 6.5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `band-score enhanced ${getBandColorClass((testSummary === null || testSummary === void 0 ? void 0 : testSummary.part3Band) || 7.0)}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"part-name\",\n              children: \"Part 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-value\",\n              children: (testSummary === null || testSummary === void 0 ? void 0 : testSummary.part3Band) || '7.0'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-description\",\n              children: getBandDescription((testSummary === null || testSummary === void 0 ? void 0 : testSummary.part3Band) || 7.0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailed-feedback enhanced\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Detailed Question-by-Question Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 7\n        }, this), currentTest === null || currentTest === void 0 ? void 0 : currentTest.allQuestions.map((question, index) => {\n          var _answers$index, _answers$index2, _answers$index3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-text\",\n              children: [\"Question \", index + 1, \": \", question.prompt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `response-status ${(_answers$index = answers[index]) !== null && _answers$index !== void 0 && _answers$index.trim() ? 'complete-response' : 'no-response'}`,\n              children: (_answers$index2 = answers[index]) !== null && _answers$index2 !== void 0 && _answers$index2.trim() ? 'Response Provided' : 'No Response Provided'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 11\n            }, this), ((_answers$index3 = answers[index]) === null || _answers$index3 === void 0 ? void 0 : _answers$index3.trim()) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-response\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Your Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 15\n              }, this), \" \", answers[index]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 13\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 9\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetTest,\n          className: \"btn-primary TakeAnother\",\n          children: \"Take Another Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 3\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-evaluator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress\",\n          children: [\"Question \", currentQuestionIndex + 1, \" of \", currentTest.totalQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${currentQuestionIndex / currentTest.totalQuestions * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"part-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.info.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"part-duration\",\n          children: [\"Duration: \", currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.info.duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"part-description\",\n          children: [\"Topics: \", currentPartInfo.info.topics.join(\" & \"), \" (\", currentPartInfo.info.questions.length, \" questions)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 13\n        }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 2 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"part-description\",\n          children: \"\\uD83D\\uDCDD 1-minute preparation \\u2192 \\uD83C\\uDFA4 Auto-recording starts \\u2192 \\uD83D\\uDDE3\\uFE0F Speak for 1-2 minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 13\n        }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 3 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"part-description\",\n          children: [\"Theme: \", currentPartInfo.info.theme, \" (\", currentPartInfo.info.questions.length, \" questions)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 9\n      }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 2 && !isPreparingPart2 && preparationTime === 0 && !recording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"part2-preparation-intro\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCDD Part 2: Preparation Phase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click the button below to see your cue card and start the 1-minute preparation timer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"After preparation ends, recording will start automatically.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startPart2Preparation,\n          className: \"btn-primary\",\n          children: \"Start Preparation (1 minute)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 11\n      }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 2 && isPreparingPart2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preparation-phase\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u23F1\\uFE0F Preparation Time Remaining: \", formatTime(preparationTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 13\n        }, this), preparationTime <= 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-warning\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"auto-start-notice\",\n            children: \"\\uD83C\\uDFA4 Recording will start automatically when timer reaches 0:00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cue-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: currentQuestion.cueCard.mainPrompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You should say:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: currentQuestion.cueCard.bulletPoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: point\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preparation-notes\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"prep-notes\",\n            children: \"\\uD83D\\uDCDD Your preparation notes (optional):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"prep-notes\",\n            value: preparationNotes,\n            onChange: e => setPreparationNotes(e.target.value),\n            placeholder: \"Jot down key points here...\",\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 11\n      }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 2 && recording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auto-recording-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"recording-indicator\",\n            children: \"\\uD83D\\uDD34 Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"recording-time\",\n            children: [\"Time: \", formatTime(recordingTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"recording-instruction\",\n          children: \"Speak for 1-2 minutes covering all the points mentioned in the cue card.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopRecording,\n          className: \"record-button recording\",\n          children: \"\\u23F9\\uFE0F Stop Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 11\n      }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) !== 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"question-number\",\n              children: [\"Question \", currentQuestionIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"topic-badge\",\n              children: currentQuestion.topicName || currentQuestion.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentQuestion.prompt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"duration-guide\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u23F1\\uFE0F Expected duration: 20-30 seconds\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-controls\",\n            children: !recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startRecording,\n              className: \"record-button\",\n              children: \"\\uD83C\\uDFA4 Start Recording\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"You may now begin speaking. Recording time: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: formatTime(recordingTime)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 843,\n                  columnNumber: 68\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 843,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: stopRecording,\n                className: \"record-button recording\",\n                children: \"\\u23F9\\uFE0F Stop Recording\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"answer\",\n          children: \"Your transcribed answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"answer\",\n          value: answers[currentQuestionIndex] || \"\",\n          onChange: e => {\n            const newAnswers = [...answers];\n            newAnswers[currentQuestionIndex] = e.target.value;\n            setAnswers(newAnswers);\n          },\n          disabled: recording,\n          placeholder: \"Your answer will appear here during recording...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 11\n        }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 2 && preparationNotes && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-reference\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Your preparation notes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: preparationNotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: goPrev,\n            disabled: currentQuestionIndex === 0,\n            className: \"btn-secondary\",\n            children: \"\\u2190 Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Part 1:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 18\n              }, this), \" \", currentTest.testStructure.part1.questions.length, \" questions |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Part 2:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 18\n              }, this), \" 1 cue card (auto-record) |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Part 3:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 18\n              }, this), \" \", currentTest.testStructure.part3.questions.length, \" questions\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Progress: \", answers.filter(a => a.trim().length > 0).length, \" / \", currentTest.totalQuestions, \" questions answered\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 13\n          }, this), currentQuestionIndex < currentTest.totalQuestions - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: goNext,\n            className: \"btn-primary\",\n            children: \"Next \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 3\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitTest,\n            disabled: loading || recording,\n            className: \"btn-success\",\n            children: loading ? \"Analyzing...\" : \"Submit Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 716,\n    columnNumber: 5\n  }, this);\n}\n_s(SpeechEvaluator, \"fRcd39VeN3bLnlTtmmdpz3ZMGJ4=\");\n_c = SpeechEvaluator;\nexport default SpeechEvaluator;\nvar _c;\n$RefreshReg$(_c, \"SpeechEvaluator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","questionBank","jsxDEV","_jsxDEV","Fragment","_Fragment","createIELTSTest","availableTopics","part1Topics","shuffledTopics","sort","Math","random","introTopic","introQuestions","questions","slice","secondTopic","secondQuestions","part1Questions","forEach","q","push","topicName","part","expectedDuration","cueCards","part2CueCards","selectedCueCard","floor","length","part2Question","preparationTime","relatedDiscussion","part3Discussions","find","disc","relatedToPart2","id","part3Questions","shuffledDiscQuestions","numQuestions","map","topicTheme","testId","Date","now","title","toLocaleDateString","testStructure","part1","name","duration","topics","part2","question","cueCard","part3","theme","allQuestions","prompt","mainPrompt","totalQuestions","SimplePronunciationAnalyzer","constructor","audioContext","analyser","features","pitch","rms","spectralCentroid","zcr","isAnalyzing","initialize","window","AudioContext","webkitAudioContext","state","resume","error","console","startAnalysis","stream","Error","source","createMediaStreamSource","createAnalyser","fftSize","smoothingTimeConstant","connect","startFeatureExtraction","bufferLength","frequencyBinCount","dataArray","Float32Array","timeDataArray","extractFeatures","getFloatFrequencyData","getFloatTimeDomainData","timestamp","currentTime","calculateRMS","calculateZCR","calculateSpectralCentroid","detectPitch","value","frequency","requestAnimationFrame","timeData","sum","i","sqrt","zeroCrossings","freqData","weightedSum","magnitudeSum","magnitude","pow","sampleRate","minPeriod","maxPeriod","bestCorrelation","bestPeriod","period","min","correlation","stopAnalysis","getFeatures","reset","SpeechEvaluator","_s","currentTest","setCurrentTest","currentQuestionIndex","setCurrentQuestionIndex","currentPart","setCurrentPart","answers","setAnswers","recording","setRecording","loading","setLoading","feedbacks","setFeedbacks","testSummary","setTestSummary","setError","recordingTime","setRecordingTime","showResults","setShowResults","getBandColorClass","band","getBandDescription","setPreparationTime","isPreparingPart2","setIsPreparingPart2","preparationNotes","setPreparationNotes","autoStartRecording","setAutoStartRecording","isComponentReady","setIsComponentReady","initializationError","setInitializationError","pronunciationAnalyzer","setPronunciationAnalyzer","audioFeatures","setAudioFeatures","isAnalyzingPronunciation","setIsAnalyzingPronunciation","recognitionRef","recordingTimerRef","preparationTimerRef","currentStreamRef","initializeComponent","test","Array","fill","analyzer","current","clearInterval","getTracks","track","stop","autoStartTimeout","setTimeout","startRecording","clearTimeout","startRecordingTimer","setInterval","prev","stopRecordingTimer","startPreparationTimer","formatTime","seconds","mins","secs","toString","padStart","getCurrentPartInfo","part1Length","part2Index","part3StartIndex","info","startPart2Preparation","warn","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","analysisError","SpeechRecognition","webkitSpeechRecognition","recognition","lang","continuous","interimResults","onstart","onresult","event","speechText","from","results","result","transcript","join","newAnswers","trim","onend","onerror","start","err","stopRecording","_recognitionRef$curre","goNext","toggleRecording","nextIndex","nextPartInfo","goPrev","prevIndex","partInfo","submitTest","response","fetch","method","headers","body","JSON","stringify","testType","ok","status","data","json","overallBand","part1Band","part2Band","part3Band","index","answer","feedback","resetTest","newTest","getBandColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","currentPartInfo","_answers$index","_answers$index2","_answers$index3","onClick","style","width","bulletPoints","point","htmlFor","onChange","e","target","placeholder","rows","category","disabled","filter","a","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/ielts-speech-evaluator/src/components/SpeechEvaluator.jsx"],"sourcesContent":["// Enhanced SpeechEvaluator.jsx - Auto-Start Recording after Part 2 Preparation\n// Part 1: 7-8 questions from 2-3 topics, Part 2: 1 cue card (auto-record), Part 3: 4-6 discussion questions\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions-corrected\";\nimport './SpeechEvaluator.css';\n\n// Function to create authentic IELTS test structure (same as before)\nconst createIELTSTest = () => {\n  // PART 1: Select 2-3 topics and get 7-8 questions total\n  const availableTopics = [...questionBank.part1Topics];\n  const shuffledTopics = availableTopics.sort(() => Math.random() - 0.5);\n  \n  // First topic: 3-4 questions (mandatory introductory topic)\n  const introTopic = shuffledTopics[0];\n  const introQuestions = [...introTopic.questions]\n  .sort(() => Math.random() - 0.5)\n  .slice(0, 2);\n  \n  // Second topic: 3-4 questions\n  const secondTopic = shuffledTopics[1];\n  const secondQuestions = [...secondTopic.questions]\n  .sort(() => Math.random() - 0.5)\n  .slice(0, Math.random() > 0.5 ? 2 : 3);\n  \n  // Build Part 1 questions (7-8 total)\n  let part1Questions = [];\n  \n  // Add questions from first topic\n  introQuestions.forEach(q => {\n    part1Questions.push({\n      ...q,\n      topicName: introTopic.topicName,\n      part: 1,\n      expectedDuration: 30 // 20-30 seconds per answer\n    });\n  });\n  \n  // Add questions from second topic\n  secondQuestions.forEach(q => {\n    part1Questions.push({\n      ...q,\n      topicName: secondTopic.topicName,\n      part: 1,\n      expectedDuration: 30\n    });\n  });\n  \n  // PART 2: Select 1 cue card\n  const cueCards = [...questionBank.part2CueCards];\n  const selectedCueCard = cueCards[Math.floor(Math.random() * cueCards.length)];\n  const part2Question = {\n    ...selectedCueCard,\n    part: 2,\n    expectedDuration: 120, // 1-2 minutes speaking\n    preparationTime: 60 // 1 minute preparation\n  };\n  \n  // PART 3: Select 4-6 discussion questions related to Part 2 topic\n  const relatedDiscussion = questionBank.part3Discussions.find(\n    disc => disc.relatedToPart2 === selectedCueCard.id\n  );\n  let part3Questions = [];\n  if (relatedDiscussion) {\n    const shuffledDiscQuestions = [...relatedDiscussion.questions].sort(() => Math.random() - 0.5);\n    const numQuestions = Math.floor(Math.random() * 3) + 4; // 4-6 questions\n    part3Questions = shuffledDiscQuestions.slice(0, numQuestions).map(q => ({\n      ...q,\n      part: 3,\n      topicTheme: relatedDiscussion.topicTheme,\n      expectedDuration: 60 // 30-60 seconds per answer\n    }));\n  }\n  \n  return {\n    testId: `ielts_test_${Date.now()}`,\n    title: `IELTS Speaking Test - ${new Date().toLocaleDateString()}`,\n    testStructure: {\n      part1: {\n        name: \"Part 1: Introduction & Interview\",\n        duration: \"4-5 minutes\",\n        questions: part1Questions,\n        topics: [introTopic.topicName, secondTopic.topicName]\n      },\n      part2: {\n        name: \"Part 2: Individual Long Turn\",\n        duration: \"3-4 minutes\",\n        question: part2Question,\n        cueCard: selectedCueCard.cueCard\n      },\n      part3: {\n        name: \"Part 3: Two-way Discussion\",\n        duration: \"4-5 minutes\",\n        questions: part3Questions,\n        theme: relatedDiscussion?.topicTheme || \"General Discussion\"\n      }\n    },\n    // Flatten all questions for sequential navigation\n    allQuestions: [\n      ...part1Questions.map(q => ({ ...q, prompt: q.prompt })),\n      { ...part2Question, prompt: part2Question.cueCard.mainPrompt },\n      ...part3Questions.map(q => ({ ...q, prompt: q.prompt }))\n    ],\n    totalQuestions: part1Questions.length + 1 + part3Questions.length\n  };\n};\n\n// Pronunciation Analyzer Class (same as before)\nclass SimplePronunciationAnalyzer {\n  constructor() {\n    this.audioContext = null;\n    this.analyser = null;\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isAnalyzing = false;\n  }\n\n  async initialize() {\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      if (this.audioContext.state === 'suspended') {\n        await this.audioContext.resume();\n      }\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize audio context:', error);\n      return false;\n    }\n  }\n\n  async startAnalysis(stream) {\n    if (!this.audioContext) {\n      throw new Error('Audio context not initialized');\n    }\n\n    const source = this.audioContext.createMediaStreamSource(stream);\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = 2048;\n    this.analyser.smoothingTimeConstant = 0.8;\n\n    source.connect(this.analyser);\n    this.isAnalyzing = true;\n    this.startFeatureExtraction();\n  }\n\n  startFeatureExtraction() {\n    const bufferLength = this.analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    const timeDataArray = new Float32Array(this.analyser.fftSize);\n\n    const extractFeatures = () => {\n      if (!this.isAnalyzing) return;\n\n      this.analyser.getFloatFrequencyData(dataArray);\n      this.analyser.getFloatTimeDomainData(timeDataArray);\n\n      const timestamp = this.audioContext.currentTime;\n      const rms = this.calculateRMS(timeDataArray);\n      const zcr = this.calculateZCR(timeDataArray);\n      const spectralCentroid = this.calculateSpectralCentroid(dataArray);\n      const pitch = this.detectPitch(timeDataArray);\n\n      this.features.rms.push({ value: rms, timestamp });\n      this.features.zcr.push({ value: zcr, timestamp });\n      this.features.spectralCentroid.push({ value: spectralCentroid, timestamp });\n\n      if (pitch && pitch > 50 && pitch < 800) {\n        this.features.pitch.push({ frequency: pitch, timestamp });\n      }\n\n      requestAnimationFrame(extractFeatures);\n    };\n\n    extractFeatures();\n  }\n\n  calculateRMS(timeData) {\n    let sum = 0;\n    for (let i = 0; i < timeData.length; i++) {\n      sum += timeData[i] * timeData[i];\n    }\n    return Math.sqrt(sum / timeData.length);\n  }\n\n  calculateZCR(timeData) {\n    let zeroCrossings = 0;\n    for (let i = 1; i < timeData.length; i++) {\n      if ((timeData[i] >= 0) !== (timeData[i - 1] >= 0)) {\n        zeroCrossings++;\n      }\n    }\n    return zeroCrossings / (timeData.length - 1);\n  }\n\n  calculateSpectralCentroid(freqData) {\n    let weightedSum = 0;\n    let magnitudeSum = 0;\n\n    for (let i = 0; i < freqData.length; i++) {\n      const magnitude = Math.pow(10, freqData[i] / 10);\n      const frequency = (i * this.audioContext.sampleRate) / (2 * freqData.length);\n      weightedSum += frequency * magnitude;\n      magnitudeSum += magnitude;\n    }\n\n    return magnitudeSum > 0 ? weightedSum / magnitudeSum : 0;\n  }\n\n  detectPitch(timeData) {\n    const sampleRate = this.audioContext.sampleRate;\n    const minPeriod = Math.floor(sampleRate / 800);\n    const maxPeriod = Math.floor(sampleRate / 50);\n\n    let bestCorrelation = 0;\n    let bestPeriod = 0;\n\n    for (let period = minPeriod; period < Math.min(maxPeriod, timeData.length / 2); period++) {\n      let correlation = 0;\n      for (let i = 0; i < timeData.length - period; i++) {\n        correlation += timeData[i] * timeData[i + period];\n      }\n\n      if (correlation > bestCorrelation) {\n        bestCorrelation = correlation;\n        bestPeriod = period;\n      }\n    }\n\n    return bestPeriod > 0 ? sampleRate / bestPeriod : 0;\n  }\n\n  stopAnalysis() {\n    this.isAnalyzing = false;\n  }\n\n  getFeatures() {\n    return { ...this.features };\n  }\n\n  reset() {\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isAnalyzing = false;\n  }\n}\n\n// Main Speech Evaluator Component\nfunction SpeechEvaluator() {\n  // State management\n  const [currentTest, setCurrentTest] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentPart, setCurrentPart] = useState(1);\n  const [answers, setAnswers] = useState([]);\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [feedbacks, setFeedbacks] = useState(null);\n  const [testSummary, setTestSummary] = useState(null);\n  const [error, setError] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const getBandColorClass = (band) => {\n    if (band >= 7.0) return 'high-band';\n    if (band >= 5.5) return 'mid-band';\n    return 'low-band';\n  };\n  const getBandDescription = (band) => {\n    if (band >= 8.5) return 'Expert User';\n    if (band >= 7.0) return 'Good User';  \n    if (band >= 6.0) return 'Competent User';\n    if (band >= 5.0) return 'Modest User';\n    return 'Limited User';\n  };\n  // Part 2 specific states\n  const [preparationTime, setPreparationTime] = useState(0);\n  const [isPreparingPart2, setIsPreparingPart2] = useState(false);\n  const [preparationNotes, setPreparationNotes] = useState(\"\");\n  const [autoStartRecording, setAutoStartRecording] = useState(false); // NEW: Flag for auto-start\n\n  // Component ready state\n  const [isComponentReady, setIsComponentReady] = useState(false);\n  const [initializationError, setInitializationError] = useState(null);\n\n  // Pronunciation analysis state\n  const [pronunciationAnalyzer, setPronunciationAnalyzer] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState({});\n  const [isAnalyzingPronunciation, setIsAnalyzingPronunciation] = useState(false);\n\n  // Refs\n  const recognitionRef = useRef(null);\n  const recordingTimerRef = useRef(null);\n  const preparationTimerRef = useRef(null);\n  const currentStreamRef = useRef(null);\n\n  // Initialize component\n  useEffect(() => {\n    const initializeComponent = async () => {\n      try {\n        const test = createIELTSTest();\n        setCurrentTest(test);\n        setAnswers(Array(test.totalQuestions).fill(\"\"));\n        const analyzer = new SimplePronunciationAnalyzer();\n        setPronunciationAnalyzer(analyzer);\n        setIsComponentReady(true);\n        setInitializationError(null);\n      } catch (error) {\n        console.error('Component initialization failed:', error);\n        setInitializationError('Failed to initialize speech evaluator. Please refresh the page.');\n        setIsComponentReady(true);\n      }\n    };\n\n    initializeComponent();\n  }, []);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (recordingTimerRef.current) clearInterval(recordingTimerRef.current);\n      if (preparationTimerRef.current) clearInterval(preparationTimerRef.current);\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (pronunciationAnalyzer) {\n        pronunciationAnalyzer.stopAnalysis();\n      }\n    };\n  }, [pronunciationAnalyzer]);\n\n  // NEW: Effect to handle auto-start recording after preparation\n  useEffect(() => {\n    if (autoStartRecording && !isPreparingPart2 && preparationTime === 0) {\n      // Small delay to ensure preparation phase is fully complete\n      const autoStartTimeout = setTimeout(() => {\n        startRecording();\n        setAutoStartRecording(false);\n      }, 500);\n      return () => clearTimeout(autoStartTimeout);\n    }\n  }, [autoStartRecording, isPreparingPart2, preparationTime]);\n\n  // Timer functions\n  const startRecordingTimer = useCallback(() => {\n    setRecordingTime(0);\n    recordingTimerRef.current = setInterval(() => {\n      setRecordingTime(prev => prev + 1);\n    }, 1000);\n  }, []);\n\n  const stopRecordingTimer = useCallback(() => {\n    if (recordingTimerRef.current) {\n      clearInterval(recordingTimerRef.current);\n      recordingTimerRef.current = null;\n    }\n  }, []);\n\n  // UPDATED: Preparation timer with auto-start flag\n  const startPreparationTimer = useCallback(() => {\n    setPreparationTime(60); // 1 minute for Part 2\n    setAutoStartRecording(true); // Set flag to auto-start recording\n    preparationTimerRef.current = setInterval(() => {\n      setPreparationTime(prev => {\n        if (prev <= 1) {\n          clearInterval(preparationTimerRef.current);\n          setIsPreparingPart2(false);\n          // Auto-start will be triggered by useEffect\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  }, []);\n\n  const formatTime = useCallback((seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  // Determine current part based on question index\n  const getCurrentPartInfo = () => {\n    if (!currentTest) return null;\n\n    const part1Length = currentTest.testStructure.part1.questions.length;\n    const part2Index = part1Length;\n    const part3StartIndex = part1Length + 1;\n\n    if (currentQuestionIndex < part1Length) {\n      return { part: 1, info: currentTest.testStructure.part1 };\n    } else if (currentQuestionIndex === part2Index) {\n      return { part: 2, info: currentTest.testStructure.part2 };\n    } else {\n      return { part: 3, info: currentTest.testStructure.part3 };\n    }\n  };\n\n  // Start Part 2 preparation\n  const startPart2Preparation = () => {\n    setIsPreparingPart2(true);\n    setPreparationNotes(\"\");\n    startPreparationTimer();\n  };\n\n  // UPDATED: Separated recording logic for reuse\n  const startRecording = async () => {\n    // Initialize AudioContext on first user interaction\n    if (pronunciationAnalyzer && !pronunciationAnalyzer.audioContext) {\n      try {\n        await pronunciationAnalyzer.initialize();\n      } catch (error) {\n        console.warn('AudioContext initialization error:', error);\n      }\n    }\n\n    // Check browser support\n    if (!(\"webkitSpeechRecognition\" in window) && !(\"SpeechRecognition\" in window)) {\n      setError(\"Speech recognition is not supported in this browser. Please use Chrome or Edge.\");\n      return;\n    }\n\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: false\n        }\n      });\n\n      currentStreamRef.current = stream;\n\n      // Start pronunciation analysis\n      if (pronunciationAnalyzer && pronunciationAnalyzer.audioContext) {\n        try {\n          pronunciationAnalyzer.reset();\n          await pronunciationAnalyzer.startAnalysis(stream);\n          setIsAnalyzingPronunciation(true);\n        } catch (analysisError) {\n          console.warn('Pronunciation analysis failed:', analysisError);\n        }\n      }\n\n      // Setup speech recognition\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.lang = \"en-US\";\n      recognition.continuous = true;\n      recognition.interimResults = false;\n\n      recognition.onstart = () => {\n        setRecording(true);\n        setError(null);\n        startRecordingTimer();\n      };\n\n      recognition.onresult = (event) => {\n        const speechText = Array.from(event.results).map(result => result[0].transcript).join(\" \");\n        setAnswers(prev => {\n          const newAnswers = [...prev];\n          newAnswers[currentQuestionIndex] = speechText.trim();\n          return newAnswers;\n        });\n      };\n\n      recognition.onend = () => {\n        setRecording(false);\n        stopRecordingTimer();\n      };\n\n      recognition.onerror = (event) => {\n        setError(`Speech recognition error: ${event.error}. Please try again.`);\n        setRecording(false);\n        stopRecordingTimer();\n        setIsAnalyzingPronunciation(false);\n      };\n\n      recognitionRef.current = recognition;\n      recognition.start();\n    } catch (err) {\n      setError(\"Failed to access microphone. Please check permissions and try again.\");\n      console.error(\"Microphone access error:\", err);\n    }\n  };\n\n  const stopRecording = () => {\n    recognitionRef.current?.stop();\n    if (pronunciationAnalyzer && isAnalyzingPronunciation) {\n      pronunciationAnalyzer.stopAnalysis();\n      const features = pronunciationAnalyzer.getFeatures();\n      setAudioFeatures(prev => ({ ...prev, [currentQuestionIndex]: features }));\n      setIsAnalyzingPronunciation(false);\n    }\n    if (currentStreamRef.current) {\n      currentStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n    // Add auto-advance to next question (Part 3)\n    setTimeout(goNext, 1500);\n  };\n\n  // UPDATED: Toggle recording function\n  const toggleRecording = async () => {\n    if (recording) {\n      stopRecording();\n    } else {\n      await startRecording();\n    }\n  };\n\n  // Navigation functions\n  const goNext = () => {\n    if (currentQuestionIndex < currentTest.totalQuestions - 1) {\n      const nextIndex = currentQuestionIndex + 1;\n      const nextPartInfo = getCurrentPartInfo();\n\n      // Check if moving to Part 2\n      if (nextPartInfo?.part === 2 && currentQuestionIndex + 1 === currentTest.testStructure.part1.questions.length) {\n        setCurrentPart(2);\n      } else if (nextPartInfo?.part === 3 && !currentPart === 3) {\n        setCurrentPart(3);\n      }\n\n      setCurrentQuestionIndex(nextIndex);\n    }\n  };\n\n  const goPrev = () => {\n    if (currentQuestionIndex > 0) {\n      const prevIndex = currentQuestionIndex - 1;\n      setCurrentQuestionIndex(prevIndex);\n\n      // Update current part\n      const partInfo = getCurrentPartInfo();\n      if (partInfo) {\n        setCurrentPart(partInfo.part);\n      }\n    }\n  };\n\n  // Submit test\n  // Submit test - UPDATED to show results even without API\nconst submitTest = async () => {\n  setLoading(true);\n  setError(null);\n\n  try {\n    const response = await fetch(\"/api/analyze-batch\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        testId: currentTest.testId,\n        questions: currentTest.allQuestions.map(q => q.prompt),\n        answers,\n        audioFeatures,\n        testType: \"IELTS_AUTHENTIC\"\n      }),\n    });\n\n    if (!response.ok) throw new Error(`Server error: ${response.status}`);\n\n    const data = await response.json();\n    setFeedbacks(data.feedbacks);\n    setTestSummary(data.testSummary);\n    setShowResults(true);\n\n  } catch (err) {\n    console.error(\"Analysis error:\", err);\n    \n    // SHOW RESULTS ANYWAY with mock data for demonstration\n    setTestSummary({\n      overallBand: 6.5,\n      part1Band: 6.0,\n      part2Band: 6.5,\n      part3Band: 7.0\n    });\n    \n    setFeedbacks(currentTest.allQuestions.map((q, index) => ({\n      question: q.prompt,\n      answer: answers[index] || \"No response provided\",\n      feedback: \"Detailed feedback will be available when connected to the analysis API.\"\n    })));\n    \n    setShowResults(true);\n    setError(null); // Clear the error so results show properly\n  } finally {\n    setLoading(false);\n  }\n};\n\n  // Reset test\n  const resetTest = () => {\n    const newTest = createIELTSTest();\n    setCurrentTest(newTest);\n    setAnswers(Array(newTest.totalQuestions).fill(\"\"));\n    setCurrentQuestionIndex(0);\n    setCurrentPart(1);\n    setFeedbacks(null);\n    setTestSummary(null);\n    setShowResults(false);\n    setError(null);\n    setRecordingTime(0);\n    setPreparationTime(0);\n    setIsPreparingPart2(false);\n    setPreparationNotes(\"\");\n    setAutoStartRecording(false);\n    if (pronunciationAnalyzer) pronunciationAnalyzer.reset();\n  };\n\n  // Get band color\n  const getBandColor = (band) => {\n    if (band >= 8.5) return \"#2e7d32\";\n    if (band >= 7) return \"#388e3c\";\n    if (band >= 6.5) return \"#689f38\";\n    if (band >= 6) return \"#afb42b\";\n    if (band >= 5.5) return \"#f57f17\";\n    if (band >= 5) return \"#ff8f00\";\n    if (band >= 4) return \"#d32f2f\";\n    return \"#d32f2f\";\n  };\n\n  // Loading state\n  if (!isComponentReady) {\n    return (\n      <div className=\"loading-container\">\n        <h2>Loading IELTS Speaking Test...</h2>\n        {initializationError ? (\n          <div className=\"error-message\">\n            <p>{initializationError}</p>\n          </div>\n        ) : (\n          <p>Setting up authentic IELTS format with auto-recording...</p>\n        )}\n      </div>\n    );\n  }\n\n  // Get current question and part info\n  const currentQuestion = currentTest.allQuestions[currentQuestionIndex];\n  const currentPartInfo = getCurrentPartInfo();\n\n  // Results view\n  {showResults && (\n  <div className=\"results-container enhanced\">\n    {/* Enhanced Header */}\n    <div className=\"results-header\">\n      <h1>IELTS Speaking Test Results</h1>\n      <div className=\"overall-score-circle\">\n        <div className=\"score-display\">\n          <span className=\"band-number\">{testSummary?.overallBand || '6.5'}</span>\n          <span className=\"band-label\">Overall Band</span>\n        </div>\n      </div>\n    </div>\n\n    {/* Enhanced Band Scores */}\n    <div className=\"band-scores-section\">\n      <h3>Performance by Part</h3>\n      <div className=\"band-scores-grid\">\n        <div className={`band-score enhanced ${getBandColorClass(testSummary?.part1Band || 6.0)}`}>\n          <div className=\"part-name\">Part 1</div>\n          <div className=\"band-value\">{testSummary?.part1Band || '6.0'}</div>\n          <div className=\"band-description\">{getBandDescription(testSummary?.part1Band || 6.0)}</div>\n        </div>\n        <div className={`band-score enhanced ${getBandColorClass(testSummary?.part2Band || 6.5)}`}>\n          <div className=\"part-name\">Part 2</div>\n          <div className=\"band-value\">{testSummary?.part2Band || '6.5'}</div>\n          <div className=\"band-description\">{getBandDescription(testSummary?.part2Band || 6.5)}</div>\n        </div>\n        <div className={`band-score enhanced ${getBandColorClass(testSummary?.part3Band || 7.0)}`}>\n          <div className=\"part-name\">Part 3</div>\n          <div className=\"band-value\">{testSummary?.part3Band || '7.0'}</div>\n          <div className=\"band-description\">{getBandDescription(testSummary?.part3Band || 7.0)}</div>\n        </div>\n      </div>\n    </div>\n\n    {/* Enhanced Feedback */}\n    <div className=\"detailed-feedback enhanced\">\n      <h3>Detailed Question-by-Question Feedback</h3>\n      {currentTest?.allQuestions.map((question, index) => (\n        <div key={index} className=\"feedback-item\">\n          <div className=\"question-text\">\n            Question {index + 1}: {question.prompt}\n          </div>\n          <div className={`response-status ${answers[index]?.trim() ? 'complete-response' : 'no-response'}`}>\n            {answers[index]?.trim() ? 'Response Provided' : 'No Response Provided'}\n          </div>\n          {answers[index]?.trim() && (\n            <div className=\"user-response\">\n              <strong>Your Answer:</strong> {answers[index]}\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n\n    {/* Action Button */}\n    <div className=\"nav-buttons\">\n      <button onClick={resetTest} className=\"btn-primary TakeAnother\">\n        Take Another Test\n      </button>\n    </div>\n  </div>\n)}\n\n\n  return (\n    <div className=\"speech-evaluator\">\n      {/* Test Header */}\n      <div className=\"test-header\">\n        <div className=\"test-info\">\n          <span className=\"progress\">Question {currentQuestionIndex + 1} of {currentTest.totalQuestions}</span>\n        </div>\n        <div className=\"progress-bar\">\n          <div \n            className=\"progress-fill\" \n            style={{width: `${(currentQuestionIndex / currentTest.totalQuestions) * 100}%`}}\n          ></div>\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"error-message\">\n          <p>{error}</p>\n        </div>\n      )}\n\n      {/* Test Content */}\n      <div className=\"test-content\">\n        {/* Part Indicator */}\n        <div className=\"part-indicator\">\n          <h2>{currentPartInfo?.info.name}</h2>\n          <p className=\"part-duration\">Duration: {currentPartInfo?.info.duration}</p>\n          {currentPartInfo?.part === 1 && (\n            <p className=\"part-description\">\n              Topics: {currentPartInfo.info.topics.join(\" & \")} ({currentPartInfo.info.questions.length} questions)\n            </p>\n          )}\n          {currentPartInfo?.part === 2 && (\n            <p className=\"part-description\">\n              📝 1-minute preparation → 🎤 Auto-recording starts → 🗣️ Speak for 1-2 minutes\n            </p>\n          )}\n          {currentPartInfo?.part === 3 && (\n            <p className=\"part-description\">\n              Theme: {currentPartInfo.info.theme} ({currentPartInfo.info.questions.length} questions)\n            </p>\n          )}\n        </div>\n\n        {/* Part 2 Preparation Phase - Show button when not preparing */}\n        {currentPartInfo?.part === 2 && !isPreparingPart2 && preparationTime === 0 && !recording && (\n          <div className=\"part2-preparation-intro\">\n            <h3>📝 Part 2: Preparation Phase</h3>\n            <p>Click the button below to see your cue card and start the 1-minute preparation timer.</p>\n            <p>After preparation ends, recording will start automatically.</p>\n            <button onClick={startPart2Preparation} className=\"btn-primary\">\n              Start Preparation (1 minute)\n            </button>\n          </div>\n        )}\n\n        {/* Part 2 Cue Card - Show only during preparation */}\n        {currentPartInfo?.part === 2 && isPreparingPart2 && (\n          <div className=\"preparation-phase\">\n            <h3>⏱️ Preparation Time Remaining: {formatTime(preparationTime)}</h3>\n            {preparationTime <= 5 && (\n              <div className=\"countdown-warning\">\n                <p className=\"auto-start-notice\">🎤 Recording will start automatically when timer reaches 0:00</p>\n              </div>\n            )}\n            <div className=\"cue-card\">\n              <h4>{currentQuestion.cueCard.mainPrompt}</h4>\n              <p>You should say:</p>\n              <ul>\n                {currentQuestion.cueCard.bulletPoints.map((point, index) => (\n                  <li key={index}>{point}</li>\n                ))}\n              </ul>\n            </div>\n            \n            <div className=\"preparation-notes\">\n              <label htmlFor=\"prep-notes\">📝 Your preparation notes (optional):</label>\n              <textarea\n                id=\"prep-notes\"\n                value={preparationNotes}\n                onChange={(e) => setPreparationNotes(e.target.value)}\n                placeholder=\"Jot down key points here...\"\n                rows=\"4\"\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Part 2 Recording Phase - Show only when recording */}\n        {currentPartInfo?.part === 2 && recording && (\n          <div className=\"recording-section\">\n            <div className=\"auto-recording-status\">\n              <span className=\"recording-indicator\">🔴 Recording</span>\n              <span className=\"recording-time\">Time: {formatTime(recordingTime)}</span>\n            </div>\n            <p className=\"recording-instruction\">Speak for 1-2 minutes covering all the points mentioned in the cue card.</p>\n            <button onClick={stopRecording} className=\"record-button recording\">\n              ⏹️ Stop Recording\n            </button>\n          </div>\n        )}\n\n        {/* Regular Question Section for Parts 1 & 3 */}\n        {currentPartInfo?.part !== 2 && (\n          <>\n            <div className=\"question-section\">\n              <div className=\"question-header\">\n                <span className=\"question-number\">Question {currentQuestionIndex + 1}</span>\n                <span className=\"topic-badge\">{currentQuestion.topicName || currentQuestion.category}</span>\n              </div>\n              <div className=\"question-content\">\n                <h3>{currentQuestion.prompt}</h3>\n                <div className=\"duration-guide\">\n                  <span>⏱️ Expected duration: 20-30 seconds</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Recording Controls for Parts 1 & 3 */}\n            <div className=\"recording-section\">\n              <div className=\"recording-controls\">\n                {!recording ? (\n                  <button onClick={startRecording} className=\"record-button\">\n                    🎤 Start Recording\n                  </button>\n                ) : (\n                  <>\n                    <p>You may now begin speaking. Recording time: <strong>{formatTime(recordingTime)}</strong></p>\n                    <button onClick={stopRecording} className=\"record-button recording\">\n                      ⏹️ Stop Recording\n                    </button>\n                  </>\n                )}\n              </div>\n            </div>\n          </>\n        )}\n\n        {/* Answer Section */}\n        <div className=\"answer-section\">\n          <label htmlFor=\"answer\">Your transcribed answer:</label>\n          <textarea\n            id=\"answer\"\n            value={answers[currentQuestionIndex] || \"\"}\n            onChange={(e) => {\n              const newAnswers = [...answers];\n              newAnswers[currentQuestionIndex] = e.target.value;\n              setAnswers(newAnswers);\n            }}\n            disabled={recording}\n            placeholder=\"Your answer will appear here during recording...\"\n          />\n          \n          {currentPartInfo?.part === 2 && preparationNotes && (\n            <div className=\"notes-reference\">\n              <h4>Your preparation notes:</h4>\n              <p>{preparationNotes}</p>\n            </div>\n          )}\n        </div>\n\n        {/* Navigation Section */}\n        <div className=\"navigation-section\">\n          <div className=\"nav-buttons\">\n            <button \n              onClick={goPrev} \n              disabled={currentQuestionIndex === 0}\n              className=\"btn-secondary\"\n            >\n              ← Previous\n            </button>\n            \n            <div className=\"progress-info\">\n              <p><strong>Part 1:</strong> {currentTest.testStructure.part1.questions.length} questions | \n                 <strong> Part 2:</strong> 1 cue card (auto-record) | \n                 <strong> Part 3:</strong> {currentTest.testStructure.part3.questions.length} questions</p>\n              <p>Progress: {answers.filter(a => a.trim().length > 0).length} / {currentTest.totalQuestions} questions answered</p>\n            </div>\n\n           {currentQuestionIndex < currentTest.totalQuestions - 1 ? (\n  <button onClick={goNext} className=\"btn-primary\">Next →</button>\n) : (\n  <button\n    onClick={submitTest}\n    disabled={loading || recording}\n    className=\"btn-success\"\n  >\n    {loading ? \"Analyzing...\" : \"Submit Test\"}\n  </button>\n)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SpeechEvaluator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}