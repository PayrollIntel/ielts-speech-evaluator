{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ielts-speech-evaluator\\\\src\\\\components\\\\SpeechEvaluator.jsx\",\n  _s = $RefreshSig$();\n// Enhanced SpeechEvaluator.jsx - Corrected IELTS Speaking Test Format\n// Part 1: 7-8 questions from 2-3 topics, Part 2: 1 cue card, Part 3: 4-6 discussion questions\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions-corrected\";\nimport './SpeechEvaluator.css';\n\n// Function to create authentic IELTS test structure\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst createIELTSTest = () => {\n  // PART 1: Select 2-3 topics and get 7-8 questions total\n  const availableTopics = [...questionBank.part1Topics];\n  const shuffledTopics = availableTopics.sort(() => Math.random() - 0.5);\n\n  // First topic: 3-4 questions (mandatory introductory topic)\n  const introTopic = shuffledTopics[0];\n  const introQuestions = [...introTopic.questions].sort(() => Math.random() - 0.5).slice(0, 4);\n\n  // Second topic: 3-4 questions  \n  const secondTopic = shuffledTopics[1];\n  const secondQuestions = [...secondTopic.questions].sort(() => Math.random() - 0.5).slice(0, Math.random() > 0.5 ? 3 : 4);\n\n  // Build Part 1 questions (7-8 total)\n  let part1Questions = [];\n\n  // Add questions from first topic\n  introQuestions.forEach(q => {\n    part1Questions.push({\n      ...q,\n      topicName: introTopic.topicName,\n      part: 1,\n      expectedDuration: 30 // 20-30 seconds per answer\n    });\n  });\n\n  // Add questions from second topic\n  secondQuestions.forEach(q => {\n    part1Questions.push({\n      ...q,\n      topicName: secondTopic.topicName,\n      part: 1,\n      expectedDuration: 30\n    });\n  });\n\n  // PART 2: Select 1 cue card\n  const cueCards = [...questionBank.part2CueCards];\n  const selectedCueCard = cueCards[Math.floor(Math.random() * cueCards.length)];\n  const part2Question = {\n    ...selectedCueCard,\n    part: 2,\n    expectedDuration: 120,\n    // 1-2 minutes speaking\n    preparationTime: 60 // 1 minute preparation\n  };\n\n  // PART 3: Select 4-6 discussion questions related to Part 2 topic\n  const relatedDiscussion = questionBank.part3Discussions.find(disc => disc.relatedToPart2 === selectedCueCard.id);\n  let part3Questions = [];\n  if (relatedDiscussion) {\n    const shuffledDiscQuestions = [...relatedDiscussion.questions].sort(() => Math.random() - 0.5);\n    const numQuestions = Math.floor(Math.random() * 3) + 4; // 4-6 questions\n    part3Questions = shuffledDiscQuestions.slice(0, numQuestions).map(q => ({\n      ...q,\n      part: 3,\n      topicTheme: relatedDiscussion.topicTheme,\n      expectedDuration: 60 // 30-60 seconds per answer\n    }));\n  }\n  return {\n    testId: `ielts_test_${Date.now()}`,\n    title: `IELTS Speaking Test - ${new Date().toLocaleDateString()}`,\n    testStructure: {\n      part1: {\n        name: \"Part 1: Introduction & Interview\",\n        duration: \"4-5 minutes\",\n        questions: part1Questions,\n        topics: [introTopic.topicName, secondTopic.topicName]\n      },\n      part2: {\n        name: \"Part 2: Individual Long Turn\",\n        duration: \"3-4 minutes\",\n        question: part2Question,\n        cueCard: selectedCueCard.cueCard\n      },\n      part3: {\n        name: \"Part 3: Two-way Discussion\",\n        duration: \"4-5 minutes\",\n        questions: part3Questions,\n        theme: (relatedDiscussion === null || relatedDiscussion === void 0 ? void 0 : relatedDiscussion.topicTheme) || \"General Discussion\"\n      }\n    },\n    // Flatten all questions for sequential navigation\n    allQuestions: [...part1Questions.map(q => ({\n      ...q,\n      prompt: q.prompt\n    })), {\n      ...part2Question,\n      prompt: part2Question.cueCard.mainPrompt\n    }, ...part3Questions.map(q => ({\n      ...q,\n      prompt: q.prompt\n    }))],\n    totalQuestions: part1Questions.length + 1 + part3Questions.length\n  };\n};\n\n// Pronunciation Analyzer Class (same as before)\nclass SimplePronunciationAnalyzer {\n  constructor() {\n    this.audioContext = null;\n    this.analyser = null;\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isAnalyzing = false;\n  }\n  async initialize() {\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      if (this.audioContext.state === 'suspended') {\n        await this.audioContext.resume();\n      }\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize audio context:', error);\n      return false;\n    }\n  }\n  async startAnalysis(stream) {\n    if (!this.audioContext) {\n      throw new Error('Audio context not initialized');\n    }\n    const source = this.audioContext.createMediaStreamSource(stream);\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = 2048;\n    this.analyser.smoothingTimeConstant = 0.8;\n    source.connect(this.analyser);\n    this.isAnalyzing = true;\n    this.startFeatureExtraction();\n  }\n  startFeatureExtraction() {\n    const bufferLength = this.analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    const timeDataArray = new Float32Array(this.analyser.fftSize);\n    const extractFeatures = () => {\n      if (!this.isAnalyzing) return;\n      this.analyser.getFloatFrequencyData(dataArray);\n      this.analyser.getFloatTimeDomainData(timeDataArray);\n      const timestamp = this.audioContext.currentTime;\n      const rms = this.calculateRMS(timeDataArray);\n      const zcr = this.calculateZCR(timeDataArray);\n      const spectralCentroid = this.calculateSpectralCentroid(dataArray);\n      const pitch = this.detectPitch(timeDataArray);\n      this.features.rms.push({\n        value: rms,\n        timestamp\n      });\n      this.features.zcr.push({\n        value: zcr,\n        timestamp\n      });\n      this.features.spectralCentroid.push({\n        value: spectralCentroid,\n        timestamp\n      });\n      if (pitch && pitch > 50 && pitch < 800) {\n        this.features.pitch.push({\n          frequency: pitch,\n          timestamp\n        });\n      }\n      requestAnimationFrame(extractFeatures);\n    };\n    extractFeatures();\n  }\n  calculateRMS(timeData) {\n    let sum = 0;\n    for (let i = 0; i < timeData.length; i++) {\n      sum += timeData[i] * timeData[i];\n    }\n    return Math.sqrt(sum / timeData.length);\n  }\n  calculateZCR(timeData) {\n    let zeroCrossings = 0;\n    for (let i = 1; i < timeData.length; i++) {\n      if (timeData[i] >= 0 !== timeData[i - 1] >= 0) {\n        zeroCrossings++;\n      }\n    }\n    return zeroCrossings / (timeData.length - 1);\n  }\n  calculateSpectralCentroid(freqData) {\n    let weightedSum = 0;\n    let magnitudeSum = 0;\n    for (let i = 0; i < freqData.length; i++) {\n      const magnitude = Math.pow(10, freqData[i] / 10);\n      const frequency = i * this.audioContext.sampleRate / (2 * freqData.length);\n      weightedSum += frequency * magnitude;\n      magnitudeSum += magnitude;\n    }\n    return magnitudeSum > 0 ? weightedSum / magnitudeSum : 0;\n  }\n  detectPitch(timeData) {\n    const sampleRate = this.audioContext.sampleRate;\n    const minPeriod = Math.floor(sampleRate / 800);\n    const maxPeriod = Math.floor(sampleRate / 50);\n    let bestCorrelation = 0;\n    let bestPeriod = 0;\n    for (let period = minPeriod; period < Math.min(maxPeriod, timeData.length / 2); period++) {\n      let correlation = 0;\n      for (let i = 0; i < timeData.length - period; i++) {\n        correlation += timeData[i] * timeData[i + period];\n      }\n      if (correlation > bestCorrelation) {\n        bestCorrelation = correlation;\n        bestPeriod = period;\n      }\n    }\n    return bestPeriod > 0 ? sampleRate / bestPeriod : 0;\n  }\n  stopAnalysis() {\n    this.isAnalyzing = false;\n  }\n  getFeatures() {\n    return {\n      ...this.features\n    };\n  }\n  reset() {\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isAnalyzing = false;\n  }\n}\n\n// Main Speech Evaluator Component\nfunction SpeechEvaluator() {\n  _s();\n  // State management\n  const [currentTest, setCurrentTest] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentPart, setCurrentPart] = useState(1);\n  const [answers, setAnswers] = useState([]);\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [feedbacks, setFeedbacks] = useState(null);\n  const [testSummary, setTestSummary] = useState(null);\n  const [error, setError] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n\n  // Part 2 specific states\n  const [preparationTime, setPreparationTime] = useState(0);\n  const [isPreparingPart2, setIsPreparingPart2] = useState(false);\n  const [preparationNotes, setPreparationNotes] = useState(\"\");\n\n  // Component ready state\n  const [isComponentReady, setIsComponentReady] = useState(false);\n  const [initializationError, setInitializationError] = useState(null);\n\n  // Pronunciation analysis state\n  const [pronunciationAnalyzer, setPronunciationAnalyzer] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState({});\n  const [isAnalyzingPronunciation, setIsAnalyzingPronunciation] = useState(false);\n\n  // Refs\n  const recognitionRef = useRef(null);\n  const recordingTimerRef = useRef(null);\n  const preparationTimerRef = useRef(null);\n  const currentStreamRef = useRef(null);\n\n  // Initialize component\n  useEffect(() => {\n    const initializeComponent = async () => {\n      try {\n        const test = createIELTSTest();\n        setCurrentTest(test);\n        setAnswers(Array(test.totalQuestions).fill(\"\"));\n        const analyzer = new SimplePronunciationAnalyzer();\n        setPronunciationAnalyzer(analyzer);\n        setIsComponentReady(true);\n        setInitializationError(null);\n      } catch (error) {\n        console.error('Component initialization failed:', error);\n        setInitializationError('Failed to initialize speech evaluator. Please refresh the page.');\n        setIsComponentReady(true);\n      }\n    };\n    initializeComponent();\n  }, []);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (recordingTimerRef.current) clearInterval(recordingTimerRef.current);\n      if (preparationTimerRef.current) clearInterval(preparationTimerRef.current);\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (pronunciationAnalyzer) {\n        pronunciationAnalyzer.stopAnalysis();\n      }\n    };\n  }, [pronunciationAnalyzer]);\n\n  // Timer functions\n  const startRecordingTimer = useCallback(() => {\n    setRecordingTime(0);\n    recordingTimerRef.current = setInterval(() => {\n      setRecordingTime(prev => prev + 1);\n    }, 1000);\n  }, []);\n  const stopRecordingTimer = useCallback(() => {\n    if (recordingTimerRef.current) {\n      clearInterval(recordingTimerRef.current);\n      recordingTimerRef.current = null;\n    }\n  }, []);\n  const startPreparationTimer = useCallback(() => {\n    setPreparationTime(60); // 1 minute for Part 2\n    preparationTimerRef.current = setInterval(() => {\n      setPreparationTime(prev => {\n        if (prev <= 1) {\n          clearInterval(preparationTimerRef.current);\n          setIsPreparingPart2(false);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  }, []);\n  const formatTime = useCallback(seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  // Determine current part based on question index\n  const getCurrentPartInfo = () => {\n    if (!currentTest) return null;\n    const part1Length = currentTest.testStructure.part1.questions.length;\n    const part2Index = part1Length;\n    const part3StartIndex = part1Length + 1;\n    if (currentQuestionIndex < part1Length) {\n      return {\n        part: 1,\n        info: currentTest.testStructure.part1\n      };\n    } else if (currentQuestionIndex === part2Index) {\n      return {\n        part: 2,\n        info: currentTest.testStructure.part2\n      };\n    } else {\n      return {\n        part: 3,\n        info: currentTest.testStructure.part3\n      };\n    }\n  };\n\n  // Start Part 2 preparation\n  const startPart2Preparation = () => {\n    setIsPreparingPart2(true);\n    setPreparationNotes(\"\");\n    startPreparationTimer();\n  };\n\n  // Recording functionality\n  const toggleRecording = async () => {\n    if (recording) {\n      var _recognitionRef$curre;\n      (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n      if (pronunciationAnalyzer && isAnalyzingPronunciation) {\n        pronunciationAnalyzer.stopAnalysis();\n        const features = pronunciationAnalyzer.getFeatures();\n        setAudioFeatures(prev => ({\n          ...prev,\n          [currentQuestionIndex]: features\n        }));\n        setIsAnalyzingPronunciation(false);\n      }\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      return;\n    }\n\n    // Initialize AudioContext on first user interaction\n    if (pronunciationAnalyzer && !pronunciationAnalyzer.audioContext) {\n      try {\n        await pronunciationAnalyzer.initialize();\n      } catch (error) {\n        console.warn('AudioContext initialization error:', error);\n      }\n    }\n\n    // Check browser support\n    if (!(\"webkitSpeechRecognition\" in window) && !(\"SpeechRecognition\" in window)) {\n      setError(\"Speech recognition is not supported in this browser. Please use Chrome or Edge.\");\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: false\n        }\n      });\n      currentStreamRef.current = stream;\n\n      // Start pronunciation analysis\n      if (pronunciationAnalyzer && pronunciationAnalyzer.audioContext) {\n        try {\n          pronunciationAnalyzer.reset();\n          await pronunciationAnalyzer.startAnalysis(stream);\n          setIsAnalyzingPronunciation(true);\n        } catch (analysisError) {\n          console.warn('Pronunciation analysis failed:', analysisError);\n        }\n      }\n\n      // Setup speech recognition\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.lang = \"en-US\";\n      recognition.continuous = true;\n      recognition.interimResults = false;\n      recognition.onstart = () => {\n        setRecording(true);\n        setError(null);\n        startRecordingTimer();\n      };\n      recognition.onresult = event => {\n        const speechText = Array.from(event.results).map(result => result[0].transcript).join(\" \");\n        setAnswers(prev => {\n          const newAnswers = [...prev];\n          newAnswers[currentQuestionIndex] = speechText.trim();\n          return newAnswers;\n        });\n      };\n      recognition.onend = () => {\n        setRecording(false);\n        stopRecordingTimer();\n      };\n      recognition.onerror = event => {\n        setError(`Speech recognition error: ${event.error}. Please try again.`);\n        setRecording(false);\n        stopRecordingTimer();\n        setIsAnalyzingPronunciation(false);\n      };\n      recognitionRef.current = recognition;\n      recognition.start();\n    } catch (err) {\n      setError(\"Failed to access microphone. Please check permissions and try again.\");\n      console.error(\"Microphone access error:\", err);\n    }\n  };\n\n  // Navigation functions\n  const goNext = () => {\n    if (currentQuestionIndex < currentTest.totalQuestions - 1) {\n      const nextIndex = currentQuestionIndex + 1;\n      const nextPartInfo = getCurrentPartInfo();\n\n      // Check if moving to Part 2\n      if ((nextPartInfo === null || nextPartInfo === void 0 ? void 0 : nextPartInfo.part) === 2 && currentQuestionIndex + 1 === currentTest.testStructure.part1.questions.length) {\n        setCurrentPart(2);\n      } else if ((nextPartInfo === null || nextPartInfo === void 0 ? void 0 : nextPartInfo.part) === 3 && !currentPart === 3) {\n        setCurrentPart(3);\n      }\n      setCurrentQuestionIndex(nextIndex);\n    }\n  };\n  const goPrev = () => {\n    if (currentQuestionIndex > 0) {\n      const prevIndex = currentQuestionIndex - 1;\n      setCurrentQuestionIndex(prevIndex);\n\n      // Update current part\n      const partInfo = getCurrentPartInfo();\n      if (partInfo) {\n        setCurrentPart(partInfo.part);\n      }\n    }\n  };\n\n  // Submit test\n  const submitTest = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"/api/analyze-batch\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          testId: currentTest.testId,\n          questions: currentTest.allQuestions.map(q => q.prompt),\n          answers,\n          audioFeatures,\n          testType: \"IELTS_AUTHENTIC\"\n        })\n      });\n      if (!response.ok) throw new Error(`Server error: ${response.status}`);\n      const data = await response.json();\n      setFeedbacks(data.feedbacks);\n      setTestSummary(data.testSummary);\n      setShowResults(true);\n    } catch (err) {\n      console.error(\"Analysis error:\", err);\n      setError(\"Error during analysis. Please check your connection and try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset test\n  const resetTest = () => {\n    const newTest = createIELTSTest();\n    setCurrentTest(newTest);\n    setAnswers(Array(newTest.totalQuestions).fill(\"\"));\n    setCurrentQuestionIndex(0);\n    setCurrentPart(1);\n    setFeedbacks(null);\n    setTestSummary(null);\n    setShowResults(false);\n    setError(null);\n    setRecordingTime(0);\n    setPreparationTime(0);\n    setIsPreparingPart2(false);\n    setPreparationNotes(\"\");\n    if (pronunciationAnalyzer) pronunciationAnalyzer.reset();\n  };\n\n  // Get band color\n  const getBandColor = band => {\n    if (band >= 8.5) return \"#2e7d32\";\n    if (band >= 7) return \"#388e3c\";\n    if (band >= 6.5) return \"#689f38\";\n    if (band >= 6) return \"#afb42b\";\n    if (band >= 5.5) return \"#f57f17\";\n    if (band >= 5) return \"#ff8f00\";\n    if (band >= 4) return \"#d32f2f\";\n    return \"#d32f2f\";\n  };\n\n  // Loading state\n  if (!isComponentReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFA4 Initializing IELTS Speaking Test...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), initializationError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: initializationError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Setting up authentic IELTS format with correct question count...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Part 1:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 12\n        }, this), \" 7-8 questions | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Part 2:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 53\n        }, this), \" 1 cue card | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Part 3:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 91\n        }, this), \" 4-6 questions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentTest) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: \"Loading test...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 12\n    }, this);\n  }\n  const currentPartInfo = getCurrentPartInfo();\n  const currentQuestion = currentTest.allQuestions[currentQuestionIndex];\n  const progress = (currentQuestionIndex + 1) / currentTest.totalQuestions * 100;\n\n  // Results view\n  if (showResults && feedbacks && testSummary) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFAF IELTS Speaking Test Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Overall Band Scores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"band-scores-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"band-score\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Fluency & Coherence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: getBandColor(testSummary.fluency)\n              },\n              children: testSummary.fluency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"band-score\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Lexical Resource\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: getBandColor(testSummary.lexical)\n              },\n              children: testSummary.lexical\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"band-score\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Grammar Range & Accuracy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: getBandColor(testSummary.grammar)\n              },\n              children: testSummary.grammar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"band-score\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Pronunciation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: getBandColor(testSummary.pronunciation)\n              },\n              children: testSummary.pronunciation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"band-score overall\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Overall Band\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: getBandColor(testSummary.overall)\n              },\n              children: testSummary.overall\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailed-feedback\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Detailed Feedback by Part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this), feedbacks.map((feedback, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: feedback.feedback\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTest,\n        className: \"btn-primary\",\n        children: \"Take Another Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-evaluator\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"test-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFA4 IELTS Speaking Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"test-id\",\n          children: [\"Test ID: \", currentTest.testId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress\",\n          children: [\"Question \", currentQuestionIndex + 1, \" of \", currentTest.totalQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"part-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.info.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"part-duration\",\n          children: [\"Duration: \", currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.info.duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"part-description\",\n          children: [\"Topics: \", currentPartInfo.info.topics.join(\" & \"), \" (\", currentPartInfo.info.questions.length, \" questions)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 13\n        }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 3 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"part-description\",\n          children: [\"Theme: \", currentPartInfo.info.theme, \" (\", currentPartInfo.info.questions.length, \" questions)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 2 && !isPreparingPart2 && preparationTime === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"part2-preparation-intro\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCDD Preparation Phase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You will have \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"1 minute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 30\n          }, this), \" to prepare your response.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You can make notes to help organize your thoughts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startPart2Preparation,\n          className: \"btn-primary\",\n          children: \"Start Preparation (1 minute)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 11\n      }, this), isPreparingPart2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preparation-phase\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u23F1\\uFE0F Preparation Time Remaining: \", formatTime(preparationTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cue-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: currentQuestion.cueCard.mainPrompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You should say:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: currentQuestion.cueCard.bulletPoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: point\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preparation-notes\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uD83D\\uDCDD Make notes here:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: preparationNotes,\n            onChange: e => setPreparationNotes(e.target.value),\n            placeholder: \"Write your notes here to organize your thoughts...\",\n            rows: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 11\n      }, this), (!isPreparingPart2 || (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) !== 2) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-number\",\n            children: [\"Question \", currentQuestionIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 1 && currentQuestion.topicName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"topic-badge\",\n            children: currentQuestion.topicName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 17\n          }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"topic-badge\",\n            children: currentQuestion.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 17\n          }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"topic-badge\",\n            children: currentQuestion.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-content\",\n          children: [(currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cue-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentQuestion.cueCard.mainPrompt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You should say:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: currentQuestion.cueCard.bulletPoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: point\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 19\n            }, this), preparationNotes && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notes-reference\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Your notes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: preparationNotes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: currentQuestion.prompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duration-guide\",\n            children: [(currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u23F1\\uFE0F Expected duration: 20-30 seconds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 49\n            }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u23F1\\uFE0F Expected duration: 1-2 minutes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 49\n            }, this), (currentPartInfo === null || currentPartInfo === void 0 ? void 0 : currentPartInfo.part) === 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u23F1\\uFE0F Expected duration: 30-60 seconds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 11\n      }, this), !isPreparingPart2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-section\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleRecording,\n            className: `record-button ${recording ? 'recording' : ''}`,\n            disabled: loading,\n            children: recording ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"\\u23F9\\uFE0F Stop Recording (\", formatTime(recordingTime), \")\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"\\uD83C\\uDFA4 Start Recording\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Your Response:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: answers[currentQuestionIndex] || \"\",\n            onChange: e => {\n              const newAnswers = [...answers];\n              newAnswers[currentQuestionIndex] = e.target.value;\n              setAnswers(newAnswers);\n            },\n            placeholder: recording ? \"Listening...\" : \"Your response will appear here, or you can type it manually...\",\n            rows: 4,\n            disabled: recording\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: goPrev,\n            disabled: currentQuestionIndex === 0 || isPreparingPart2,\n            className: \"btn-secondary\",\n            children: \"\\u2190 Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 13\n          }, this), currentQuestionIndex < currentTest.totalQuestions - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: goNext,\n            disabled: isPreparingPart2,\n            className: \"btn-primary\",\n            children: \"Next \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitTest,\n            disabled: loading || isPreparingPart2,\n            className: \"btn-success\",\n            children: loading ? \"Analyzing...\" : \"Submit Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Part 1:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 15\n            }, this), \" \", currentTest.testStructure.part1.questions.length, \" questions |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Part 2:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 15\n            }, this), \" 1 cue card |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Part 3:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 15\n            }, this), \" \", currentTest.testStructure.part3.questions.length, \" questions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Progress: \", answers.filter(a => a.trim().length > 0).length, \" / \", currentTest.totalQuestions, \" questions answered\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 624,\n    columnNumber: 5\n  }, this);\n}\n_s(SpeechEvaluator, \"TPhbXYU2ewNRIS1eUbirE7IaWtk=\");\n_c = SpeechEvaluator;\nexport default SpeechEvaluator;\nvar _c;\n$RefreshReg$(_c, \"SpeechEvaluator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","questionBank","jsxDEV","_jsxDEV","Fragment","_Fragment","createIELTSTest","availableTopics","part1Topics","shuffledTopics","sort","Math","random","introTopic","introQuestions","questions","slice","secondTopic","secondQuestions","part1Questions","forEach","q","push","topicName","part","expectedDuration","cueCards","part2CueCards","selectedCueCard","floor","length","part2Question","preparationTime","relatedDiscussion","part3Discussions","find","disc","relatedToPart2","id","part3Questions","shuffledDiscQuestions","numQuestions","map","topicTheme","testId","Date","now","title","toLocaleDateString","testStructure","part1","name","duration","topics","part2","question","cueCard","part3","theme","allQuestions","prompt","mainPrompt","totalQuestions","SimplePronunciationAnalyzer","constructor","audioContext","analyser","features","pitch","rms","spectralCentroid","zcr","isAnalyzing","initialize","window","AudioContext","webkitAudioContext","state","resume","error","console","startAnalysis","stream","Error","source","createMediaStreamSource","createAnalyser","fftSize","smoothingTimeConstant","connect","startFeatureExtraction","bufferLength","frequencyBinCount","dataArray","Float32Array","timeDataArray","extractFeatures","getFloatFrequencyData","getFloatTimeDomainData","timestamp","currentTime","calculateRMS","calculateZCR","calculateSpectralCentroid","detectPitch","value","frequency","requestAnimationFrame","timeData","sum","i","sqrt","zeroCrossings","freqData","weightedSum","magnitudeSum","magnitude","pow","sampleRate","minPeriod","maxPeriod","bestCorrelation","bestPeriod","period","min","correlation","stopAnalysis","getFeatures","reset","SpeechEvaluator","_s","currentTest","setCurrentTest","currentQuestionIndex","setCurrentQuestionIndex","currentPart","setCurrentPart","answers","setAnswers","recording","setRecording","loading","setLoading","feedbacks","setFeedbacks","testSummary","setTestSummary","setError","recordingTime","setRecordingTime","showResults","setShowResults","setPreparationTime","isPreparingPart2","setIsPreparingPart2","preparationNotes","setPreparationNotes","isComponentReady","setIsComponentReady","initializationError","setInitializationError","pronunciationAnalyzer","setPronunciationAnalyzer","audioFeatures","setAudioFeatures","isAnalyzingPronunciation","setIsAnalyzingPronunciation","recognitionRef","recordingTimerRef","preparationTimerRef","currentStreamRef","initializeComponent","test","Array","fill","analyzer","current","clearInterval","getTracks","track","stop","startRecordingTimer","setInterval","prev","stopRecordingTimer","startPreparationTimer","formatTime","seconds","mins","secs","toString","padStart","getCurrentPartInfo","part1Length","part2Index","part3StartIndex","info","startPart2Preparation","toggleRecording","_recognitionRef$curre","warn","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","analysisError","SpeechRecognition","webkitSpeechRecognition","recognition","lang","continuous","interimResults","onstart","onresult","event","speechText","from","results","result","transcript","join","newAnswers","trim","onend","onerror","start","err","goNext","nextIndex","nextPartInfo","goPrev","prevIndex","partInfo","submitTest","response","fetch","method","headers","body","JSON","stringify","testType","ok","status","data","json","resetTest","newTest","getBandColor","band","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentPartInfo","currentQuestion","progress","style","color","fluency","lexical","grammar","pronunciation","overall","feedback","index","dangerouslySetInnerHTML","__html","onClick","width","bulletPoints","point","onChange","e","target","placeholder","rows","category","type","disabled","filter","a","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/ielts-speech-evaluator/src/components/SpeechEvaluator.jsx"],"sourcesContent":["// Enhanced SpeechEvaluator.jsx - Corrected IELTS Speaking Test Format\n// Part 1: 7-8 questions from 2-3 topics, Part 2: 1 cue card, Part 3: 4-6 discussion questions\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions-corrected\";\nimport './SpeechEvaluator.css';\n\n// Function to create authentic IELTS test structure\nconst createIELTSTest = () => {\n  // PART 1: Select 2-3 topics and get 7-8 questions total\n  const availableTopics = [...questionBank.part1Topics];\n  const shuffledTopics = availableTopics.sort(() => Math.random() - 0.5);\n  \n  // First topic: 3-4 questions (mandatory introductory topic)\n  const introTopic = shuffledTopics[0];\n  const introQuestions = [...introTopic.questions].sort(() => Math.random() - 0.5).slice(0, 4);\n  \n  // Second topic: 3-4 questions  \n  const secondTopic = shuffledTopics[1];\n  const secondQuestions = [...secondTopic.questions].sort(() => Math.random() - 0.5).slice(0, Math.random() > 0.5 ? 3 : 4);\n  \n  // Build Part 1 questions (7-8 total)\n  let part1Questions = [];\n  \n  // Add questions from first topic\n  introQuestions.forEach(q => {\n    part1Questions.push({\n      ...q,\n      topicName: introTopic.topicName,\n      part: 1,\n      expectedDuration: 30 // 20-30 seconds per answer\n    });\n  });\n  \n  // Add questions from second topic\n  secondQuestions.forEach(q => {\n    part1Questions.push({\n      ...q,\n      topicName: secondTopic.topicName,\n      part: 1,\n      expectedDuration: 30\n    });\n  });\n\n  // PART 2: Select 1 cue card\n  const cueCards = [...questionBank.part2CueCards];\n  const selectedCueCard = cueCards[Math.floor(Math.random() * cueCards.length)];\n  \n  const part2Question = {\n    ...selectedCueCard,\n    part: 2,\n    expectedDuration: 120, // 1-2 minutes speaking\n    preparationTime: 60 // 1 minute preparation\n  };\n\n  // PART 3: Select 4-6 discussion questions related to Part 2 topic\n  const relatedDiscussion = questionBank.part3Discussions.find(\n    disc => disc.relatedToPart2 === selectedCueCard.id\n  );\n  \n  let part3Questions = [];\n  if (relatedDiscussion) {\n    const shuffledDiscQuestions = [...relatedDiscussion.questions].sort(() => Math.random() - 0.5);\n    const numQuestions = Math.floor(Math.random() * 3) + 4; // 4-6 questions\n    part3Questions = shuffledDiscQuestions.slice(0, numQuestions).map(q => ({\n      ...q,\n      part: 3,\n      topicTheme: relatedDiscussion.topicTheme,\n      expectedDuration: 60 // 30-60 seconds per answer\n    }));\n  }\n\n  return {\n    testId: `ielts_test_${Date.now()}`,\n    title: `IELTS Speaking Test - ${new Date().toLocaleDateString()}`,\n    testStructure: {\n      part1: {\n        name: \"Part 1: Introduction & Interview\",\n        duration: \"4-5 minutes\",\n        questions: part1Questions,\n        topics: [introTopic.topicName, secondTopic.topicName]\n      },\n      part2: {\n        name: \"Part 2: Individual Long Turn\", \n        duration: \"3-4 minutes\",\n        question: part2Question,\n        cueCard: selectedCueCard.cueCard\n      },\n      part3: {\n        name: \"Part 3: Two-way Discussion\",\n        duration: \"4-5 minutes\", \n        questions: part3Questions,\n        theme: relatedDiscussion?.topicTheme || \"General Discussion\"\n      }\n    },\n    // Flatten all questions for sequential navigation\n    allQuestions: [\n      ...part1Questions.map(q => ({ ...q, prompt: q.prompt })),\n      { ...part2Question, prompt: part2Question.cueCard.mainPrompt },\n      ...part3Questions.map(q => ({ ...q, prompt: q.prompt }))\n    ],\n    totalQuestions: part1Questions.length + 1 + part3Questions.length\n  };\n};\n\n// Pronunciation Analyzer Class (same as before)\nclass SimplePronunciationAnalyzer {\n  constructor() {\n    this.audioContext = null;\n    this.analyser = null;\n    this.features = { pitch: [], rms: [], spectralCentroid: [], zcr: [] };\n    this.isAnalyzing = false;\n  }\n\n  async initialize() {\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      if (this.audioContext.state === 'suspended') {\n        await this.audioContext.resume();\n      }\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize audio context:', error);\n      return false;\n    }\n  }\n\n  async startAnalysis(stream) {\n    if (!this.audioContext) {\n      throw new Error('Audio context not initialized');\n    }\n    const source = this.audioContext.createMediaStreamSource(stream);\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = 2048;\n    this.analyser.smoothingTimeConstant = 0.8;\n    source.connect(this.analyser);\n    this.isAnalyzing = true;\n    this.startFeatureExtraction();\n  }\n\n  startFeatureExtraction() {\n    const bufferLength = this.analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    const timeDataArray = new Float32Array(this.analyser.fftSize);\n\n    const extractFeatures = () => {\n      if (!this.isAnalyzing) return;\n      this.analyser.getFloatFrequencyData(dataArray);\n      this.analyser.getFloatTimeDomainData(timeDataArray);\n\n      const timestamp = this.audioContext.currentTime;\n      const rms = this.calculateRMS(timeDataArray);\n      const zcr = this.calculateZCR(timeDataArray);\n      const spectralCentroid = this.calculateSpectralCentroid(dataArray);\n      const pitch = this.detectPitch(timeDataArray);\n\n      this.features.rms.push({ value: rms, timestamp });\n      this.features.zcr.push({ value: zcr, timestamp });\n      this.features.spectralCentroid.push({ value: spectralCentroid, timestamp });\n      \n      if (pitch && pitch > 50 && pitch < 800) {\n        this.features.pitch.push({ frequency: pitch, timestamp });\n      }\n\n      requestAnimationFrame(extractFeatures);\n    };\n    extractFeatures();\n  }\n\n  calculateRMS(timeData) {\n    let sum = 0;\n    for (let i = 0; i < timeData.length; i++) {\n      sum += timeData[i] * timeData[i];\n    }\n    return Math.sqrt(sum / timeData.length);\n  }\n\n  calculateZCR(timeData) {\n    let zeroCrossings = 0;\n    for (let i = 1; i < timeData.length; i++) {\n      if ((timeData[i] >= 0) !== (timeData[i - 1] >= 0)) {\n        zeroCrossings++;\n      }\n    }\n    return zeroCrossings / (timeData.length - 1);\n  }\n\n  calculateSpectralCentroid(freqData) {\n    let weightedSum = 0;\n    let magnitudeSum = 0;\n    for (let i = 0; i < freqData.length; i++) {\n      const magnitude = Math.pow(10, freqData[i] / 10);\n      const frequency = (i * this.audioContext.sampleRate) / (2 * freqData.length);\n      weightedSum += frequency * magnitude;\n      magnitudeSum += magnitude;\n    }\n    return magnitudeSum > 0 ? weightedSum / magnitudeSum : 0;\n  }\n\n  detectPitch(timeData) {\n    const sampleRate = this.audioContext.sampleRate;\n    const minPeriod = Math.floor(sampleRate / 800);\n    const maxPeriod = Math.floor(sampleRate / 50);\n    let bestCorrelation = 0;\n    let bestPeriod = 0;\n\n    for (let period = minPeriod; period < Math.min(maxPeriod, timeData.length / 2); period++) {\n      let correlation = 0;\n      for (let i = 0; i < timeData.length - period; i++) {\n        correlation += timeData[i] * timeData[i + period];\n      }\n      if (correlation > bestCorrelation) {\n        bestCorrelation = correlation;\n        bestPeriod = period;\n      }\n    }\n    return bestPeriod > 0 ? sampleRate / bestPeriod : 0;\n  }\n\n  stopAnalysis() {\n    this.isAnalyzing = false;\n  }\n\n  getFeatures() {\n    return { ...this.features };\n  }\n\n  reset() {\n    this.features = { pitch: [], rms: [], spectralCentroid: [], zcr: [] };\n    this.isAnalyzing = false;\n  }\n}\n\n// Main Speech Evaluator Component\nfunction SpeechEvaluator() {\n  // State management\n  const [currentTest, setCurrentTest] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentPart, setCurrentPart] = useState(1);\n  const [answers, setAnswers] = useState([]);\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [feedbacks, setFeedbacks] = useState(null);\n  const [testSummary, setTestSummary] = useState(null);\n  const [error, setError] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n\n  // Part 2 specific states\n  const [preparationTime, setPreparationTime] = useState(0);\n  const [isPreparingPart2, setIsPreparingPart2] = useState(false);\n  const [preparationNotes, setPreparationNotes] = useState(\"\");\n\n  // Component ready state\n  const [isComponentReady, setIsComponentReady] = useState(false);\n  const [initializationError, setInitializationError] = useState(null);\n\n  // Pronunciation analysis state\n  const [pronunciationAnalyzer, setPronunciationAnalyzer] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState({});\n  const [isAnalyzingPronunciation, setIsAnalyzingPronunciation] = useState(false);\n\n  // Refs\n  const recognitionRef = useRef(null);\n  const recordingTimerRef = useRef(null);\n  const preparationTimerRef = useRef(null);\n  const currentStreamRef = useRef(null);\n\n  // Initialize component\n  useEffect(() => {\n    const initializeComponent = async () => {\n      try {\n        const test = createIELTSTest();\n        setCurrentTest(test);\n        setAnswers(Array(test.totalQuestions).fill(\"\"));\n\n        const analyzer = new SimplePronunciationAnalyzer();\n        setPronunciationAnalyzer(analyzer);\n\n        setIsComponentReady(true);\n        setInitializationError(null);\n      } catch (error) {\n        console.error('Component initialization failed:', error);\n        setInitializationError('Failed to initialize speech evaluator. Please refresh the page.');\n        setIsComponentReady(true);\n      }\n    };\n    initializeComponent();\n  }, []);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (recordingTimerRef.current) clearInterval(recordingTimerRef.current);\n      if (preparationTimerRef.current) clearInterval(preparationTimerRef.current);\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (pronunciationAnalyzer) {\n        pronunciationAnalyzer.stopAnalysis();\n      }\n    };\n  }, [pronunciationAnalyzer]);\n\n  // Timer functions\n  const startRecordingTimer = useCallback(() => {\n    setRecordingTime(0);\n    recordingTimerRef.current = setInterval(() => {\n      setRecordingTime(prev => prev + 1);\n    }, 1000);\n  }, []);\n\n  const stopRecordingTimer = useCallback(() => {\n    if (recordingTimerRef.current) {\n      clearInterval(recordingTimerRef.current);\n      recordingTimerRef.current = null;\n    }\n  }, []);\n\n  const startPreparationTimer = useCallback(() => {\n    setPreparationTime(60); // 1 minute for Part 2\n    preparationTimerRef.current = setInterval(() => {\n      setPreparationTime(prev => {\n        if (prev <= 1) {\n          clearInterval(preparationTimerRef.current);\n          setIsPreparingPart2(false);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  }, []);\n\n  const formatTime = useCallback((seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  // Determine current part based on question index\n  const getCurrentPartInfo = () => {\n    if (!currentTest) return null;\n\n    const part1Length = currentTest.testStructure.part1.questions.length;\n    const part2Index = part1Length;\n    const part3StartIndex = part1Length + 1;\n\n    if (currentQuestionIndex < part1Length) {\n      return { part: 1, info: currentTest.testStructure.part1 };\n    } else if (currentQuestionIndex === part2Index) {\n      return { part: 2, info: currentTest.testStructure.part2 };\n    } else {\n      return { part: 3, info: currentTest.testStructure.part3 };\n    }\n  };\n\n  // Start Part 2 preparation\n  const startPart2Preparation = () => {\n    setIsPreparingPart2(true);\n    setPreparationNotes(\"\");\n    startPreparationTimer();\n  };\n\n  // Recording functionality\n  const toggleRecording = async () => {\n    if (recording) {\n      recognitionRef.current?.stop();\n      if (pronunciationAnalyzer && isAnalyzingPronunciation) {\n        pronunciationAnalyzer.stopAnalysis();\n        const features = pronunciationAnalyzer.getFeatures();\n        setAudioFeatures(prev => ({ ...prev, [currentQuestionIndex]: features }));\n        setIsAnalyzingPronunciation(false);\n      }\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      return;\n    }\n\n    // Initialize AudioContext on first user interaction\n    if (pronunciationAnalyzer && !pronunciationAnalyzer.audioContext) {\n      try {\n        await pronunciationAnalyzer.initialize();\n      } catch (error) {\n        console.warn('AudioContext initialization error:', error);\n      }\n    }\n\n    // Check browser support\n    if (!(\"webkitSpeechRecognition\" in window) && !(\"SpeechRecognition\" in window)) {\n      setError(\"Speech recognition is not supported in this browser. Please use Chrome or Edge.\");\n      return;\n    }\n\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: { echoCancellation: true, noiseSuppression: true, autoGainControl: false }\n      });\n      currentStreamRef.current = stream;\n\n      // Start pronunciation analysis\n      if (pronunciationAnalyzer && pronunciationAnalyzer.audioContext) {\n        try {\n          pronunciationAnalyzer.reset();\n          await pronunciationAnalyzer.startAnalysis(stream);\n          setIsAnalyzingPronunciation(true);\n        } catch (analysisError) {\n          console.warn('Pronunciation analysis failed:', analysisError);\n        }\n      }\n\n      // Setup speech recognition\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.lang = \"en-US\";\n      recognition.continuous = true;\n      recognition.interimResults = false;\n\n      recognition.onstart = () => {\n        setRecording(true);\n        setError(null);\n        startRecordingTimer();\n      };\n\n      recognition.onresult = (event) => {\n        const speechText = Array.from(event.results).map(result => result[0].transcript).join(\" \");\n        setAnswers(prev => {\n          const newAnswers = [...prev];\n          newAnswers[currentQuestionIndex] = speechText.trim();\n          return newAnswers;\n        });\n      };\n\n      recognition.onend = () => {\n        setRecording(false);\n        stopRecordingTimer();\n      };\n\n      recognition.onerror = (event) => {\n        setError(`Speech recognition error: ${event.error}. Please try again.`);\n        setRecording(false);\n        stopRecordingTimer();\n        setIsAnalyzingPronunciation(false);\n      };\n\n      recognitionRef.current = recognition;\n      recognition.start();\n\n    } catch (err) {\n      setError(\"Failed to access microphone. Please check permissions and try again.\");\n      console.error(\"Microphone access error:\", err);\n    }\n  };\n\n  // Navigation functions\n  const goNext = () => {\n    if (currentQuestionIndex < currentTest.totalQuestions - 1) {\n      const nextIndex = currentQuestionIndex + 1;\n      const nextPartInfo = getCurrentPartInfo();\n      \n      // Check if moving to Part 2\n      if (nextPartInfo?.part === 2 && currentQuestionIndex + 1 === currentTest.testStructure.part1.questions.length) {\n        setCurrentPart(2);\n      } else if (nextPartInfo?.part === 3 && !currentPart === 3) {\n        setCurrentPart(3);\n      }\n      \n      setCurrentQuestionIndex(nextIndex);\n    }\n  };\n\n  const goPrev = () => {\n    if (currentQuestionIndex > 0) {\n      const prevIndex = currentQuestionIndex - 1;\n      setCurrentQuestionIndex(prevIndex);\n      \n      // Update current part\n      const partInfo = getCurrentPartInfo();\n      if (partInfo) {\n        setCurrentPart(partInfo.part);\n      }\n    }\n  };\n\n  // Submit test\n  const submitTest = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"/api/analyze-batch\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          testId: currentTest.testId,\n          questions: currentTest.allQuestions.map(q => q.prompt),\n          answers,\n          audioFeatures,\n          testType: \"IELTS_AUTHENTIC\"\n        }),\n      });\n\n      if (!response.ok) throw new Error(`Server error: ${response.status}`);\n\n      const data = await response.json();\n      setFeedbacks(data.feedbacks);\n      setTestSummary(data.testSummary);\n      setShowResults(true);\n    } catch (err) {\n      console.error(\"Analysis error:\", err);\n      setError(\"Error during analysis. Please check your connection and try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset test\n  const resetTest = () => {\n    const newTest = createIELTSTest();\n    setCurrentTest(newTest);\n    setAnswers(Array(newTest.totalQuestions).fill(\"\"));\n    setCurrentQuestionIndex(0);\n    setCurrentPart(1);\n    setFeedbacks(null);\n    setTestSummary(null);\n    setShowResults(false);\n    setError(null);\n    setRecordingTime(0);\n    setPreparationTime(0);\n    setIsPreparingPart2(false);\n    setPreparationNotes(\"\");\n    if (pronunciationAnalyzer) pronunciationAnalyzer.reset();\n  };\n\n  // Get band color\n  const getBandColor = (band) => {\n    if (band >= 8.5) return \"#2e7d32\";\n    if (band >= 7) return \"#388e3c\";\n    if (band >= 6.5) return \"#689f38\";\n    if (band >= 6) return \"#afb42b\";\n    if (band >= 5.5) return \"#f57f17\";\n    if (band >= 5) return \"#ff8f00\";\n    if (band >= 4) return \"#d32f2f\";\n    return \"#d32f2f\";\n  };\n\n  // Loading state\n  if (!isComponentReady) {\n    return (\n      <div className=\"loading-container\">\n        <h2>🎤 Initializing IELTS Speaking Test...</h2>\n        {initializationError && <p className=\"error-message\">{initializationError}</p>}\n        <p>Setting up authentic IELTS format with correct question count...</p>\n        <p><strong>Part 1:</strong> 7-8 questions | <strong>Part 2:</strong> 1 cue card | <strong>Part 3:</strong> 4-6 questions</p>\n      </div>\n    );\n  }\n\n  if (!currentTest) {\n    return <div className=\"loading-container\">Loading test...</div>;\n  }\n\n  const currentPartInfo = getCurrentPartInfo();\n  const currentQuestion = currentTest.allQuestions[currentQuestionIndex];\n  const progress = ((currentQuestionIndex + 1) / currentTest.totalQuestions) * 100;\n\n  // Results view\n  if (showResults && feedbacks && testSummary) {\n    return (\n      <div className=\"results-container\">\n        <h2>🎯 IELTS Speaking Test Results</h2>\n        \n        <div className=\"test-summary\">\n          <h3>Overall Band Scores</h3>\n          <div className=\"band-scores-grid\">\n            <div className=\"band-score\">\n              <span>Fluency & Coherence</span>\n              <span style={{ color: getBandColor(testSummary.fluency) }}>\n                {testSummary.fluency}\n              </span>\n            </div>\n            <div className=\"band-score\">\n              <span>Lexical Resource</span>\n              <span style={{ color: getBandColor(testSummary.lexical) }}>\n                {testSummary.lexical}\n              </span>\n            </div>\n            <div className=\"band-score\">\n              <span>Grammar Range & Accuracy</span>\n              <span style={{ color: getBandColor(testSummary.grammar) }}>\n                {testSummary.grammar}\n              </span>\n            </div>\n            <div className=\"band-score\">\n              <span>Pronunciation</span>\n              <span style={{ color: getBandColor(testSummary.pronunciation) }}>\n                {testSummary.pronunciation}\n              </span>\n            </div>\n            <div className=\"band-score overall\">\n              <span>Overall Band</span>\n              <span style={{ color: getBandColor(testSummary.overall) }}>\n                {testSummary.overall}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"detailed-feedback\">\n          <h3>Detailed Feedback by Part</h3>\n          {feedbacks.map((feedback, index) => (\n            <div key={index} className=\"feedback-section\">\n              <div dangerouslySetInnerHTML={{ __html: feedback.feedback }} />\n            </div>\n          ))}\n        </div>\n\n        <button onClick={resetTest} className=\"btn-primary\">Take Another Test</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"speech-evaluator\">\n      <header className=\"test-header\">\n        <h1>🎤 IELTS Speaking Test</h1>\n        <div className=\"test-info\">\n          <span className=\"test-id\">Test ID: {currentTest.testId}</span>\n          <span className=\"progress\">Question {currentQuestionIndex + 1} of {currentTest.totalQuestions}</span>\n        </div>\n        <div className=\"progress-bar\">\n          <div className=\"progress-fill\" style={{ width: `${progress}%` }}></div>\n        </div>\n      </header>\n\n      <div className=\"test-content\">\n        {/* Part indicator */}\n        <div className=\"part-indicator\">\n          <h2>{currentPartInfo?.info.name}</h2>\n          <p className=\"part-duration\">Duration: {currentPartInfo?.info.duration}</p>\n          {currentPartInfo?.part === 1 && (\n            <p className=\"part-description\">\n              Topics: {currentPartInfo.info.topics.join(\" & \")} ({currentPartInfo.info.questions.length} questions)\n            </p>\n          )}\n          {currentPartInfo?.part === 3 && (\n            <p className=\"part-description\">\n              Theme: {currentPartInfo.info.theme} ({currentPartInfo.info.questions.length} questions)\n            </p>\n          )}\n        </div>\n\n        {/* Part 2 Preparation Phase */}\n        {currentPartInfo?.part === 2 && !isPreparingPart2 && preparationTime === 0 && (\n          <div className=\"part2-preparation-intro\">\n            <h3>📝 Preparation Phase</h3>\n            <p>You will have <strong>1 minute</strong> to prepare your response.</p>\n            <p>You can make notes to help organize your thoughts.</p>\n            <button onClick={startPart2Preparation} className=\"btn-primary\">\n              Start Preparation (1 minute)\n            </button>\n          </div>\n        )}\n\n        {/* Part 2 Preparation Timer */}\n        {isPreparingPart2 && (\n          <div className=\"preparation-phase\">\n            <h3>⏱️ Preparation Time Remaining: {formatTime(preparationTime)}</h3>\n            <div className=\"cue-card\">\n              <h4>{currentQuestion.cueCard.mainPrompt}</h4>\n              <p>You should say:</p>\n              <ul>\n                {currentQuestion.cueCard.bulletPoints.map((point, index) => (\n                  <li key={index}>{point}</li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"preparation-notes\">\n              <label>📝 Make notes here:</label>\n              <textarea\n                value={preparationNotes}\n                onChange={(e) => setPreparationNotes(e.target.value)}\n                placeholder=\"Write your notes here to organize your thoughts...\"\n                rows={6}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Question Display */}\n        {(!isPreparingPart2 || currentPartInfo?.part !== 2) && (\n          <div className=\"question-section\">\n            <div className=\"question-header\">\n              <span className=\"question-number\">Question {currentQuestionIndex + 1}</span>\n              {currentPartInfo?.part === 1 && currentQuestion.topicName && (\n                <span className=\"topic-badge\">{currentQuestion.topicName}</span>\n              )}\n              {currentPartInfo?.part === 2 && (\n                <span className=\"topic-badge\">{currentQuestion.category}</span>\n              )}\n              {currentPartInfo?.part === 3 && (\n                <span className=\"topic-badge\">{currentQuestion.type}</span>\n              )}\n            </div>\n\n            <div className=\"question-content\">\n              {currentPartInfo?.part === 2 ? (\n                <div className=\"cue-card\">\n                  <h3>{currentQuestion.cueCard.mainPrompt}</h3>\n                  <p>You should say:</p>\n                  <ul>\n                    {currentQuestion.cueCard.bulletPoints.map((point, index) => (\n                      <li key={index}>{point}</li>\n                    ))}\n                  </ul>\n                  {preparationNotes && (\n                    <div className=\"notes-reference\">\n                      <h4>Your notes:</h4>\n                      <p>{preparationNotes}</p>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <h3>{currentQuestion.prompt}</h3>\n              )}\n\n              {/* Expected duration guidance */}\n              <div className=\"duration-guide\">\n                {currentPartInfo?.part === 1 && <span>⏱️ Expected duration: 20-30 seconds</span>}\n                {currentPartInfo?.part === 2 && <span>⏱️ Expected duration: 1-2 minutes</span>}\n                {currentPartInfo?.part === 3 && <span>⏱️ Expected duration: 30-60 seconds</span>}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Recording Controls */}\n        {!isPreparingPart2 && (\n          <div className=\"recording-section\">\n            {error && <div className=\"error-message\">{error}</div>}\n            \n            <div className=\"recording-controls\">\n              <button\n                onClick={toggleRecording}\n                className={`record-button ${recording ? 'recording' : ''}`}\n                disabled={loading}\n              >\n                {recording ? (\n                  <>⏹️ Stop Recording ({formatTime(recordingTime)})</>\n                ) : (\n                  <>🎤 Start Recording</>\n                )}\n              </button>\n            </div>\n\n            {/* Answer display */}\n            <div className=\"answer-section\">\n              <label>Your Response:</label>\n              <textarea\n                value={answers[currentQuestionIndex] || \"\"}\n                onChange={(e) => {\n                  const newAnswers = [...answers];\n                  newAnswers[currentQuestionIndex] = e.target.value;\n                  setAnswers(newAnswers);\n                }}\n                placeholder={recording ? \"Listening...\" : \"Your response will appear here, or you can type it manually...\"}\n                rows={4}\n                disabled={recording}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Navigation */}\n        <div className=\"navigation-section\">\n          <div className=\"nav-buttons\">\n            <button \n              onClick={goPrev} \n              disabled={currentQuestionIndex === 0 || isPreparingPart2}\n              className=\"btn-secondary\"\n            >\n              ← Previous\n            </button>\n            \n            {currentQuestionIndex < currentTest.totalQuestions - 1 ? (\n              <button \n                onClick={goNext}\n                disabled={isPreparingPart2}\n                className=\"btn-primary\"\n              >\n                Next →\n              </button>\n            ) : (\n              <button \n                onClick={submitTest}\n                disabled={loading || isPreparingPart2}\n                className=\"btn-success\"\n              >\n                {loading ? \"Analyzing...\" : \"Submit Test\"}\n              </button>\n            )}\n          </div>\n\n          <div className=\"progress-info\">\n            <p>\n              <strong>Part 1:</strong> {currentTest.testStructure.part1.questions.length} questions | \n              <strong> Part 2:</strong> 1 cue card | \n              <strong> Part 3:</strong> {currentTest.testStructure.part3.questions.length} questions\n            </p>\n            <p>Progress: {answers.filter(a => a.trim().length > 0).length} / {currentTest.totalQuestions} questions answered</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SpeechEvaluator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}