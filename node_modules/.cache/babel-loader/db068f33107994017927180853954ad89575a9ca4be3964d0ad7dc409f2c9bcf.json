{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ielts-speech-evaluator\\\\src\\\\components\\\\SpeechEvaluator.jsx\";\n// SpeechEvaluator-final.jsx - Auto-Advance and Unified Stop Button Style\n// Applies auto-advance when recording stops and uses consistent record button style for Part 2\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions-corrected\";\nimport './SpeechEvaluator.css';\nimport './auto-record-styles.css';\n\n// ... (createIELTSTest and SimplePronunciationAnalyzer unchanged) ...\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SpeechEvaluator() {\n  var _currentPartInfo;\n  // State and refs (same as before) ...\n\n  const startRecording = async () => {\n    // (same as before)\n  };\n  const stopRecording = () => {\n    var _recognitionRef$curre;\n    (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n    if (pronunciationAnalyzer && isAnalyzingPronunciation) {\n      pronunciationAnalyzer.stopAnalysis();\n      const features = pronunciationAnalyzer.getFeatures();\n      setAudioFeatures(prev => ({\n        ...prev,\n        [currentQuestionIndex]: features\n      }));\n      setIsAnalyzingPronunciation(false);\n    }\n    if (currentStreamRef.current) {\n      currentStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n    // AUTO-ADVANCE to next question\n    setTimeout(goNext, 300);\n  };\n  const toggleRecording = async () => {\n    if (recording) {\n      stopRecording();\n    } else {\n      await startRecording();\n    }\n  };\n\n  // ... (useEffect, navigate, etc.) ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-evaluator\",\n    children: [((_currentPartInfo = currentPartInfo) === null || _currentPartInfo === void 0 ? void 0 : _currentPartInfo.part) === 2 && !isPreparingPart2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-section part2-recording\",\n      children: [recording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auto-recording-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"recording-dot\",\n            children: \"\\u25CF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Recording: \", formatTime(recordingTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopRecording,\n          className: `record-button recording`,\n          disabled: loading,\n          children: \"\\u23F9\\uFE0F Stop Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Your Response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: answers[currentQuestionIndex] || \"\",\n          onChange: e => {\n            const newAnswers = [...answers];\n            newAnswers[currentQuestionIndex] = e.target.value;\n            setAnswers(newAnswers);\n          },\n          placeholder: recording ? \"Speaking...\" : \"Your response will appear here...\",\n          rows: 6,\n          disabled: recording\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), !showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goPrev,\n          disabled: currentQuestionIndex === 0 || isPreparingPart2,\n          className: \"btn-secondary\",\n          children: \"\\u2190 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), currentQuestionIndex < currentTest.totalQuestions - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goNext,\n          disabled: isPreparingPart2,\n          className: \"btn-primary\",\n          children: \"Next \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c = SpeechEvaluator;\nexport default SpeechEvaluator;\nvar _c;\n$RefreshReg$(_c, \"SpeechEvaluator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","questionBank","jsxDEV","_jsxDEV","SpeechEvaluator","_currentPartInfo","startRecording","stopRecording","_recognitionRef$curre","recognitionRef","current","stop","pronunciationAnalyzer","isAnalyzingPronunciation","stopAnalysis","features","getFeatures","setAudioFeatures","prev","currentQuestionIndex","setIsAnalyzingPronunciation","currentStreamRef","getTracks","forEach","track","setTimeout","goNext","toggleRecording","recording","className","children","currentPartInfo","part","isPreparingPart2","fileName","_jsxFileName","lineNumber","columnNumber","formatTime","recordingTime","onClick","disabled","loading","value","answers","onChange","e","newAnswers","target","setAnswers","placeholder","rows","showResults","goPrev","currentTest","totalQuestions","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/ielts-speech-evaluator/src/components/SpeechEvaluator.jsx"],"sourcesContent":["// SpeechEvaluator-final.jsx - Auto-Advance and Unified Stop Button Style\n// Applies auto-advance when recording stops and uses consistent record button style for Part 2\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions-corrected\";\nimport './SpeechEvaluator.css';\nimport './auto-record-styles.css';\n\n// ... (createIELTSTest and SimplePronunciationAnalyzer unchanged) ...\n\nfunction SpeechEvaluator() {\n  // State and refs (same as before) ...\n\n  const startRecording = async () => {\n    // (same as before)\n  };\n\n  const stopRecording = () => {\n    recognitionRef.current?.stop();\n    if (pronunciationAnalyzer && isAnalyzingPronunciation) {\n      pronunciationAnalyzer.stopAnalysis();\n      const features = pronunciationAnalyzer.getFeatures();\n      setAudioFeatures(prev => ({ ...prev, [currentQuestionIndex]: features }));\n      setIsAnalyzingPronunciation(false);\n    }\n    if (currentStreamRef.current) {\n      currentStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n    // AUTO-ADVANCE to next question\n    setTimeout(goNext, 300);\n  };\n\n  const toggleRecording = async () => {\n    if (recording) {\n      stopRecording();\n    } else {\n      await startRecording();\n    }\n  };\n\n  // ... (useEffect, navigate, etc.) ...\n\n  return (\n    <div className=\"speech-evaluator\">\n      {/* ... header and content ... */}\n\n      {/* Part 2 Recording Section */}\n      {currentPartInfo?.part === 2 && !isPreparingPart2 && (\n        <div className=\"recording-section part2-recording\">\n          {recording && (\n            <div className=\"auto-recording-status\">\n              <div className=\"recording-indicator\">\n                <span className=\"recording-dot\">●</span>\n                <span>Recording: {formatTime(recordingTime)}</span>\n              </div>\n              {/* UNIFIED STOP BUTTON STYLE */}\n              <button\n                onClick={stopRecording}\n                className={`record-button recording`}\n                disabled={loading}\n              >\n                ⏹️ Stop Recording\n              </button>\n            </div>\n          )}\n\n          {/* Answer display */}\n          <div className=\"answer-section\">\n            <label>Your Response:</label>\n            <textarea\n              value={answers[currentQuestionIndex] || \"\"}\n              onChange={(e) => {\n                const newAnswers = [...answers];\n                newAnswers[currentQuestionIndex] = e.target.value;\n                setAnswers(newAnswers);\n              }}\n              placeholder={recording ? \"Speaking...\" : \"Your response will appear here...\"}\n              rows={6}\n              disabled={recording}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Navigation Section (manual for parts 1 & 3) */}\n      {!showResults && (\n        <div className=\"navigation-section\">\n          <div className=\"nav-buttons\">\n            <button\n              onClick={goPrev}\n              disabled={currentQuestionIndex === 0 || isPreparingPart2}\n              className=\"btn-secondary\"\n            >\n              ← Previous\n            </button>\n            {currentQuestionIndex < currentTest.totalQuestions - 1 && (\n              <button\n                onClick={goNext}\n                disabled={isPreparingPart2}\n                className=\"btn-primary\"\n              >\n                Next →\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SpeechEvaluator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}