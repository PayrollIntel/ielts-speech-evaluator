{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ielts-speech-evaluator\\\\src\\\\components\\\\SpeechEvaluator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions-corrected\";\nimport sampleAnswers from \"../data/sampleAnswers\";\nimport './SpeechEvaluator.css';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport jsPDF from 'jspdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\nconst getBandColor = band => {\n  if (band >= 8.5) return \"#2e7d32\";\n  if (band >= 7) return \"#388e3c\";\n  if (band >= 6.5) return \"#689f38\";\n  if (band >= 6) return \"#afb42b\";\n  if (band >= 5.5) return \"#f57f17\";\n  if (band >= 5) return \"#ff8f00\";\n  if (band >= 4) return \"#d32f2f\";\n  return \"#d32f2f\";\n};\nconst createIELTSTest = () => {\n  const availableTopics = [...questionBank.part1Topics];\n  const shuffledTopics = availableTopics.sort(() => Math.random() - 0.5);\n  const introTopic = shuffledTopics[0];\n  const introQuestions = [...introTopic.questions].sort(() => Math.random() - 0.5).slice(0, 2);\n  const secondTopic = shuffledTopics[1];\n  const secondQuestionsCount = Math.random() > 0.5 ? 2 : 3;\n  const secondQuestions = [...secondTopic.questions].sort(() => Math.random() - 0.5).slice(0, secondQuestionsCount);\n  let part1Questions = [];\n  introQuestions.forEach(q => part1Questions.push({\n    ...q,\n    topicName: introTopic.topicName,\n    part: 1,\n    expectedDuration: 30\n  }));\n  secondQuestions.forEach(q => part1Questions.push({\n    ...q,\n    topicName: secondTopic.topicName,\n    part: 1,\n    expectedDuration: 30\n  }));\n  const cueCards = [...questionBank.part2CueCards];\n  const selectedCueCard = cueCards[Math.floor(Math.random() * cueCards.length)];\n  const part2Question = {\n    ...selectedCueCard,\n    part: 2,\n    expectedDuration: 120,\n    preparationTime: 60\n  };\n  const relatedDiscussion = questionBank.part3Discussions.find(disc => disc.relatedToPart2 === selectedCueCard.id);\n  let part3Questions = [];\n  if (relatedDiscussion) {\n    const shuffledDiscQuestions = [...relatedDiscussion.questions].sort(() => Math.random() - 0.5);\n    const numQuestions = Math.floor(Math.random() * 3) + 4; // 4-6 questions\n    part3Questions = shuffledDiscQuestions.slice(0, numQuestions).map(q => ({\n      ...q,\n      part: 3,\n      topicTheme: relatedDiscussion.topicTheme,\n      expectedDuration: 60\n    }));\n  }\n  const allQuestions = [...part1Questions.map(q => ({\n    ...q,\n    prompt: q.prompt\n  })), {\n    ...part2Question,\n    prompt: part2Question.cueCard.mainPrompt\n  }, ...part3Questions.map(q => ({\n    ...q,\n    prompt: q.prompt\n  }))];\n  const test = {\n    testId: `ielts_test_${Date.now()}`,\n    title: `IELTS Speaking Test - ${new Date().toLocaleDateString()}`,\n    testStructure: {\n      part1: {\n        name: \"Part 1: Introduction & Interview\",\n        duration: \"4-5 minutes\",\n        questions: part1Questions,\n        topics: [introTopic.topicName, secondTopic.topicName]\n      },\n      part2: {\n        name: \"Part 2: Individual Long Turn\",\n        duration: \"3-4 minutes\",\n        question: part2Question,\n        cueCard: selectedCueCard.cueCard\n      },\n      part3: {\n        name: \"Part 3: Two-way Discussion\",\n        duration: \"4-5 minutes\",\n        questions: part3Questions,\n        theme: (relatedDiscussion === null || relatedDiscussion === void 0 ? void 0 : relatedDiscussion.topicTheme) || \"General Discussion\"\n      }\n    },\n    allQuestions,\n    totalQuestions: allQuestions.length\n  };\n  return test;\n};\nfunction SpeechEvaluator() {\n  _s();\n  const [currentTest, setCurrentTest] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentPart, setCurrentPart] = useState(1);\n  const [answers, setAnswers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [feedbacks, setFeedbacks] = useState(null);\n  const [testSummary, setTestSummary] = useState(null);\n  const [showResults, setShowResults] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Initialize\n  useEffect(() => {\n    const test = createIELTSTest();\n    setCurrentTest(test);\n    setAnswers(Array(test.totalQuestions).fill(\"\"));\n  }, []);\n  if (!currentTest) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading test data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Navigation, recording, submission etc would be here (not shown for brevity)\n\n  // Simple example render of first question and results with chart after completing\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentTest.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Question \", currentQuestionIndex + 1, \" / \", currentTest.totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentTest.allQuestions[currentQuestionIndex].prompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentQuestionIndex <= 0,\n        onClick: () => setCurrentQuestionIndex(currentQuestionIndex - 1),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentQuestionIndex >= currentTest.totalQuestions - 1,\n        onClick: () => setCurrentQuestionIndex(currentQuestionIndex + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // Mock submit: set feedback & summary (replace with your API call)\n          setFeedbacks(currentTest.allQuestions.map(q => ({\n            question: q.prompt,\n            answer: answers[currentQuestionIndex] || \"\",\n            feedback: \"Sample feedback\"\n          })));\n          setTestSummary({\n            part1Band: 7,\n            part2Band: 6.5,\n            part3Band: 7.5,\n            overallBand: 7\n          });\n          setShowResults(true);\n        },\n        children: \"Submit Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), showResults && testSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: '400px',\n          margin: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: {\n            labels: ['Part 1', 'Part 2', 'Part 3'],\n            datasets: [{\n              label: 'Band Scores',\n              data: [testSummary.part1Band, testSummary.part2Band, testSummary.part3Band],\n              backgroundColor: [getBandColor(testSummary.part1Band), getBandColor(testSummary.part2Band), getBandColor(testSummary.part3Band)]\n            }]\n          },\n          options: {\n            scales: {\n              y: {\n                min: 0,\n                max: 9,\n                ticks: {\n                  stepSize: 0.5\n                }\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const doc = new jsPDF();\n          doc.text('IELTS Speaking Test Feedback', 10, 10);\n          doc.text(`Part 1 Band: ${testSummary.part1Band}`, 10, 20);\n          doc.text(`Part 2 Band: ${testSummary.part2Band}`, 10, 30);\n          doc.text(`Part 3 Band: ${testSummary.part3Band}`, 10, 40);\n          doc.text(`Overall Band: ${testSummary.overallBand}`, 10, 50);\n          feedbacks.forEach((fb, i) => {\n            doc.text(`Q${i + 1}: ${fb.question}`, 10, 60 + i * 20);\n            doc.text(`Your Answer: ${fb.answer}`, 10, 70 + i * 20);\n            doc.text(`Feedback: ${fb.feedback}`, 10, 80 + i * 20);\n          });\n          doc.save('IELTS-Feedback.pdf');\n        },\n        children: \"Export PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), feedbacks.map((fb, i) => {\n        var _sampleAnswers$find;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Q\", i + 1, \": \", fb.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your Answer: \", fb.answer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Feedback: \", fb.feedback]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'blue'\n            },\n            children: [\"Sample Answer: \", ((_sampleAnswers$find = sampleAnswers.find(s => s.question === fb.question)) === null || _sampleAnswers$find === void 0 ? void 0 : _sampleAnswers$find.sample) || 'Sample answer unavailable.']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(SpeechEvaluator, \"oN2cKCgDxXwpo0qsU3OCOYYG/uU=\");\n_c = SpeechEvaluator;\nexport default SpeechEvaluator;\nvar _c;\n$RefreshReg$(_c, \"SpeechEvaluator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","questionBank","sampleAnswers","Bar","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Title","Tooltip","Legend","jsPDF","jsxDEV","_jsxDEV","register","getBandColor","band","createIELTSTest","availableTopics","part1Topics","shuffledTopics","sort","Math","random","introTopic","introQuestions","questions","slice","secondTopic","secondQuestionsCount","secondQuestions","part1Questions","forEach","q","push","topicName","part","expectedDuration","cueCards","part2CueCards","selectedCueCard","floor","length","part2Question","preparationTime","relatedDiscussion","part3Discussions","find","disc","relatedToPart2","id","part3Questions","shuffledDiscQuestions","numQuestions","map","topicTheme","allQuestions","prompt","cueCard","mainPrompt","test","testId","Date","now","title","toLocaleDateString","testStructure","part1","name","duration","topics","part2","question","part3","theme","totalQuestions","SpeechEvaluator","_s","currentTest","setCurrentTest","currentQuestionIndex","setCurrentQuestionIndex","currentPart","setCurrentPart","answers","setAnswers","loading","setLoading","feedbacks","setFeedbacks","testSummary","setTestSummary","showResults","setShowResults","error","setError","Array","fill","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","answer","feedback","part1Band","part2Band","part3Band","overallBand","style","color","maxWidth","margin","data","labels","datasets","label","backgroundColor","options","scales","y","min","max","ticks","stepSize","plugins","legend","display","doc","text","fb","i","save","_sampleAnswers$find","marginTop","s","sample","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/ielts-speech-evaluator/src/components/SpeechEvaluator.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions-corrected\";\nimport sampleAnswers from \"../data/sampleAnswers\";\nimport './SpeechEvaluator.css';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport jsPDF from 'jspdf';\n\nChartJS.register(BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\n\nconst getBandColor = (band) => {\n  if (band >= 8.5) return \"#2e7d32\";\n  if (band >= 7) return \"#388e3c\";\n  if (band >= 6.5) return \"#689f38\";\n  if (band >= 6) return \"#afb42b\";\n  if (band >= 5.5) return \"#f57f17\";\n  if (band >= 5) return \"#ff8f00\";\n  if (band >= 4) return \"#d32f2f\";\n  return \"#d32f2f\";\n};\n\nconst createIELTSTest = () => {\n  const availableTopics = [...questionBank.part1Topics];\n  const shuffledTopics = availableTopics.sort(() => Math.random() - 0.5);\n\n  const introTopic = shuffledTopics[0];\n  const introQuestions = [...introTopic.questions].sort(() => Math.random() - 0.5).slice(0, 2);\n\n  const secondTopic = shuffledTopics[1];\n  const secondQuestionsCount = Math.random() > 0.5 ? 2 : 3;\n  const secondQuestions = [...secondTopic.questions].sort(() => Math.random() - 0.5).slice(0, secondQuestionsCount);\n\n  let part1Questions = [];\n  introQuestions.forEach(q => part1Questions.push({ ...q, topicName: introTopic.topicName, part: 1, expectedDuration: 30 }));\n  secondQuestions.forEach(q => part1Questions.push({ ...q, topicName: secondTopic.topicName, part: 1, expectedDuration: 30 }));\n\n  const cueCards = [...questionBank.part2CueCards];\n  const selectedCueCard = cueCards[Math.floor(Math.random() * cueCards.length)];\n  const part2Question = { ...selectedCueCard, part: 2, expectedDuration: 120, preparationTime: 60 };\n\n  const relatedDiscussion = questionBank.part3Discussions.find(disc => disc.relatedToPart2 === selectedCueCard.id);\n  let part3Questions = [];\n  if (relatedDiscussion) {\n    const shuffledDiscQuestions = [...relatedDiscussion.questions].sort(() => Math.random() - 0.5);\n    const numQuestions = Math.floor(Math.random() * 3) + 4; // 4-6 questions\n    part3Questions = shuffledDiscQuestions.slice(0, numQuestions).map(q => ({ ...q, part: 3, topicTheme: relatedDiscussion.topicTheme, expectedDuration: 60 }));\n  }\n\n  const allQuestions = [\n    ...part1Questions.map(q => ({ ...q, prompt: q.prompt })),\n    { ...part2Question, prompt: part2Question.cueCard.mainPrompt },\n    ...part3Questions.map(q => ({ ...q, prompt: q.prompt })),\n  ];\n\n  const test = {\n    testId: `ielts_test_${Date.now()}`,\n    title: `IELTS Speaking Test - ${new Date().toLocaleDateString()}`,\n    testStructure: {\n      part1: { name: \"Part 1: Introduction & Interview\", duration: \"4-5 minutes\", questions: part1Questions, topics: [introTopic.topicName, secondTopic.topicName] },\n      part2: { name: \"Part 2: Individual Long Turn\", duration: \"3-4 minutes\", question: part2Question, cueCard: selectedCueCard.cueCard },\n      part3: { name: \"Part 3: Two-way Discussion\", duration: \"4-5 minutes\", questions: part3Questions, theme: relatedDiscussion?.topicTheme || \"General Discussion\" }\n    },\n    allQuestions,\n    totalQuestions: allQuestions.length,\n  };\n\n  return test;\n};\n\nfunction SpeechEvaluator() {\n  const [currentTest, setCurrentTest] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentPart, setCurrentPart] = useState(1);\n  const [answers, setAnswers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [feedbacks, setFeedbacks] = useState(null);\n  const [testSummary, setTestSummary] = useState(null);\n  const [showResults, setShowResults] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Initialize\n  useEffect(() => {\n    const test = createIELTSTest();\n    setCurrentTest(test);\n    setAnswers(Array(test.totalQuestions).fill(\"\"));\n  }, []);\n\n  if (!currentTest) {\n    return <div>Loading test data...</div>;\n  }\n\n  // Navigation, recording, submission etc would be here (not shown for brevity)\n\n  // Simple example render of first question and results with chart after completing\n  return (\n    <div>\n      {!showResults && (\n        <div>\n          <h2>{currentTest.title}</h2>\n          <p>Question {currentQuestionIndex + 1} / {currentTest.totalQuestions}</p>\n          <p>{currentTest.allQuestions[currentQuestionIndex].prompt}</p>\n          {/* Your recording/answering UI here */}\n          <button disabled={currentQuestionIndex <= 0} onClick={() => setCurrentQuestionIndex(currentQuestionIndex - 1)}>Previous</button>\n          <button disabled={currentQuestionIndex >= currentTest.totalQuestions - 1} onClick={() => setCurrentQuestionIndex(currentQuestionIndex + 1)}>Next</button>\n          <button onClick={() => {\n            // Mock submit: set feedback & summary (replace with your API call)\n            setFeedbacks(currentTest.allQuestions.map(q => ({\n              question: q.prompt,\n              answer: answers[currentQuestionIndex] || \"\",\n              feedback: \"Sample feedback\"\n            })));\n            setTestSummary({ part1Band: 7, part2Band: 6.5, part3Band: 7.5, overallBand: 7 });\n            setShowResults(true);\n          }}>Submit Test</button>\n          {error && <p style={{ color: \"red\" }}>{error}</p>}\n        </div>\n      )}\n      {showResults && testSummary && (\n        <div>\n          <h2>Results</h2>\n          <div style={{ maxWidth: '400px', margin: 'auto' }}>\n            <Bar\n              data={{\n                labels: ['Part 1', 'Part 2', 'Part 3'],\n                datasets: [{\n                  label: 'Band Scores',\n                  data: [testSummary.part1Band, testSummary.part2Band, testSummary.part3Band],\n                  backgroundColor: [\n                    getBandColor(testSummary.part1Band),\n                    getBandColor(testSummary.part2Band),\n                    getBandColor(testSummary.part3Band),\n                  ],\n                }],\n              }}\n              options={{\n                scales: {\n                  y: { min: 0, max: 9, ticks: { stepSize: 0.5 } },\n                },\n                plugins: { legend: { display: false } },\n              }}\n            />\n          </div>\n          <button onClick={() => {\n            const doc = new jsPDF();\n            doc.text('IELTS Speaking Test Feedback', 10, 10);\n            doc.text(`Part 1 Band: ${testSummary.part1Band}`, 10, 20);\n            doc.text(`Part 2 Band: ${testSummary.part2Band}`, 10, 30);\n            doc.text(`Part 3 Band: ${testSummary.part3Band}`, 10, 40);\n            doc.text(`Overall Band: ${testSummary.overallBand}`, 10, 50);\n            feedbacks.forEach((fb, i) => {\n              doc.text(`Q${i + 1}: ${fb.question}`, 10, 60 + i * 20);\n              doc.text(`Your Answer: ${fb.answer}`, 10, 70 + i * 20);\n              doc.text(`Feedback: ${fb.feedback}`, 10, 80 + i * 20);\n            });\n            doc.save('IELTS-Feedback.pdf');\n          }}>Export PDF</button>\n\n          {feedbacks.map((fb, i) => (\n            <div key={i} style={{ marginTop: '20px' }}>\n              <b>Q{i + 1}: {fb.question}</b>\n              <p>Your Answer: {fb.answer}</p>\n              <p>Feedback: {fb.feedback}</p>\n              <p style={{ color: 'blue' }}>Sample Answer: {sampleAnswers.find(s => s.question === fb.question)?.sample || 'Sample answer unavailable.'}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SpeechEvaluator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}