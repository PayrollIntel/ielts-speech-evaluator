{"ast":null,"code":"import _objectSpread from\"C:/Users/Lenovo/Desktop/ielts-speech-evaluator/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Enhanced SpeechEvaluator.jsx - Complete IELTS Speech Evaluator with Question Bank Integration\nimport React,{useState,useRef,useEffect,useCallback}from\"react\";import questionBank from\"../data/questions\";import'./SpeechEvaluator.css';// Function to create randomized tests from question bank\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const createRandomTest=()=>{// Filter questions by difficulty for balanced test\nconst easyQuestions=questionBank.filter(q=>q.difficulty===\"easy\");const mediumQuestions=questionBank.filter(q=>q.difficulty===\"medium\");const hardQuestions=questionBank.filter(q=>q.difficulty===\"hard\");// Create a balanced test with 1 easy, 1 medium, 1 hard question\nconst selectedQuestions=[easyQuestions[Math.floor(Math.random()*easyQuestions.length)],mediumQuestions[Math.floor(Math.random()*mediumQuestions.length)],hardQuestions[Math.floor(Math.random()*hardQuestions.length)]];return{testId:\"test_\".concat(Date.now()),title:\"IELTS Speaking Practice - \".concat(new Date().toLocaleDateString()),questions:selectedQuestions.map(q=>q.prompt),sampleAnswers:selectedQuestions.map(q=>q.sampleAnswer),categories:selectedQuestions.map(q=>q.category),difficulties:selectedQuestions.map(q=>q.difficulty),questionIds:selectedQuestions.map(q=>q.id)};};// Alternative function to create tests by specific criteria\nconst createCustomTest=function(){let criteria=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let filteredQuestions=questionBank;// Filter by category if specified\nif(criteria.category){filteredQuestions=filteredQuestions.filter(q=>q.category.toLowerCase().includes(criteria.category.toLowerCase()));}// Filter by difficulty if specified\nif(criteria.difficulty){filteredQuestions=filteredQuestions.filter(q=>q.difficulty===criteria.difficulty);}// Shuffle and take specified number of questions (default 3)\nconst numQuestions=criteria.numQuestions||3;const shuffled=[...filteredQuestions].sort(()=>Math.random()-0.5);const selectedQuestions=shuffled.slice(0,numQuestions);return{testId:\"custom_test_\".concat(Date.now()),title:criteria.title||\"Custom IELTS Test - \".concat(criteria.category||'Mixed Topics'),questions:selectedQuestions.map(q=>q.prompt),sampleAnswers:selectedQuestions.map(q=>q.sampleAnswer),categories:selectedQuestions.map(q=>q.category),difficulties:selectedQuestions.map(q=>q.difficulty),questionIds:selectedQuestions.map(q=>q.id)};};// Pronunciation Analyzer Class (simplified for React integration)\nclass SimplePronunciationAnalyzer{constructor(){this.audioContext=null;this.analyser=null;this.features={pitch:[],rms:[],spectralCentroid:[],zcr:[]};this.isAnalyzing=false;}async initialize(){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext)();return true;}catch(error){console.error('Failed to initialize audio context:',error);return false;}}async startAnalysis(stream){if(!this.audioContext){throw new Error('Audio context not initialized');}const source=this.audioContext.createMediaStreamSource(stream);this.analyser=this.audioContext.createAnalyser();this.analyser.fftSize=2048;this.analyser.smoothingTimeConstant=0.8;this.analyser.minDecibels=-90;this.analyser.maxDecibels=-10;source.connect(this.analyser);this.isAnalyzing=true;this.startFeatureExtraction();}startFeatureExtraction(){const bufferLength=this.analyser.frequencyBinCount;const dataArray=new Float32Array(bufferLength);const timeDataArray=new Float32Array(this.analyser.fftSize);const extractFeatures=()=>{if(!this.isAnalyzing)return;this.analyser.getFloatFrequencyData(dataArray);this.analyser.getFloatTimeDomainData(timeDataArray);const timestamp=this.audioContext.currentTime;const rms=this.calculateRMS(timeDataArray);const zcr=this.calculateZCR(timeDataArray);const spectralCentroid=this.calculateSpectralCentroid(dataArray);const pitch=this.detectPitch(timeDataArray);this.features.rms.push({value:rms,timestamp});this.features.zcr.push({value:zcr,timestamp});this.features.spectralCentroid.push({value:spectralCentroid,timestamp});if(pitch&&pitch>50&&pitch<800){this.features.pitch.push({frequency:pitch,timestamp});}requestAnimationFrame(extractFeatures);};extractFeatures();}calculateRMS(timeData){let sum=0;for(let i=0;i<timeData.length;i++){sum+=timeData[i]*timeData[i];}return Math.sqrt(sum/timeData.length);}calculateZCR(timeData){let zeroCrossings=0;for(let i=1;i<timeData.length;i++){if(timeData[i]>=0!==timeData[i-1]>=0){zeroCrossings++;}}return zeroCrossings/(timeData.length-1);}calculateSpectralCentroid(freqData){let weightedSum=0;let magnitudeSum=0;for(let i=0;i<freqData.length;i++){const magnitude=Math.pow(10,freqData[i]/10);const frequency=i*this.audioContext.sampleRate/(2*freqData.length);weightedSum+=frequency*magnitude;magnitudeSum+=magnitude;}return magnitudeSum>0?weightedSum/magnitudeSum:0;}detectPitch(timeData){const sampleRate=this.audioContext.sampleRate;const minPeriod=Math.floor(sampleRate/800);const maxPeriod=Math.floor(sampleRate/50);let bestCorrelation=0;let bestPeriod=0;for(let period=minPeriod;period<Math.min(maxPeriod,timeData.length/2);period++){let correlation=0;for(let i=0;i<timeData.length-period;i++){correlation+=timeData[i]*timeData[i+period];}if(correlation>bestCorrelation){bestCorrelation=correlation;bestPeriod=period;}}return bestPeriod>0?sampleRate/bestPeriod:0;}analyzeStressPatterns(){if(this.features.rms.length<10){return{stressPattern:'',rhythmScore:0.5,intonationVariation:0.5,stressAccuracy:0.5};}const syllables=this.detectSyllables();let stressPattern='';let stressedCount=0;syllables.forEach(syllable=>{const stressScore=this.calculateSyllableStress(syllable);if(stressScore>0.6){stressPattern+='S';stressedCount++;}else{stressPattern+='U';}});const stressRatio=syllables.length>0?stressedCount/syllables.length:0;const stressAccuracy=stressRatio>=0.2&&stressRatio<=0.4?Math.min(stressRatio/0.3,1.0):0.5;return{stressPattern,rhythmScore:this.calculateRhythm(syllables),intonationVariation:this.calculateIntonation(),stressAccuracy};}detectSyllables(){const threshold=this.calculateEnergyThreshold();const syllables=[];let currentSyllable=null;let inSyllable=false;this.features.rms.forEach((rmsData,index)=>{const energy=rmsData.value;const isVoiced=energy>threshold;if(isVoiced&&!inSyllable){currentSyllable={startTime:rmsData.timestamp,peakEnergy:energy,energySum:energy,samples:1};inSyllable=true;}else if(isVoiced&&inSyllable){currentSyllable.peakEnergy=Math.max(currentSyllable.peakEnergy,energy);currentSyllable.energySum+=energy;currentSyllable.samples++;}else if(!isVoiced&&inSyllable){currentSyllable.endTime=rmsData.timestamp;currentSyllable.duration=currentSyllable.endTime-currentSyllable.startTime;currentSyllable.avgEnergy=currentSyllable.energySum/currentSyllable.samples;syllables.push(currentSyllable);inSyllable=false;}});return syllables;}calculateSyllableStress(syllable){const avgIntensity=this.features.rms.reduce((sum,r)=>sum+r.value,0)/this.features.rms.length;const intensityScore=Math.min(syllable.avgEnergy/Math.max(avgIntensity,0.001),2.0);return intensityScore/2.0;}calculateRhythm(syllables){if(syllables.length<3)return 0.5;const intervals=[];for(let i=1;i<syllables.length;i++){intervals.push(syllables[i].startTime-syllables[i-1].startTime);}const avgInterval=intervals.reduce((sum,interval)=>sum+interval,0)/intervals.length;const variance=intervals.reduce((sum,interval)=>sum+Math.pow(interval-avgInterval,2),0)/intervals.length;const coefficient=Math.sqrt(variance)/Math.max(avgInterval,0.1);return Math.max(0,1-coefficient);}calculateIntonation(){if(this.features.pitch.length<10)return 0.5;const pitches=this.features.pitch.map(p=>p.frequency);const minPitch=Math.min(...pitches);const maxPitch=Math.max(...pitches);const avgPitch=pitches.reduce((sum,p)=>sum+p,0)/pitches.length;const pitchRange=(maxPitch-minPitch)/avgPitch;return Math.min(pitchRange/0.5,1.0);}calculateEnergyThreshold(){if(this.features.rms.length===0)return 0.01;const energies=this.features.rms.map(r=>r.value).sort((a,b)=>a-b);return energies[Math.floor(energies.length*0.75)]*0.25;}stopAnalysis(){this.isAnalyzing=false;}getFeatures(){return _objectSpread(_objectSpread({},this.features),{},{analysis:this.analyzeStressPatterns()});}reset(){this.features={pitch:[],rms:[],spectralCentroid:[],zcr:[]};this.isAnalyzing=false;}}// Main Speech Evaluator Component\nfunction SpeechEvaluator(){// State management\nconst[currentTest,setCurrentTest]=useState(null);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[answers,setAnswers]=useState([]);const[recording,setRecording]=useState(false);const[loading,setLoading]=useState(false);const[feedbacks,setFeedbacks]=useState(null);const[testSummary,setTestSummary]=useState(null);const[error,setError]=useState(null);const[recordingTime,setRecordingTime]=useState(0);const[showResults,setShowResults]=useState(false);const[testMode,setTestMode]=useState('random');// 'random', 'category', 'difficulty'\nconst[customCriteria,setCustomCriteria]=useState({});// Pronunciation analysis state\nconst[pronunciationAnalyzer,setPronunciationAnalyzer]=useState(null);const[audioFeatures,setAudioFeatures]=useState({});const[isAnalyzingPronunciation,setIsAnalyzingPronunciation]=useState(false);const[realTimeFeatures,setRealTimeFeatures]=useState({pitch:0,intensity:0,stressPattern:''});// Refs\nconst recognitionRef=useRef(null);const recordingTimerRef=useRef(null);const currentStreamRef=useRef(null);// Initialize test and pronunciation analyzer\nuseEffect(()=>{const test=createRandomTest();setCurrentTest(test);setAnswers(Array(test.questions.length).fill(\"\"));// Initialize pronunciation analyzer\nconst initAnalyzer=async()=>{try{const analyzer=new SimplePronunciationAnalyzer();const initialized=await analyzer.initialize();if(initialized){setPronunciationAnalyzer(analyzer);}}catch(error){console.error('Failed to initialize pronunciation analyzer:',error);}};initAnalyzer();},[]);// Real-time feature updates\nuseEffect(()=>{let interval;if(isAnalyzingPronunciation&&pronunciationAnalyzer){interval=setInterval(()=>{const features=pronunciationAnalyzer.features;if(features.pitch.length>0){const latestPitch=features.pitch[features.pitch.length-1];const latestRms=features.rms.length>0?features.rms[features.rms.length-1]:{value:0};const analysis=pronunciationAnalyzer.analyzeStressPatterns();setRealTimeFeatures({pitch:latestPitch.frequency.toFixed(1),intensity:(latestRms.value*100).toFixed(1),stressPattern:analysis.stressPattern});}},200);}return()=>{if(interval)clearInterval(interval);};},[isAnalyzingPronunciation,pronunciationAnalyzer]);// Cleanup on unmount\nuseEffect(()=>{return()=>{if(recordingTimerRef.current){clearInterval(recordingTimerRef.current);}if(currentStreamRef.current){currentStreamRef.current.getTracks().forEach(track=>track.stop());}if(pronunciationAnalyzer){pronunciationAnalyzer.stopAnalysis();}};},[pronunciationAnalyzer]);// Timer functions\nconst startRecordingTimer=useCallback(()=>{setRecordingTime(0);recordingTimerRef.current=setInterval(()=>{setRecordingTime(prev=>prev+1);},1000);},[]);const stopRecordingTimer=useCallback(()=>{if(recordingTimerRef.current){clearInterval(recordingTimerRef.current);recordingTimerRef.current=null;}},[]);const formatTime=useCallback(seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return\"\".concat(mins,\":\").concat(secs.toString().padStart(2,'0'));},[]);// Function to create new test\nconst createNewTest=function(){let criteria=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let test;if(criteria.mode==='custom'&&Object.keys(criteria).length>1){test=createCustomTest(criteria);}else{test=createRandomTest();}setCurrentTest(test);setAnswers(Array(test.questions.length).fill(\"\"));setCurrentQuestionIndex(0);setFeedbacks(null);setTestSummary(null);setShowResults(false);setError(null);setRecordingTime(0);setAudioFeatures({});setRealTimeFeatures({pitch:0,intensity:0,stressPattern:''});if(pronunciationAnalyzer){pronunciationAnalyzer.reset();}};// Enhanced recording with pronunciation analysis\nconst toggleRecording=async()=>{if(recording){var _recognitionRef$curre;// Stop recording\n(_recognitionRef$curre=recognitionRef.current)===null||_recognitionRef$curre===void 0?void 0:_recognitionRef$curre.stop();if(pronunciationAnalyzer&&isAnalyzingPronunciation){pronunciationAnalyzer.stopAnalysis();const features=pronunciationAnalyzer.getFeatures();setAudioFeatures(prev=>_objectSpread(_objectSpread({},prev),{},{[currentQuestionIndex]:features}));setIsAnalyzingPronunciation(false);}if(currentStreamRef.current){currentStreamRef.current.getTracks().forEach(track=>track.stop());}return;}// Check browser support\nif(!(\"webkitSpeechRecognition\"in window)&&!(\"SpeechRecognition\"in window)){setError(\"Speech recognition is not supported in this browser. Please use Chrome or Edge.\");return;}try{// Get microphone stream\nconst stream=await navigator.mediaDevices.getUserMedia({audio:{echoCancellation:true,noiseSuppression:true,autoGainControl:false,sampleRate:44100}});currentStreamRef.current=stream;// Start pronunciation analysis\nif(pronunciationAnalyzer){try{pronunciationAnalyzer.reset();await pronunciationAnalyzer.startAnalysis(stream);setIsAnalyzingPronunciation(true);}catch(analysisError){console.warn('Pronunciation analysis failed:',analysisError);}}// Setup speech recognition\nconst SpeechRecognition=window.SpeechRecognition||window.webkitSpeechRecognition;const recognition=new SpeechRecognition();recognition.lang=\"en-US\";recognition.continuous=true;recognition.interimResults=false;recognition.maxAlternatives=1;recognition.onstart=()=>{setRecording(true);setError(null);startRecordingTimer();};recognition.onresult=event=>{const speechText=Array.from(event.results).map(result=>result[0].transcript).join(\" \");setAnswers(prev=>{const newAnswers=[...prev];newAnswers[currentQuestionIndex]=speechText.trim();return newAnswers;});};recognition.onend=()=>{setRecording(false);stopRecordingTimer();};recognition.onerror=event=>{console.error(\"Speech recognition error:\",event.error);setError(\"Speech recognition error: \".concat(event.error,\". Please try again.\"));setRecording(false);stopRecordingTimer();setIsAnalyzingPronunciation(false);};recognitionRef.current=recognition;recognition.start();}catch(err){setError(\"Failed to access microphone. Please check your permissions and try again.\");console.error(\"Microphone access error:\",err);}};// Navigation functions\nconst goNext=()=>{if(currentQuestionIndex<currentTest.questions.length-1){setCurrentQuestionIndex(currentQuestionIndex+1);}};const goPrev=()=>{if(currentQuestionIndex>0){setCurrentQuestionIndex(currentQuestionIndex-1);}};// Enhanced submit with pronunciation analysis\nconst submitTest=async()=>{setLoading(true);setError(null);try{const response=await fetch(\"/api/analyze-batch\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({testId:currentTest.testId,questions:currentTest.questions,answers,sampleAnswers:currentTest.sampleAnswers,audioFeatures// Include pronunciation features\n})});if(!response.ok){throw new Error(\"Server error: \".concat(response.status));}const data=await response.json();setFeedbacks(data.feedbacks);setTestSummary(data.testSummary);setShowResults(true);}catch(err){console.error(\"Analysis error:\",err);setError(\"Error during analysis. Please check your connection and try again.\");}finally{setLoading(false);}};// Reset function\nconst resetTest=()=>{createNewTest({mode:'random'});};// Band color function\nconst getBandColor=band=>{if(band>=8.5)return\"#2e7d32\";// Dark green\nif(band>=7)return\"#388e3c\";// Green\nif(band>=6.5)return\"#689f38\";// Light green\nif(band>=6)return\"#afb42b\";// Yellow green\nif(band>=5.5)return\"#f57f17\";// Dark yellow\nif(band>=5)return\"#ff8f00\";// Orange\nif(band>=4)return\"#f57c00\";// Dark orange\nreturn\"#d32f2f\";// Red\n};// Get available categories for custom test creation\nconst getAvailableCategories=()=>{const categories=[...new Set(questionBank.map(q=>q.category))];return categories;};// Loading state\nif(!currentTest){return/*#__PURE__*/_jsx(\"div\",{className:\"speech-evaluator loading\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Initializing IELTS Speech Evaluator...\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Loading \",questionBank.length,\" questions from question bank...\"]})]})});}// Results display\nif(showResults&&feedbacks){return/*#__PURE__*/_jsxs(\"div\",{className:\"speech-evaluator results-view\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"results-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFAF IELTS Speaking Test Results\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"test-title\",children:currentTest.title}),/*#__PURE__*/_jsxs(\"span\",{className:\"questions-completed\",children:[feedbacks.filter(f=>f.overall>0).length,\" of \",currentTest.questions.length,\" questions completed\"]})]})]}),testSummary&&/*#__PURE__*/_jsxs(\"div\",{className:\"overall-results\",style:{borderColor:getBandColor(testSummary.overall)},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Overall Performance Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"band-scores-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"overall-band\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"band-score\",style:{color:getBandColor(testSummary.overall)},children:testSummary.overall}),/*#__PURE__*/_jsx(\"div\",{className:\"band-label\",children:\"Overall Band\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"criteria-bands\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"band-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"band-score\",style:{color:getBandColor(testSummary.fluency)},children:testSummary.fluency}),/*#__PURE__*/_jsx(\"div\",{className:\"band-label\",children:\"Fluency & Coherence\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"band-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"band-score\",style:{color:getBandColor(testSummary.lexical)},children:testSummary.lexical}),/*#__PURE__*/_jsx(\"div\",{className:\"band-label\",children:\"Lexical Resource\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"band-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"band-score\",style:{color:getBandColor(testSummary.grammar)},children:testSummary.grammar}),/*#__PURE__*/_jsx(\"div\",{className:\"band-label\",children:\"Grammar\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"band-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"band-score\",style:{color:getBandColor(testSummary.pronunciation)},children:testSummary.pronunciation}),/*#__PURE__*/_jsx(\"div\",{className:\"band-label\",children:\"Pronunciation\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"performance-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:testSummary.totalWords}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Total Words\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:testSummary.totalErrors}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Grammar Errors\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[Math.round((testSummary.stressAccuracy||0.5)*100),\"%\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Stress Accuracy\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[Math.round((testSummary.intonationScore||0.5)*100),\"%\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Intonation\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-results\",children:feedbacks.map((feedback,i)=>/*#__PURE__*/_jsxs(\"div\",{className:\"question-result\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-header\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Question \",i+1]}),currentTest.categories&&/*#__PURE__*/_jsxs(\"small\",{className:\"question-category\",children:[\"Category: \",currentTest.categories[i],\" | Difficulty: \",currentTest.difficulties[i]]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-bands\",children:/*#__PURE__*/_jsx(\"span\",{className:\"mini-band\",style:{backgroundColor:getBandColor(feedback.overall)},children:feedback.overall})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"feedback-content\",children:feedback.feedback.split('\\n').map((line,idx)=>/*#__PURE__*/_jsx(\"div\",{className:\"feedback-line\",children:line.includes('**')?/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:{__html:line.replace(/\\*\\*(.*?)\\*\\*/g,'<strong>$1</strong>')}}):/*#__PURE__*/_jsx(\"div\",{children:line})},idx))})]},i))}),/*#__PURE__*/_jsxs(\"div\",{className:\"results-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:resetTest,className:\"btn btn-primary\",children:\"\\uD83D\\uDD04 Take Another Random Test\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.print(),className:\"btn btn-secondary\",children:\"\\uD83D\\uDDA8\\uFE0F Print Results\"})]})]});}// Main test interface\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"speech-evaluator\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"test-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"test-info\",children:[/*#__PURE__*/_jsx(\"h2\",{children:currentTest.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-info\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"question-counter\",children:[\"Question \",currentQuestionIndex+1,\" of \",currentTest.questions.length]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat((currentQuestionIndex+1)/currentTest.questions.length*100,\"%\")}})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"question-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"question-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"question-text\",children:currentTest.questions[currentQuestionIndex]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-metadata\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"recommended-time\",children:\"\\u23F1\\uFE0F Recommended: 1-2 minutes\"}),/*#__PURE__*/_jsx(\"span\",{className:\"word-target\",children:\"\\uD83C\\uDFAF Target: 100+ words\"}),currentTest.categories&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"category\",children:[\"\\uD83D\\uDCC2 \",currentTest.categories[currentQuestionIndex]]}),/*#__PURE__*/_jsxs(\"span\",{className:\"difficulty\",children:[\"\\u2B50 \",currentTest.difficulties[currentQuestionIndex]]})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"recording-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"recording-controls\",children:/*#__PURE__*/_jsx(\"button\",{onClick:toggleRecording,disabled:loading,className:\"record-btn \".concat(recording?'recording':''),children:recording?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"record-icon\",children:\"\\u23F9\\uFE0F\"}),\"Stop Recording (\",formatTime(recordingTime),\")\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"record-icon\",children:\"\\uD83C\\uDFA4\"}),\"Start Recording\"]})})}),recording&&/*#__PURE__*/_jsxs(\"div\",{className:\"real-time-analysis\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDD34 Live Analysis\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Pitch\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[realTimeFeatures.pitch,\" Hz\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Intensity\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[realTimeFeatures.intensity,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Pattern\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stress-pattern\",children:realTimeFeatures.stressPattern.split('').map((char,idx)=>/*#__PURE__*/_jsx(\"span\",{className:char==='S'?'stressed':'unstressed',children:char},idx))})]})]})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[\"\\u26A0\\uFE0F \",error]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"response-section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"response-textarea\",children:\"Your Response:\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"response-textarea\",value:answers[currentQuestionIndex]||\"\",onChange:e=>{const newAnswers=[...answers];newAnswers[currentQuestionIndex]=e.target.value;setAnswers(newAnswers);},placeholder:\"Your response will appear here as you speak, or you can type directly...\",disabled:recording,rows:6}),/*#__PURE__*/_jsxs(\"div\",{className:\"response-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"word-count\",children:[\"Words: \",(answers[currentQuestionIndex]||\"\").split(/\\s+/).filter(w=>w.length>0).length]}),answers[currentQuestionIndex]&&/*#__PURE__*/_jsxs(\"span\",{className:\"character-count\",children:[\"Characters: \",answers[currentQuestionIndex].length]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"navigation-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"nav-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:goPrev,disabled:currentQuestionIndex===0||recording||loading,className:\"btn btn-secondary\",children:\"\\u2190 Previous\"}),/*#__PURE__*/_jsx(\"div\",{className:\"questions-status\",children:answers.map((answer,idx)=>/*#__PURE__*/_jsx(\"div\",{className:\"question-indicator \".concat(idx===currentQuestionIndex?'current':'',\" \").concat(answer.trim()?'completed':''),onClick:()=>!recording&&!loading&&setCurrentQuestionIndex(idx),title:currentTest.categories?\"\".concat(currentTest.categories[idx],\" (\").concat(currentTest.difficulties[idx],\")\"):\"Question \".concat(idx+1),children:idx+1},idx))}),/*#__PURE__*/_jsx(\"button\",{onClick:goNext,disabled:currentQuestionIndex===currentTest.questions.length-1||recording||loading,className:\"btn btn-secondary\",children:\"Next \\u2192\"})]})}),answers.some(answer=>answer.trim().length>0)&&/*#__PURE__*/_jsxs(\"div\",{className:\"submit-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"submit-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Ready to get your results?\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"You've answered \",answers.filter(a=>a.trim().length>0).length,\" of \",currentTest.questions.length,\" questions.\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:submitTest,disabled:loading,className:\"btn btn-primary submit-btn\",children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"loading-spinner small\"}),\"Analyzing your responses...\"]}):/*#__PURE__*/_jsx(_Fragment,{children:\"\\uD83D\\uDCCA Submit Test for Analysis\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"test-options-section\",children:/*#__PURE__*/_jsxs(\"details\",{children:[/*#__PURE__*/_jsx(\"summary\",{children:\"\\uD83C\\uDFB2 Test Options\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-options-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Create a Custom Test:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"custom-test-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Category:\"}),/*#__PURE__*/_jsxs(\"select\",{value:customCriteria.category||'',onChange:e=>setCustomCriteria(prev=>_objectSpread(_objectSpread({},prev),{},{category:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Any Category\"}),getAvailableCategories().map(cat=>/*#__PURE__*/_jsx(\"option\",{value:cat,children:cat},cat))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Difficulty:\"}),/*#__PURE__*/_jsxs(\"select\",{value:customCriteria.difficulty||'',onChange:e=>setCustomCriteria(prev=>_objectSpread(_objectSpread({},prev),{},{difficulty:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Mixed\"}),/*#__PURE__*/_jsx(\"option\",{value:\"easy\",children:\"Easy\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hard\",children:\"Hard\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Number of Questions:\"}),/*#__PURE__*/_jsxs(\"select\",{value:customCriteria.numQuestions||3,onChange:e=>setCustomCriteria(prev=>_objectSpread(_objectSpread({},prev),{},{numQuestions:parseInt(e.target.value)})),children:[/*#__PURE__*/_jsx(\"option\",{value:3,children:\"3 Questions\"}),/*#__PURE__*/_jsx(\"option\",{value:5,children:\"5 Questions\"}),/*#__PURE__*/_jsx(\"option\",{value:7,children:\"7 Questions\"})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>createNewTest(_objectSpread(_objectSpread({},customCriteria),{},{mode:'custom'})),className:\"btn btn-secondary\",disabled:recording||loading,children:\"\\uD83C\\uDFAF Create Custom Test\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'15px'},children:/*#__PURE__*/_jsx(\"button\",{onClick:resetTest,className:\"btn btn-secondary\",disabled:recording||loading,children:\"\\uD83D\\uDD04 Generate Random Test\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-bank-info\",style:{marginTop:'15px',fontSize:'0.9rem',color:'#666'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Question Bank:\"}),\" \",questionBank.length,\" total questions available\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Categories:\"}),\" \",getAvailableCategories().join(', ')]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"help-section\",children:/*#__PURE__*/_jsxs(\"details\",{children:[/*#__PURE__*/_jsx(\"summary\",{children:\"\\uD83D\\uDCDD Instructions & Tips\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"help-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"How to use this evaluator:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Click \\\"Start Recording\\\" and speak your answer clearly\"}),/*#__PURE__*/_jsx(\"li\",{children:\"You can also type your response directly\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Navigate between questions using the Previous/Next buttons or click question numbers\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Aim for detailed responses (100+ words per question)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Submit when you've answered at least one question\"})]}),/*#__PURE__*/_jsx(\"h4\",{children:\"For best pronunciation analysis:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Use a quiet environment\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Speak at a natural pace\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Ensure good microphone quality\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Use Chrome or Edge browsers\"})]}),/*#__PURE__*/_jsx(\"h4\",{children:\"Question Categories Available:\"}),/*#__PURE__*/_jsx(\"ul\",{children:getAvailableCategories().map(category=>/*#__PURE__*/_jsx(\"li\",{children:category},category))})]})]})})]});}export default SpeechEvaluator;","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","questionBank","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","createRandomTest","easyQuestions","filter","q","difficulty","mediumQuestions","hardQuestions","selectedQuestions","Math","floor","random","length","testId","concat","Date","now","title","toLocaleDateString","questions","map","prompt","sampleAnswers","sampleAnswer","categories","category","difficulties","questionIds","id","createCustomTest","criteria","arguments","undefined","filteredQuestions","toLowerCase","includes","numQuestions","shuffled","sort","slice","SimplePronunciationAnalyzer","constructor","audioContext","analyser","features","pitch","rms","spectralCentroid","zcr","isAnalyzing","initialize","window","AudioContext","webkitAudioContext","error","console","startAnalysis","stream","Error","source","createMediaStreamSource","createAnalyser","fftSize","smoothingTimeConstant","minDecibels","maxDecibels","connect","startFeatureExtraction","bufferLength","frequencyBinCount","dataArray","Float32Array","timeDataArray","extractFeatures","getFloatFrequencyData","getFloatTimeDomainData","timestamp","currentTime","calculateRMS","calculateZCR","calculateSpectralCentroid","detectPitch","push","value","frequency","requestAnimationFrame","timeData","sum","i","sqrt","zeroCrossings","freqData","weightedSum","magnitudeSum","magnitude","pow","sampleRate","minPeriod","maxPeriod","bestCorrelation","bestPeriod","period","min","correlation","analyzeStressPatterns","stressPattern","rhythmScore","intonationVariation","stressAccuracy","syllables","detectSyllables","stressedCount","forEach","syllable","stressScore","calculateSyllableStress","stressRatio","calculateRhythm","calculateIntonation","threshold","calculateEnergyThreshold","currentSyllable","inSyllable","rmsData","index","energy","isVoiced","startTime","peakEnergy","energySum","samples","max","endTime","duration","avgEnergy","avgIntensity","reduce","r","intensityScore","intervals","avgInterval","interval","variance","coefficient","pitches","p","minPitch","maxPitch","avgPitch","pitchRange","energies","a","b","stopAnalysis","getFeatures","_objectSpread","analysis","reset","SpeechEvaluator","currentTest","setCurrentTest","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","recording","setRecording","loading","setLoading","feedbacks","setFeedbacks","testSummary","setTestSummary","setError","recordingTime","setRecordingTime","showResults","setShowResults","testMode","setTestMode","customCriteria","setCustomCriteria","pronunciationAnalyzer","setPronunciationAnalyzer","audioFeatures","setAudioFeatures","isAnalyzingPronunciation","setIsAnalyzingPronunciation","realTimeFeatures","setRealTimeFeatures","intensity","recognitionRef","recordingTimerRef","currentStreamRef","test","Array","fill","initAnalyzer","analyzer","initialized","setInterval","latestPitch","latestRms","toFixed","clearInterval","current","getTracks","track","stop","startRecordingTimer","prev","stopRecordingTimer","formatTime","seconds","mins","secs","toString","padStart","createNewTest","mode","Object","keys","toggleRecording","_recognitionRef$curre","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","analysisError","warn","SpeechRecognition","webkitSpeechRecognition","recognition","lang","continuous","interimResults","maxAlternatives","onstart","onresult","event","speechText","from","results","result","transcript","join","newAnswers","trim","onend","onerror","start","err","goNext","goPrev","submitTest","response","fetch","method","headers","body","JSON","stringify","ok","status","data","json","resetTest","getBandColor","band","getAvailableCategories","Set","className","children","f","overall","style","borderColor","color","fluency","lexical","grammar","pronunciation","totalWords","totalErrors","round","intonationScore","feedback","backgroundColor","split","line","idx","dangerouslySetInnerHTML","__html","replace","onClick","print","width","disabled","char","htmlFor","onChange","e","target","placeholder","rows","w","answer","some","cat","parseInt","marginTop","fontSize"],"sources":["C:/Users/Lenovo/Desktop/ielts-speech-evaluator/src/components/SpeechEvaluator.jsx"],"sourcesContent":["// Enhanced SpeechEvaluator.jsx - Complete IELTS Speech Evaluator with Question Bank Integration\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions\";\nimport './SpeechEvaluator.css';\n\n// Function to create randomized tests from question bank\nconst createRandomTest = () => {\n  // Filter questions by difficulty for balanced test\n  const easyQuestions = questionBank.filter(q => q.difficulty === \"easy\");\n  const mediumQuestions = questionBank.filter(q => q.difficulty === \"medium\");\n  const hardQuestions = questionBank.filter(q => q.difficulty === \"hard\");\n  \n  // Create a balanced test with 1 easy, 1 medium, 1 hard question\n  const selectedQuestions = [\n    easyQuestions[Math.floor(Math.random() * easyQuestions.length)],\n    mediumQuestions[Math.floor(Math.random() * mediumQuestions.length)],\n    hardQuestions[Math.floor(Math.random() * hardQuestions.length)]\n  ];\n\n  return {\n    testId: `test_${Date.now()}`,\n    title: `IELTS Speaking Practice - ${new Date().toLocaleDateString()}`,\n    questions: selectedQuestions.map(q => q.prompt),\n    sampleAnswers: selectedQuestions.map(q => q.sampleAnswer),\n    categories: selectedQuestions.map(q => q.category),\n    difficulties: selectedQuestions.map(q => q.difficulty),\n    questionIds: selectedQuestions.map(q => q.id)\n  };\n};\n\n// Alternative function to create tests by specific criteria\nconst createCustomTest = (criteria = {}) => {\n  let filteredQuestions = questionBank;\n  \n  // Filter by category if specified\n  if (criteria.category) {\n    filteredQuestions = filteredQuestions.filter(q => \n      q.category.toLowerCase().includes(criteria.category.toLowerCase())\n    );\n  }\n  \n  // Filter by difficulty if specified\n  if (criteria.difficulty) {\n    filteredQuestions = filteredQuestions.filter(q => q.difficulty === criteria.difficulty);\n  }\n  \n  // Shuffle and take specified number of questions (default 3)\n  const numQuestions = criteria.numQuestions || 3;\n  const shuffled = [...filteredQuestions].sort(() => Math.random() - 0.5);\n  const selectedQuestions = shuffled.slice(0, numQuestions);\n  \n  return {\n    testId: `custom_test_${Date.now()}`,\n    title: criteria.title || `Custom IELTS Test - ${criteria.category || 'Mixed Topics'}`,\n    questions: selectedQuestions.map(q => q.prompt),\n    sampleAnswers: selectedQuestions.map(q => q.sampleAnswer),\n    categories: selectedQuestions.map(q => q.category),\n    difficulties: selectedQuestions.map(q => q.difficulty),\n    questionIds: selectedQuestions.map(q => q.id)\n  };\n};\n\n// Pronunciation Analyzer Class (simplified for React integration)\nclass SimplePronunciationAnalyzer {\n  constructor() {\n    this.audioContext = null;\n    this.analyser = null;\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isAnalyzing = false;\n  }\n\n  async initialize() {\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize audio context:', error);\n      return false;\n    }\n  }\n\n  async startAnalysis(stream) {\n    if (!this.audioContext) {\n      throw new Error('Audio context not initialized');\n    }\n\n    const source = this.audioContext.createMediaStreamSource(stream);\n    this.analyser = this.audioContext.createAnalyser();\n    \n    this.analyser.fftSize = 2048;\n    this.analyser.smoothingTimeConstant = 0.8;\n    this.analyser.minDecibels = -90;\n    this.analyser.maxDecibels = -10;\n    \n    source.connect(this.analyser);\n    this.isAnalyzing = true;\n    this.startFeatureExtraction();\n  }\n\n  startFeatureExtraction() {\n    const bufferLength = this.analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    const timeDataArray = new Float32Array(this.analyser.fftSize);\n    \n    const extractFeatures = () => {\n      if (!this.isAnalyzing) return;\n      \n      this.analyser.getFloatFrequencyData(dataArray);\n      this.analyser.getFloatTimeDomainData(timeDataArray);\n      \n      const timestamp = this.audioContext.currentTime;\n      const rms = this.calculateRMS(timeDataArray);\n      const zcr = this.calculateZCR(timeDataArray);\n      const spectralCentroid = this.calculateSpectralCentroid(dataArray);\n      const pitch = this.detectPitch(timeDataArray);\n      \n      this.features.rms.push({ value: rms, timestamp });\n      this.features.zcr.push({ value: zcr, timestamp });\n      this.features.spectralCentroid.push({ value: spectralCentroid, timestamp });\n      \n      if (pitch && pitch > 50 && pitch < 800) {\n        this.features.pitch.push({ frequency: pitch, timestamp });\n      }\n      \n      requestAnimationFrame(extractFeatures);\n    };\n    \n    extractFeatures();\n  }\n\n  calculateRMS(timeData) {\n    let sum = 0;\n    for (let i = 0; i < timeData.length; i++) {\n      sum += timeData[i] * timeData[i];\n    }\n    return Math.sqrt(sum / timeData.length);\n  }\n\n  calculateZCR(timeData) {\n    let zeroCrossings = 0;\n    for (let i = 1; i < timeData.length; i++) {\n      if ((timeData[i] >= 0) !== (timeData[i - 1] >= 0)) {\n        zeroCrossings++;\n      }\n    }\n    return zeroCrossings / (timeData.length - 1);\n  }\n\n  calculateSpectralCentroid(freqData) {\n    let weightedSum = 0;\n    let magnitudeSum = 0;\n    \n    for (let i = 0; i < freqData.length; i++) {\n      const magnitude = Math.pow(10, freqData[i] / 10);\n      const frequency = (i * this.audioContext.sampleRate) / (2 * freqData.length);\n      \n      weightedSum += frequency * magnitude;\n      magnitudeSum += magnitude;\n    }\n    \n    return magnitudeSum > 0 ? weightedSum / magnitudeSum : 0;\n  }\n\n  detectPitch(timeData) {\n    const sampleRate = this.audioContext.sampleRate;\n    const minPeriod = Math.floor(sampleRate / 800);\n    const maxPeriod = Math.floor(sampleRate / 50);\n    \n    let bestCorrelation = 0;\n    let bestPeriod = 0;\n    \n    for (let period = minPeriod; period < Math.min(maxPeriod, timeData.length / 2); period++) {\n      let correlation = 0;\n      for (let i = 0; i < timeData.length - period; i++) {\n        correlation += timeData[i] * timeData[i + period];\n      }\n      \n      if (correlation > bestCorrelation) {\n        bestCorrelation = correlation;\n        bestPeriod = period;\n      }\n    }\n    \n    return bestPeriod > 0 ? sampleRate / bestPeriod : 0;\n  }\n\n  analyzeStressPatterns() {\n    if (this.features.rms.length < 10) {\n      return {\n        stressPattern: '',\n        rhythmScore: 0.5,\n        intonationVariation: 0.5,\n        stressAccuracy: 0.5\n      };\n    }\n\n    const syllables = this.detectSyllables();\n    let stressPattern = '';\n    let stressedCount = 0;\n\n    syllables.forEach(syllable => {\n      const stressScore = this.calculateSyllableStress(syllable);\n      if (stressScore > 0.6) {\n        stressPattern += 'S';\n        stressedCount++;\n      } else {\n        stressPattern += 'U';\n      }\n    });\n\n    const stressRatio = syllables.length > 0 ? stressedCount / syllables.length : 0;\n    const stressAccuracy = stressRatio >= 0.2 && stressRatio <= 0.4 ? \n      Math.min(stressRatio / 0.3, 1.0) : 0.5;\n\n    return {\n      stressPattern,\n      rhythmScore: this.calculateRhythm(syllables),\n      intonationVariation: this.calculateIntonation(),\n      stressAccuracy\n    };\n  }\n\n  detectSyllables() {\n    const threshold = this.calculateEnergyThreshold();\n    const syllables = [];\n    let currentSyllable = null;\n    let inSyllable = false;\n\n    this.features.rms.forEach((rmsData, index) => {\n      const energy = rmsData.value;\n      const isVoiced = energy > threshold;\n\n      if (isVoiced && !inSyllable) {\n        currentSyllable = {\n          startTime: rmsData.timestamp,\n          peakEnergy: energy,\n          energySum: energy,\n          samples: 1\n        };\n        inSyllable = true;\n      } else if (isVoiced && inSyllable) {\n        currentSyllable.peakEnergy = Math.max(currentSyllable.peakEnergy, energy);\n        currentSyllable.energySum += energy;\n        currentSyllable.samples++;\n      } else if (!isVoiced && inSyllable) {\n        currentSyllable.endTime = rmsData.timestamp;\n        currentSyllable.duration = currentSyllable.endTime - currentSyllable.startTime;\n        currentSyllable.avgEnergy = currentSyllable.energySum / currentSyllable.samples;\n        syllables.push(currentSyllable);\n        inSyllable = false;\n      }\n    });\n\n    return syllables;\n  }\n\n  calculateSyllableStress(syllable) {\n    const avgIntensity = this.features.rms.reduce((sum, r) => sum + r.value, 0) / this.features.rms.length;\n    const intensityScore = Math.min(syllable.avgEnergy / Math.max(avgIntensity, 0.001), 2.0);\n    return intensityScore / 2.0;\n  }\n\n  calculateRhythm(syllables) {\n    if (syllables.length < 3) return 0.5;\n    const intervals = [];\n    for (let i = 1; i < syllables.length; i++) {\n      intervals.push(syllables[i].startTime - syllables[i-1].startTime);\n    }\n    const avgInterval = intervals.reduce((sum, interval) => sum + interval, 0) / intervals.length;\n    const variance = intervals.reduce((sum, interval) => sum + Math.pow(interval - avgInterval, 2), 0) / intervals.length;\n    const coefficient = Math.sqrt(variance) / Math.max(avgInterval, 0.1);\n    return Math.max(0, 1 - coefficient);\n  }\n\n  calculateIntonation() {\n    if (this.features.pitch.length < 10) return 0.5;\n    const pitches = this.features.pitch.map(p => p.frequency);\n    const minPitch = Math.min(...pitches);\n    const maxPitch = Math.max(...pitches);\n    const avgPitch = pitches.reduce((sum, p) => sum + p, 0) / pitches.length;\n    const pitchRange = (maxPitch - minPitch) / avgPitch;\n    return Math.min(pitchRange / 0.5, 1.0);\n  }\n\n  calculateEnergyThreshold() {\n    if (this.features.rms.length === 0) return 0.01;\n    const energies = this.features.rms.map(r => r.value).sort((a, b) => a - b);\n    return energies[Math.floor(energies.length * 0.75)] * 0.25;\n  }\n\n  stopAnalysis() {\n    this.isAnalyzing = false;\n  }\n\n  getFeatures() {\n    return {\n      ...this.features,\n      analysis: this.analyzeStressPatterns()\n    };\n  }\n\n  reset() {\n    this.features = { pitch: [], rms: [], spectralCentroid: [], zcr: [] };\n    this.isAnalyzing = false;\n  }\n}\n\n// Main Speech Evaluator Component\nfunction SpeechEvaluator() {\n  // State management\n  const [currentTest, setCurrentTest] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [feedbacks, setFeedbacks] = useState(null);\n  const [testSummary, setTestSummary] = useState(null);\n  const [error, setError] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [testMode, setTestMode] = useState('random'); // 'random', 'category', 'difficulty'\n  const [customCriteria, setCustomCriteria] = useState({});\n  \n  // Pronunciation analysis state\n  const [pronunciationAnalyzer, setPronunciationAnalyzer] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState({});\n  const [isAnalyzingPronunciation, setIsAnalyzingPronunciation] = useState(false);\n  const [realTimeFeatures, setRealTimeFeatures] = useState({\n    pitch: 0,\n    intensity: 0,\n    stressPattern: ''\n  });\n\n  // Refs\n  const recognitionRef = useRef(null);\n  const recordingTimerRef = useRef(null);\n  const currentStreamRef = useRef(null);\n\n  // Initialize test and pronunciation analyzer\n  useEffect(() => {\n    const test = createRandomTest();\n    setCurrentTest(test);\n    setAnswers(Array(test.questions.length).fill(\"\"));\n\n    // Initialize pronunciation analyzer\n    const initAnalyzer = async () => {\n      try {\n        const analyzer = new SimplePronunciationAnalyzer();\n        const initialized = await analyzer.initialize();\n        if (initialized) {\n          setPronunciationAnalyzer(analyzer);\n        }\n      } catch (error) {\n        console.error('Failed to initialize pronunciation analyzer:', error);\n      }\n    };\n\n    initAnalyzer();\n  }, []);\n\n  // Real-time feature updates\n  useEffect(() => {\n    let interval;\n    if (isAnalyzingPronunciation && pronunciationAnalyzer) {\n      interval = setInterval(() => {\n        const features = pronunciationAnalyzer.features;\n        if (features.pitch.length > 0) {\n          const latestPitch = features.pitch[features.pitch.length - 1];\n          const latestRms = features.rms.length > 0 ? features.rms[features.rms.length - 1] : { value: 0 };\n          const analysis = pronunciationAnalyzer.analyzeStressPatterns();\n          \n          setRealTimeFeatures({\n            pitch: latestPitch.frequency.toFixed(1),\n            intensity: (latestRms.value * 100).toFixed(1),\n            stressPattern: analysis.stressPattern\n          });\n        }\n      }, 200);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [isAnalyzingPronunciation, pronunciationAnalyzer]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (recordingTimerRef.current) {\n        clearInterval(recordingTimerRef.current);\n      }\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (pronunciationAnalyzer) {\n        pronunciationAnalyzer.stopAnalysis();\n      }\n    };\n  }, [pronunciationAnalyzer]);\n\n  // Timer functions\n  const startRecordingTimer = useCallback(() => {\n    setRecordingTime(0);\n    recordingTimerRef.current = setInterval(() => {\n      setRecordingTime(prev => prev + 1);\n    }, 1000);\n  }, []);\n\n  const stopRecordingTimer = useCallback(() => {\n    if (recordingTimerRef.current) {\n      clearInterval(recordingTimerRef.current);\n      recordingTimerRef.current = null;\n    }\n  }, []);\n\n  const formatTime = useCallback((seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  // Function to create new test\n  const createNewTest = (criteria = {}) => {\n    let test;\n    if (criteria.mode === 'custom' && Object.keys(criteria).length > 1) {\n      test = createCustomTest(criteria);\n    } else {\n      test = createRandomTest();\n    }\n    \n    setCurrentTest(test);\n    setAnswers(Array(test.questions.length).fill(\"\"));\n    setCurrentQuestionIndex(0);\n    setFeedbacks(null);\n    setTestSummary(null);\n    setShowResults(false);\n    setError(null);\n    setRecordingTime(0);\n    setAudioFeatures({});\n    setRealTimeFeatures({ pitch: 0, intensity: 0, stressPattern: '' });\n    if (pronunciationAnalyzer) {\n      pronunciationAnalyzer.reset();\n    }\n  };\n\n  // Enhanced recording with pronunciation analysis\n  const toggleRecording = async () => {\n    if (recording) {\n      // Stop recording\n      recognitionRef.current?.stop();\n      if (pronunciationAnalyzer && isAnalyzingPronunciation) {\n        pronunciationAnalyzer.stopAnalysis();\n        const features = pronunciationAnalyzer.getFeatures();\n        setAudioFeatures(prev => ({\n          ...prev,\n          [currentQuestionIndex]: features\n        }));\n        setIsAnalyzingPronunciation(false);\n      }\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      return;\n    }\n\n    // Check browser support\n    if (!(\"webkitSpeechRecognition\" in window) && !(\"SpeechRecognition\" in window)) {\n      setError(\"Speech recognition is not supported in this browser. Please use Chrome or Edge.\");\n      return;\n    }\n\n    try {\n      // Get microphone stream\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: false,\n          sampleRate: 44100\n        }\n      });\n\n      currentStreamRef.current = stream;\n\n      // Start pronunciation analysis\n      if (pronunciationAnalyzer) {\n        try {\n          pronunciationAnalyzer.reset();\n          await pronunciationAnalyzer.startAnalysis(stream);\n          setIsAnalyzingPronunciation(true);\n        } catch (analysisError) {\n          console.warn('Pronunciation analysis failed:', analysisError);\n        }\n      }\n\n      // Setup speech recognition\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      \n      recognition.lang = \"en-US\";\n      recognition.continuous = true;\n      recognition.interimResults = false;\n      recognition.maxAlternatives = 1;\n\n      recognition.onstart = () => {\n        setRecording(true);\n        setError(null);\n        startRecordingTimer();\n      };\n\n      recognition.onresult = (event) => {\n        const speechText = Array.from(event.results)\n          .map((result) => result[0].transcript)\n          .join(\" \");\n        \n        setAnswers((prev) => {\n          const newAnswers = [...prev];\n          newAnswers[currentQuestionIndex] = speechText.trim();\n          return newAnswers;\n        });\n      };\n\n      recognition.onend = () => {\n        setRecording(false);\n        stopRecordingTimer();\n      };\n\n      recognition.onerror = (event) => {\n        console.error(\"Speech recognition error:\", event.error);\n        setError(`Speech recognition error: ${event.error}. Please try again.`);\n        setRecording(false);\n        stopRecordingTimer();\n        setIsAnalyzingPronunciation(false);\n      };\n\n      recognitionRef.current = recognition;\n      recognition.start();\n      \n    } catch (err) {\n      setError(\"Failed to access microphone. Please check your permissions and try again.\");\n      console.error(\"Microphone access error:\", err);\n    }\n  };\n\n  // Navigation functions\n  const goNext = () => {\n    if (currentQuestionIndex < currentTest.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const goPrev = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  // Enhanced submit with pronunciation analysis\n  const submitTest = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(\"/api/analyze-batch\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          testId: currentTest.testId,\n          questions: currentTest.questions,\n          answers,\n          sampleAnswers: currentTest.sampleAnswers,\n          audioFeatures // Include pronunciation features\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setFeedbacks(data.feedbacks);\n      setTestSummary(data.testSummary);\n      setShowResults(true);\n    } catch (err) {\n      console.error(\"Analysis error:\", err);\n      setError(\"Error during analysis. Please check your connection and try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset function\n  const resetTest = () => {\n    createNewTest({ mode: 'random' });\n  };\n\n  // Band color function\n  const getBandColor = (band) => {\n    if (band >= 8.5) return \"#2e7d32\"; // Dark green\n    if (band >= 7) return \"#388e3c\";   // Green\n    if (band >= 6.5) return \"#689f38\"; // Light green\n    if (band >= 6) return \"#afb42b\";   // Yellow green\n    if (band >= 5.5) return \"#f57f17\"; // Dark yellow\n    if (band >= 5) return \"#ff8f00\";   // Orange\n    if (band >= 4) return \"#f57c00\";   // Dark orange\n    return \"#d32f2f\";                  // Red\n  };\n\n  // Get available categories for custom test creation\n  const getAvailableCategories = () => {\n    const categories = [...new Set(questionBank.map(q => q.category))];\n    return categories;\n  };\n\n  // Loading state\n  if (!currentTest) {\n    return (\n      <div className=\"speech-evaluator loading\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Initializing IELTS Speech Evaluator...</p>\n          <p>Loading {questionBank.length} questions from question bank...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Results display\n  if (showResults && feedbacks) {\n    return (\n      <div className=\"speech-evaluator results-view\">\n        <div className=\"results-header\">\n          <h2>🎯 IELTS Speaking Test Results</h2>\n          <div className=\"test-info\">\n            <span className=\"test-title\">{currentTest.title}</span>\n            <span className=\"questions-completed\">{feedbacks.filter(f => f.overall > 0).length} of {currentTest.questions.length} questions completed</span>\n          </div>\n        </div>\n        \n        {testSummary && (\n          <div className=\"overall-results\" style={{ borderColor: getBandColor(testSummary.overall) }}>\n            <h3>Overall Performance Summary</h3>\n            \n            <div className=\"band-scores-grid\">\n              <div className=\"overall-band\">\n                <div className=\"band-score\" style={{ color: getBandColor(testSummary.overall) }}>\n                  {testSummary.overall}\n                </div>\n                <div className=\"band-label\">Overall Band</div>\n              </div>\n              \n              <div className=\"criteria-bands\">\n                <div className=\"band-item\">\n                  <div className=\"band-score\" style={{ color: getBandColor(testSummary.fluency) }}>\n                    {testSummary.fluency}\n                  </div>\n                  <div className=\"band-label\">Fluency & Coherence</div>\n                </div>\n                <div className=\"band-item\">\n                  <div className=\"band-score\" style={{ color: getBandColor(testSummary.lexical) }}>\n                    {testSummary.lexical}\n                  </div>\n                  <div className=\"band-label\">Lexical Resource</div>\n                </div>\n                <div className=\"band-item\">\n                  <div className=\"band-score\" style={{ color: getBandColor(testSummary.grammar) }}>\n                    {testSummary.grammar}\n                  </div>\n                  <div className=\"band-label\">Grammar</div>\n                </div>\n                <div className=\"band-item\">\n                  <div className=\"band-score\" style={{ color: getBandColor(testSummary.pronunciation) }}>\n                    {testSummary.pronunciation}\n                  </div>\n                  <div className=\"band-label\">Pronunciation</div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"performance-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{testSummary.totalWords}</span>\n                <span className=\"stat-label\">Total Words</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{testSummary.totalErrors}</span>\n                <span className=\"stat-label\">Grammar Errors</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{Math.round((testSummary.stressAccuracy || 0.5) * 100)}%</span>\n                <span className=\"stat-label\">Stress Accuracy</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{Math.round((testSummary.intonationScore || 0.5) * 100)}%</span>\n                <span className=\"stat-label\">Intonation</span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"question-results\">\n          {feedbacks.map((feedback, i) => (\n            <div key={i} className=\"question-result\">\n              <div className=\"question-header\">\n                <div>\n                  <h4>Question {i + 1}</h4>\n                  {currentTest.categories && (\n                    <small className=\"question-category\">Category: {currentTest.categories[i]} | Difficulty: {currentTest.difficulties[i]}</small>\n                  )}\n                </div>\n                <div className=\"question-bands\">\n                  <span className=\"mini-band\" style={{ backgroundColor: getBandColor(feedback.overall) }}>\n                    {feedback.overall}\n                  </span>\n                </div>\n              </div>\n              <div className=\"feedback-content\">\n                {feedback.feedback.split('\\n').map((line, idx) => (\n                  <div key={idx} className=\"feedback-line\">\n                    {line.includes('**') ? (\n                      <div dangerouslySetInnerHTML={{ \n                        __html: line.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>') \n                      }} />\n                    ) : (\n                      <div>{line}</div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"results-actions\">\n          <button onClick={resetTest} className=\"btn btn-primary\">\n            🔄 Take Another Random Test\n          </button>\n          <button onClick={() => window.print()} className=\"btn btn-secondary\">\n            🖨️ Print Results\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Main test interface\n  return (\n    <div className=\"speech-evaluator\">\n      <div className=\"test-header\">\n        <div className=\"test-info\">\n          <h2>{currentTest.title}</h2>\n          <div className=\"progress-info\">\n            <span className=\"question-counter\">Question {currentQuestionIndex + 1} of {currentTest.questions.length}</span>\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\" \n                style={{ width: `${((currentQuestionIndex + 1) / currentTest.questions.length) * 100}%` }}\n              ></div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"question-section\">\n        <div className=\"question-card\">\n          <div className=\"question-text\">\n            {currentTest.questions[currentQuestionIndex]}\n          </div>\n          <div className=\"question-metadata\">\n            <span className=\"recommended-time\">⏱️ Recommended: 1-2 minutes</span>\n            <span className=\"word-target\">🎯 Target: 100+ words</span>\n            {currentTest.categories && (\n              <>\n                <span className=\"category\">📂 {currentTest.categories[currentQuestionIndex]}</span>\n                <span className=\"difficulty\">⭐ {currentTest.difficulties[currentQuestionIndex]}</span>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"recording-section\">\n        <div className=\"recording-controls\">\n          <button \n            onClick={toggleRecording}\n            disabled={loading}\n            className={`record-btn ${recording ? 'recording' : ''}`}\n          >\n            {recording ? (\n              <>\n                <span className=\"record-icon\">⏹️</span>\n                Stop Recording ({formatTime(recordingTime)})\n              </>\n            ) : (\n              <>\n                <span className=\"record-icon\">🎤</span>\n                Start Recording\n              </>\n            )}\n          </button>\n        </div>\n\n        {recording && (\n          <div className=\"real-time-analysis\">\n            <h4>🔴 Live Analysis</h4>\n            <div className=\"analysis-grid\">\n              <div className=\"analysis-item\">\n                <span className=\"label\">Pitch</span>\n                <span className=\"value\">{realTimeFeatures.pitch} Hz</span>\n              </div>\n              <div className=\"analysis-item\">\n                <span className=\"label\">Intensity</span>\n                <span className=\"value\">{realTimeFeatures.intensity}%</span>\n              </div>\n              <div className=\"analysis-item\">\n                <span className=\"label\">Pattern</span>\n                <span className=\"stress-pattern\">\n                  {realTimeFeatures.stressPattern.split('').map((char, idx) => (\n                    <span \n                      key={idx}\n                      className={char === 'S' ? 'stressed' : 'unstressed'}\n                    >\n                      {char}\n                    </span>\n                  ))}\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"error-message\">\n            ⚠️ {error}\n          </div>\n        )}\n      </div>\n\n      <div className=\"response-section\">\n        <label htmlFor=\"response-textarea\">Your Response:</label>\n        <textarea\n          id=\"response-textarea\"\n          value={answers[currentQuestionIndex] || \"\"}\n          onChange={(e) => {\n            const newAnswers = [...answers];\n            newAnswers[currentQuestionIndex] = e.target.value;\n            setAnswers(newAnswers);\n          }}\n          placeholder=\"Your response will appear here as you speak, or you can type directly...\"\n          disabled={recording}\n          rows={6}\n        />\n        \n        <div className=\"response-stats\">\n          <span className=\"word-count\">\n            Words: {(answers[currentQuestionIndex] || \"\").split(/\\s+/).filter(w => w.length > 0).length}\n          </span>\n          {answers[currentQuestionIndex] && (\n            <span className=\"character-count\">\n              Characters: {answers[currentQuestionIndex].length}\n            </span>\n          )}\n        </div>\n      </div>\n\n      <div className=\"navigation-section\">\n        <div className=\"nav-buttons\">\n          <button \n            onClick={goPrev}\n            disabled={currentQuestionIndex === 0 || recording || loading}\n            className=\"btn btn-secondary\"\n          >\n            ← Previous\n          </button>\n\n          <div className=\"questions-status\">\n            {answers.map((answer, idx) => (\n              <div \n                key={idx}\n                className={`question-indicator ${idx === currentQuestionIndex ? 'current' : ''} ${answer.trim() ? 'completed' : ''}`}\n                onClick={() => !recording && !loading && setCurrentQuestionIndex(idx)}\n                title={currentTest.categories ? `${currentTest.categories[idx]} (${currentTest.difficulties[idx]})` : `Question ${idx + 1}`}\n              >\n                {idx + 1}\n              </div>\n            ))}\n          </div>\n\n          <button \n            onClick={goNext}\n            disabled={currentQuestionIndex === currentTest.questions.length - 1 || recording || loading}\n            className=\"btn btn-secondary\"\n          >\n            Next →\n          </button>\n        </div>\n      </div>\n\n      {answers.some(answer => answer.trim().length > 0) && (\n        <div className=\"submit-section\">\n          <div className=\"submit-info\">\n            <h4>Ready to get your results?</h4>\n            <p>You've answered {answers.filter(a => a.trim().length > 0).length} of {currentTest.questions.length} questions.</p>\n          </div>\n          <button\n            onClick={submitTest}\n            disabled={loading}\n            className=\"btn btn-primary submit-btn\"\n          >\n            {loading ? (\n              <>\n                <span className=\"loading-spinner small\"></span>\n                Analyzing your responses...\n              </>\n            ) : (\n              <>\n                📊 Submit Test for Analysis\n              </>\n            )}\n          </button>\n        </div>\n      )}\n\n      <div className=\"test-options-section\">\n        <details>\n          <summary>🎲 Test Options</summary>\n          <div className=\"test-options-content\">\n            <h4>Create a Custom Test:</h4>\n            <div className=\"custom-test-controls\">\n              <div className=\"control-group\">\n                <label>Category:</label>\n                <select \n                  value={customCriteria.category || ''}\n                  onChange={(e) => setCustomCriteria(prev => ({...prev, category: e.target.value}))}\n                >\n                  <option value=\"\">Any Category</option>\n                  {getAvailableCategories().map(cat => (\n                    <option key={cat} value={cat}>{cat}</option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"control-group\">\n                <label>Difficulty:</label>\n                <select \n                  value={customCriteria.difficulty || ''}\n                  onChange={(e) => setCustomCriteria(prev => ({...prev, difficulty: e.target.value}))}\n                >\n                  <option value=\"\">Mixed</option>\n                  <option value=\"easy\">Easy</option>\n                  <option value=\"medium\">Medium</option>\n                  <option value=\"hard\">Hard</option>\n                </select>\n              </div>\n              \n              <div className=\"control-group\">\n                <label>Number of Questions:</label>\n                <select \n                  value={customCriteria.numQuestions || 3}\n                  onChange={(e) => setCustomCriteria(prev => ({...prev, numQuestions: parseInt(e.target.value)}))}\n                >\n                  <option value={3}>3 Questions</option>\n                  <option value={5}>5 Questions</option>\n                  <option value={7}>7 Questions</option>\n                </select>\n              </div>\n              \n              <button \n                onClick={() => createNewTest({...customCriteria, mode: 'custom'})}\n                className=\"btn btn-secondary\"\n                disabled={recording || loading}\n              >\n                🎯 Create Custom Test\n              </button>\n            </div>\n            \n            <div style={{marginTop: '15px'}}>\n              <button \n                onClick={resetTest}\n                className=\"btn btn-secondary\"\n                disabled={recording || loading}\n              >\n                🔄 Generate Random Test\n              </button>\n            </div>\n            \n            <div className=\"question-bank-info\" style={{marginTop: '15px', fontSize: '0.9rem', color: '#666'}}>\n              <strong>Question Bank:</strong> {questionBank.length} total questions available\n              <br />\n              <strong>Categories:</strong> {getAvailableCategories().join(', ')}\n            </div>\n          </div>\n        </details>\n      </div>\n\n      <div className=\"help-section\">\n        <details>\n          <summary>📝 Instructions & Tips</summary>\n          <div className=\"help-content\">\n            <h4>How to use this evaluator:</h4>\n            <ul>\n              <li>Click \"Start Recording\" and speak your answer clearly</li>\n              <li>You can also type your response directly</li>\n              <li>Navigate between questions using the Previous/Next buttons or click question numbers</li>\n              <li>Aim for detailed responses (100+ words per question)</li>\n              <li>Submit when you've answered at least one question</li>\n            </ul>\n            \n            <h4>For best pronunciation analysis:</h4>\n            <ul>\n              <li>Use a quiet environment</li>\n              <li>Speak at a natural pace</li>\n              <li>Ensure good microphone quality</li>\n              <li>Use Chrome or Edge browsers</li>\n            </ul>\n            \n            <h4>Question Categories Available:</h4>\n            <ul>\n              {getAvailableCategories().map(category => (\n                <li key={category}>{category}</li>\n              ))}\n            </ul>\n          </div>\n        </details>\n      </div>\n    </div>\n  );\n}\n\nexport default SpeechEvaluator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}