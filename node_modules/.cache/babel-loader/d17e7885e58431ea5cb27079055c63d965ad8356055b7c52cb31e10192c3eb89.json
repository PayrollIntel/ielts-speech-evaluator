{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ielts-speech-evaluator\\\\src\\\\components\\\\SpeechEvaluator.jsx\",\n  _s = $RefreshSig$();\n// Enhanced SpeechEvaluator.jsx - Complete IELTS Speech Evaluator with Question Bank Integration\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions\";\nimport './SpeechEvaluator.css';\n\n// Function to create randomized tests from question bank\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst createRandomTest = () => {\n  // Filter questions by difficulty for balanced test\n  const easyQuestions = questionBank.filter(q => q.difficulty === \"easy\");\n  const mediumQuestions = questionBank.filter(q => q.difficulty === \"medium\");\n  const hardQuestions = questionBank.filter(q => q.difficulty === \"hard\");\n\n  // Create a balanced test with 1 easy, 1 medium, 1 hard question\n  const selectedQuestions = [easyQuestions[Math.floor(Math.random() * easyQuestions.length)], mediumQuestions[Math.floor(Math.random() * mediumQuestions.length)], hardQuestions[Math.floor(Math.random() * hardQuestions.length)]];\n  return {\n    testId: `test_${Date.now()}`,\n    title: `IELTS Speaking Practice - ${new Date().toLocaleDateString()}`,\n    questions: selectedQuestions.map(q => q.prompt),\n    sampleAnswers: selectedQuestions.map(q => q.sampleAnswer),\n    categories: selectedQuestions.map(q => q.category),\n    difficulties: selectedQuestions.map(q => q.difficulty),\n    questionIds: selectedQuestions.map(q => q.id)\n  };\n};\n\n// Alternative function to create tests by specific criteria\nconst createCustomTest = (criteria = {}) => {\n  let filteredQuestions = questionBank;\n\n  // Filter by category if specified\n  if (criteria.category) {\n    filteredQuestions = filteredQuestions.filter(q => q.category.toLowerCase().includes(criteria.category.toLowerCase()));\n  }\n\n  // Filter by difficulty if specified\n  if (criteria.difficulty) {\n    filteredQuestions = filteredQuestions.filter(q => q.difficulty === criteria.difficulty);\n  }\n\n  // Shuffle and take specified number of questions (default 3)\n  const numQuestions = criteria.numQuestions || 3;\n  const shuffled = [...filteredQuestions].sort(() => Math.random() - 0.5);\n  const selectedQuestions = shuffled.slice(0, numQuestions);\n  return {\n    testId: `custom_test_${Date.now()}`,\n    title: criteria.title || `Custom IELTS Test - ${criteria.category || 'Mixed Topics'}`,\n    questions: selectedQuestions.map(q => q.prompt),\n    sampleAnswers: selectedQuestions.map(q => q.sampleAnswer),\n    categories: selectedQuestions.map(q => q.category),\n    difficulties: selectedQuestions.map(q => q.difficulty),\n    questionIds: selectedQuestions.map(q => q.id)\n  };\n};\n\n// Pronunciation Analyzer Class (simplified for React integration)\nclass SimplePronunciationAnalyzer {\n  constructor() {\n    this.audioContext = null;\n    this.analyser = null;\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isAnalyzing = false;\n  }\n  async initialize() {\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize audio context:', error);\n      return false;\n    }\n  }\n  async startAnalysis(stream) {\n    if (!this.audioContext) {\n      throw new Error('Audio context not initialized');\n    }\n    const source = this.audioContext.createMediaStreamSource(stream);\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = 2048;\n    this.analyser.smoothingTimeConstant = 0.8;\n    this.analyser.minDecibels = -90;\n    this.analyser.maxDecibels = -10;\n    source.connect(this.analyser);\n    this.isAnalyzing = true;\n    this.startFeatureExtraction();\n  }\n  startFeatureExtraction() {\n    const bufferLength = this.analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    const timeDataArray = new Float32Array(this.analyser.fftSize);\n    const extractFeatures = () => {\n      if (!this.isAnalyzing) return;\n      this.analyser.getFloatFrequencyData(dataArray);\n      this.analyser.getFloatTimeDomainData(timeDataArray);\n      const timestamp = this.audioContext.currentTime;\n      const rms = this.calculateRMS(timeDataArray);\n      const zcr = this.calculateZCR(timeDataArray);\n      const spectralCentroid = this.calculateSpectralCentroid(dataArray);\n      const pitch = this.detectPitch(timeDataArray);\n      this.features.rms.push({\n        value: rms,\n        timestamp\n      });\n      this.features.zcr.push({\n        value: zcr,\n        timestamp\n      });\n      this.features.spectralCentroid.push({\n        value: spectralCentroid,\n        timestamp\n      });\n      if (pitch && pitch > 50 && pitch < 800) {\n        this.features.pitch.push({\n          frequency: pitch,\n          timestamp\n        });\n      }\n      requestAnimationFrame(extractFeatures);\n    };\n    extractFeatures();\n  }\n  calculateRMS(timeData) {\n    let sum = 0;\n    for (let i = 0; i < timeData.length; i++) {\n      sum += timeData[i] * timeData[i];\n    }\n    return Math.sqrt(sum / timeData.length);\n  }\n  calculateZCR(timeData) {\n    let zeroCrossings = 0;\n    for (let i = 1; i < timeData.length; i++) {\n      if (timeData[i] >= 0 !== timeData[i - 1] >= 0) {\n        zeroCrossings++;\n      }\n    }\n    return zeroCrossings / (timeData.length - 1);\n  }\n  calculateSpectralCentroid(freqData) {\n    let weightedSum = 0;\n    let magnitudeSum = 0;\n    for (let i = 0; i < freqData.length; i++) {\n      const magnitude = Math.pow(10, freqData[i] / 10);\n      const frequency = i * this.audioContext.sampleRate / (2 * freqData.length);\n      weightedSum += frequency * magnitude;\n      magnitudeSum += magnitude;\n    }\n    return magnitudeSum > 0 ? weightedSum / magnitudeSum : 0;\n  }\n  detectPitch(timeData) {\n    const sampleRate = this.audioContext.sampleRate;\n    const minPeriod = Math.floor(sampleRate / 800);\n    const maxPeriod = Math.floor(sampleRate / 50);\n    let bestCorrelation = 0;\n    let bestPeriod = 0;\n    for (let period = minPeriod; period < Math.min(maxPeriod, timeData.length / 2); period++) {\n      let correlation = 0;\n      for (let i = 0; i < timeData.length - period; i++) {\n        correlation += timeData[i] * timeData[i + period];\n      }\n      if (correlation > bestCorrelation) {\n        bestCorrelation = correlation;\n        bestPeriod = period;\n      }\n    }\n    return bestPeriod > 0 ? sampleRate / bestPeriod : 0;\n  }\n  analyzeStressPatterns() {\n    if (this.features.rms.length < 10) {\n      return {\n        stressPattern: '',\n        rhythmScore: 0.5,\n        intonationVariation: 0.5,\n        stressAccuracy: 0.5\n      };\n    }\n    const syllables = this.detectSyllables();\n    let stressPattern = '';\n    let stressedCount = 0;\n    syllables.forEach(syllable => {\n      const stressScore = this.calculateSyllableStress(syllable);\n      if (stressScore > 0.6) {\n        stressPattern += 'S';\n        stressedCount++;\n      } else {\n        stressPattern += 'U';\n      }\n    });\n    const stressRatio = syllables.length > 0 ? stressedCount / syllables.length : 0;\n    const stressAccuracy = stressRatio >= 0.2 && stressRatio <= 0.4 ? Math.min(stressRatio / 0.3, 1.0) : 0.5;\n    return {\n      stressPattern,\n      rhythmScore: this.calculateRhythm(syllables),\n      intonationVariation: this.calculateIntonation(),\n      stressAccuracy\n    };\n  }\n  detectSyllables() {\n    const threshold = this.calculateEnergyThreshold();\n    const syllables = [];\n    let currentSyllable = null;\n    let inSyllable = false;\n    this.features.rms.forEach((rmsData, index) => {\n      const energy = rmsData.value;\n      const isVoiced = energy > threshold;\n      if (isVoiced && !inSyllable) {\n        currentSyllable = {\n          startTime: rmsData.timestamp,\n          peakEnergy: energy,\n          energySum: energy,\n          samples: 1\n        };\n        inSyllable = true;\n      } else if (isVoiced && inSyllable) {\n        currentSyllable.peakEnergy = Math.max(currentSyllable.peakEnergy, energy);\n        currentSyllable.energySum += energy;\n        currentSyllable.samples++;\n      } else if (!isVoiced && inSyllable) {\n        currentSyllable.endTime = rmsData.timestamp;\n        currentSyllable.duration = currentSyllable.endTime - currentSyllable.startTime;\n        currentSyllable.avgEnergy = currentSyllable.energySum / currentSyllable.samples;\n        syllables.push(currentSyllable);\n        inSyllable = false;\n      }\n    });\n    return syllables;\n  }\n  calculateSyllableStress(syllable) {\n    const avgIntensity = this.features.rms.reduce((sum, r) => sum + r.value, 0) / this.features.rms.length;\n    const intensityScore = Math.min(syllable.avgEnergy / Math.max(avgIntensity, 0.001), 2.0);\n    return intensityScore / 2.0;\n  }\n  calculateRhythm(syllables) {\n    if (syllables.length < 3) return 0.5;\n    const intervals = [];\n    for (let i = 1; i < syllables.length; i++) {\n      intervals.push(syllables[i].startTime - syllables[i - 1].startTime);\n    }\n    const avgInterval = intervals.reduce((sum, interval) => sum + interval, 0) / intervals.length;\n    const variance = intervals.reduce((sum, interval) => sum + Math.pow(interval - avgInterval, 2), 0) / intervals.length;\n    const coefficient = Math.sqrt(variance) / Math.max(avgInterval, 0.1);\n    return Math.max(0, 1 - coefficient);\n  }\n  calculateIntonation() {\n    if (this.features.pitch.length < 10) return 0.5;\n    const pitches = this.features.pitch.map(p => p.frequency);\n    const minPitch = Math.min(...pitches);\n    const maxPitch = Math.max(...pitches);\n    const avgPitch = pitches.reduce((sum, p) => sum + p, 0) / pitches.length;\n    const pitchRange = (maxPitch - minPitch) / avgPitch;\n    return Math.min(pitchRange / 0.5, 1.0);\n  }\n  calculateEnergyThreshold() {\n    if (this.features.rms.length === 0) return 0.01;\n    const energies = this.features.rms.map(r => r.value).sort((a, b) => a - b);\n    return energies[Math.floor(energies.length * 0.75)] * 0.25;\n  }\n  stopAnalysis() {\n    this.isAnalyzing = false;\n  }\n  getFeatures() {\n    return {\n      ...this.features,\n      analysis: this.analyzeStressPatterns()\n    };\n  }\n  reset() {\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isAnalyzing = false;\n  }\n}\n\n// Main Speech Evaluator Component\nfunction SpeechEvaluator() {\n  _s();\n  // State management\n  const [currentTest, setCurrentTest] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [feedbacks, setFeedbacks] = useState(null);\n  const [testSummary, setTestSummary] = useState(null);\n  const [error, setError] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [testMode, setTestMode] = useState('random'); // 'random', 'category', 'difficulty'\n  const [customCriteria, setCustomCriteria] = useState({});\n\n  // Pronunciation analysis state\n  const [pronunciationAnalyzer, setPronunciationAnalyzer] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState({});\n  const [isAnalyzingPronunciation, setIsAnalyzingPronunciation] = useState(false);\n  const [realTimeFeatures, setRealTimeFeatures] = useState({\n    pitch: 0,\n    intensity: 0,\n    stressPattern: ''\n  });\n\n  // Refs\n  const recognitionRef = useRef(null);\n  const recordingTimerRef = useRef(null);\n  const currentStreamRef = useRef(null);\n\n  // Initialize test and pronunciation analyzer\n  useEffect(() => {\n    const test = createRandomTest();\n    setCurrentTest(test);\n    setAnswers(Array(test.questions.length).fill(\"\"));\n\n    // Initialize pronunciation analyzer\n    const initAnalyzer = async () => {\n      try {\n        const analyzer = new SimplePronunciationAnalyzer();\n        const initialized = await analyzer.initialize();\n        if (initialized) {\n          setPronunciationAnalyzer(analyzer);\n        }\n      } catch (error) {\n        console.error('Failed to initialize pronunciation analyzer:', error);\n      }\n    };\n    initAnalyzer();\n  }, []);\n\n  // Real-time feature updates\n  useEffect(() => {\n    let interval;\n    if (isAnalyzingPronunciation && pronunciationAnalyzer) {\n      interval = setInterval(() => {\n        const features = pronunciationAnalyzer.features;\n        if (features.pitch.length > 0) {\n          const latestPitch = features.pitch[features.pitch.length - 1];\n          const latestRms = features.rms.length > 0 ? features.rms[features.rms.length - 1] : {\n            value: 0\n          };\n          const analysis = pronunciationAnalyzer.analyzeStressPatterns();\n          setRealTimeFeatures({\n            pitch: latestPitch.frequency.toFixed(1),\n            intensity: (latestRms.value * 100).toFixed(1),\n            stressPattern: analysis.stressPattern\n          });\n        }\n      }, 200);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [isAnalyzingPronunciation, pronunciationAnalyzer]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (recordingTimerRef.current) {\n        clearInterval(recordingTimerRef.current);\n      }\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (pronunciationAnalyzer) {\n        pronunciationAnalyzer.stopAnalysis();\n      }\n    };\n  }, [pronunciationAnalyzer]);\n\n  // Timer functions\n  const startRecordingTimer = useCallback(() => {\n    setRecordingTime(0);\n    recordingTimerRef.current = setInterval(() => {\n      setRecordingTime(prev => prev + 1);\n    }, 1000);\n  }, []);\n  const stopRecordingTimer = useCallback(() => {\n    if (recordingTimerRef.current) {\n      clearInterval(recordingTimerRef.current);\n      recordingTimerRef.current = null;\n    }\n  }, []);\n  const formatTime = useCallback(seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  // Function to create new test\n  const createNewTest = (criteria = {}) => {\n    let test;\n    if (criteria.mode === 'custom' && Object.keys(criteria).length > 1) {\n      test = createCustomTest(criteria);\n    } else {\n      test = createRandomTest();\n    }\n    setCurrentTest(test);\n    setAnswers(Array(test.questions.length).fill(\"\"));\n    setCurrentQuestionIndex(0);\n    setFeedbacks(null);\n    setTestSummary(null);\n    setShowResults(false);\n    setError(null);\n    setRecordingTime(0);\n    setAudioFeatures({});\n    setRealTimeFeatures({\n      pitch: 0,\n      intensity: 0,\n      stressPattern: ''\n    });\n    if (pronunciationAnalyzer) {\n      pronunciationAnalyzer.reset();\n    }\n  };\n\n  // Enhanced recording with pronunciation analysis\n  const toggleRecording = async () => {\n    if (recording) {\n      var _recognitionRef$curre;\n      // Stop recording\n      (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n      if (pronunciationAnalyzer && isAnalyzingPronunciation) {\n        pronunciationAnalyzer.stopAnalysis();\n        const features = pronunciationAnalyzer.getFeatures();\n        setAudioFeatures(prev => ({\n          ...prev,\n          [currentQuestionIndex]: features\n        }));\n        setIsAnalyzingPronunciation(false);\n      }\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      return;\n    }\n\n    // Check browser support\n    if (!(\"webkitSpeechRecognition\" in window) && !(\"SpeechRecognition\" in window)) {\n      setError(\"Speech recognition is not supported in this browser. Please use Chrome or Edge.\");\n      return;\n    }\n    try {\n      // Get microphone stream\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: false,\n          sampleRate: 44100\n        }\n      });\n      currentStreamRef.current = stream;\n\n      // Start pronunciation analysis\n      if (pronunciationAnalyzer) {\n        try {\n          pronunciationAnalyzer.reset();\n          await pronunciationAnalyzer.startAnalysis(stream);\n          setIsAnalyzingPronunciation(true);\n        } catch (analysisError) {\n          console.warn('Pronunciation analysis failed:', analysisError);\n        }\n      }\n\n      // Setup speech recognition\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.lang = \"en-US\";\n      recognition.continuous = true;\n      recognition.interimResults = false;\n      recognition.maxAlternatives = 1;\n      recognition.onstart = () => {\n        setRecording(true);\n        setError(null);\n        startRecordingTimer();\n      };\n      recognition.onresult = event => {\n        const speechText = Array.from(event.results).map(result => result[0].transcript).join(\" \");\n        setAnswers(prev => {\n          const newAnswers = [...prev];\n          newAnswers[currentQuestionIndex] = speechText.trim();\n          return newAnswers;\n        });\n      };\n      recognition.onend = () => {\n        setRecording(false);\n        stopRecordingTimer();\n      };\n      recognition.onerror = event => {\n        console.error(\"Speech recognition error:\", event.error);\n        setError(`Speech recognition error: ${event.error}. Please try again.`);\n        setRecording(false);\n        stopRecordingTimer();\n        setIsAnalyzingPronunciation(false);\n      };\n      recognitionRef.current = recognition;\n      recognition.start();\n    } catch (err) {\n      setError(\"Failed to access microphone. Please check your permissions and try again.\");\n      console.error(\"Microphone access error:\", err);\n    }\n  };\n\n  // Navigation functions\n  const goNext = () => {\n    if (currentQuestionIndex < currentTest.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const goPrev = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  // Enhanced submit with pronunciation analysis\n  const submitTest = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"/api/analyze-batch\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          testId: currentTest.testId,\n          questions: currentTest.questions,\n          answers,\n          sampleAnswers: currentTest.sampleAnswers,\n          audioFeatures // Include pronunciation features\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n      const data = await response.json();\n      setFeedbacks(data.feedbacks);\n      setTestSummary(data.testSummary);\n      setShowResults(true);\n    } catch (err) {\n      console.error(\"Analysis error:\", err);\n      setError(\"Error during analysis. Please check your connection and try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset function\n  const resetTest = () => {\n    createNewTest({\n      mode: 'random'\n    });\n  };\n\n  // Band color function\n  const getBandColor = band => {\n    if (band >= 8.5) return \"#2e7d32\"; // Dark green\n    if (band >= 7) return \"#388e3c\"; // Green\n    if (band >= 6.5) return \"#689f38\"; // Light green\n    if (band >= 6) return \"#afb42b\"; // Yellow green\n    if (band >= 5.5) return \"#f57f17\"; // Dark yellow\n    if (band >= 5) return \"#ff8f00\"; // Orange\n    if (band >= 4) return \"#f57c00\"; // Dark orange\n    return \"#d32f2f\"; // Red\n  };\n\n  // Get available categories for custom test creation\n  const getAvailableCategories = () => {\n    const categories = [...new Set(questionBank.map(q => q.category))];\n    return categories;\n  };\n\n  // Loading state\n  if (!currentTest) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"speech-evaluator loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Initializing IELTS Speech Evaluator...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Loading \", questionBank.length, \" questions from question bank...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Results display\n  if (showResults && feedbacks) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"speech-evaluator results-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDFAF IELTS Speaking Test Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"test-title\",\n            children: currentTest.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"questions-completed\",\n            children: [feedbacks.filter(f => f.overall > 0).length, \" of \", currentTest.questions.length, \" questions completed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this), testSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overall-results\",\n        style: {\n          borderColor: getBandColor(testSummary.overall)\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Overall Performance Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"band-scores-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overall-band\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-score\",\n              style: {\n                color: getBandColor(testSummary.overall)\n              },\n              children: testSummary.overall\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-label\",\n              children: \"Overall Band\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"criteria-bands\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-score\",\n                style: {\n                  color: getBandColor(testSummary.fluency)\n                },\n                children: testSummary.fluency\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-label\",\n                children: \"Fluency & Coherence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-score\",\n                style: {\n                  color: getBandColor(testSummary.lexical)\n                },\n                children: testSummary.lexical\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-label\",\n                children: \"Lexical Resource\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-score\",\n                style: {\n                  color: getBandColor(testSummary.grammar)\n                },\n                children: testSummary.grammar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-label\",\n                children: \"Grammar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-score\",\n                style: {\n                  color: getBandColor(testSummary.pronunciation)\n                },\n                children: testSummary.pronunciation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-label\",\n                children: \"Pronunciation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"performance-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: testSummary.totalWords\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Words\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: testSummary.totalErrors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Grammar Errors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [Math.round((testSummary.stressAccuracy || 0.5) * 100), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Stress Accuracy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [Math.round((testSummary.intonationScore || 0.5) * 100), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Intonation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-results\",\n        children: feedbacks.map((feedback, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-result\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Question \", i + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 19\n              }, this), currentTest.categories && /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"question-category\",\n                children: [\"Category: \", currentTest.categories[i], \" | Difficulty: \", currentTest.difficulties[i]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-bands\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mini-band\",\n                style: {\n                  backgroundColor: getBandColor(feedback.overall)\n                },\n                children: feedback.overall\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-content\",\n            children: feedback.feedback.split('\\n').map((line, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback-line\",\n              children: line.includes('**') ? /*#__PURE__*/_jsxDEV(\"div\", {\n                dangerouslySetInnerHTML: {\n                  __html: line.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: line\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 23\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetTest,\n          className: \"btn btn-primary\",\n          children: \"\\uD83D\\uDD04 Take Another Random Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.print(),\n          className: \"btn btn-secondary\",\n          children: \"\\uD83D\\uDDA8\\uFE0F Print Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main test interface\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-evaluator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentTest.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-counter\",\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", currentTest.questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${(currentQuestionIndex + 1) / currentTest.questions.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: currentTest.questions[currentQuestionIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-metadata\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"recommended-time\",\n            children: \"\\u23F1\\uFE0F Recommended: 1-2 minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"word-target\",\n            children: \"\\uD83C\\uDFAF Target: 100+ words\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this), currentTest.categories && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category\",\n              children: [\"\\uD83D\\uDCC2 \", currentTest.categories[currentQuestionIndex]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty\",\n              children: [\"\\u2B50 \", currentTest.difficulties[currentQuestionIndex]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleRecording,\n          disabled: loading,\n          className: `record-btn ${recording ? 'recording' : ''}`,\n          children: recording ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"record-icon\",\n              children: \"\\u23F9\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 17\n            }, this), \"Stop Recording (\", formatTime(recordingTime), \")\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"record-icon\",\n              children: \"\\uD83C\\uDFA4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 17\n            }, this), \"Start Recording\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 9\n      }, this), recording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"real-time-analysis\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDD34 Live Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Pitch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: [realTimeFeatures.pitch, \" Hz\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Intensity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: [realTimeFeatures.intensity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Pattern\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stress-pattern\",\n              children: realTimeFeatures.stressPattern.split('').map((char, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: char === 'S' ? 'stressed' : 'unstressed',\n                children: char\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 826,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [\"\\u26A0\\uFE0F \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"response-textarea\",\n        children: \"Your Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"response-textarea\",\n        value: answers[currentQuestionIndex] || \"\",\n        onChange: e => {\n          const newAnswers = [...answers];\n          newAnswers[currentQuestionIndex] = e.target.value;\n          setAnswers(newAnswers);\n        },\n        placeholder: \"Your response will appear here as you speak, or you can type directly...\",\n        disabled: recording,\n        rows: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"word-count\",\n          children: [\"Words: \", (answers[currentQuestionIndex] || \"\").split(/\\s+/).filter(w => w.length > 0).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 11\n        }, this), answers[currentQuestionIndex] && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"character-count\",\n          children: [\"Characters: \", answers[currentQuestionIndex].length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goPrev,\n          disabled: currentQuestionIndex === 0 || recording || loading,\n          className: \"btn btn-secondary\",\n          children: \"\\u2190 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-status\",\n          children: answers.map((answer, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `question-indicator ${idx === currentQuestionIndex ? 'current' : ''} ${answer.trim() ? 'completed' : ''}`,\n            onClick: () => !recording && !loading && setCurrentQuestionIndex(idx),\n            title: currentTest.categories ? `${currentTest.categories[idx]} (${currentTest.difficulties[idx]})` : `Question ${idx + 1}`,\n            children: idx + 1\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goNext,\n          disabled: currentQuestionIndex === currentTest.questions.length - 1 || recording || loading,\n          className: \"btn btn-secondary\",\n          children: \"Next \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 7\n    }, this), answers.some(answer => answer.trim().length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Ready to get your results?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You've answered \", answers.filter(a => a.trim().length > 0).length, \" of \", currentTest.questions.length, \" questions.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitTest,\n        disabled: loading,\n        className: \"btn btn-primary submit-btn\",\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-spinner small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 17\n          }, this), \"Analyzing your responses...\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"\\uD83D\\uDCCA Submit Test for Analysis\"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-options-section\",\n      children: /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"\\uD83C\\uDFB2 Test Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-options-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Create a Custom Test:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-test-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"control-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Category:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 938,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: customCriteria.category || '',\n                onChange: e => setCustomCriteria(prev => ({\n                  ...prev,\n                  category: e.target.value\n                })),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Any Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 943,\n                  columnNumber: 19\n                }, this), getAvailableCategories().map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cat,\n                  children: cat\n                }, cat, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 945,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 939,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 937,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"control-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Difficulty:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 951,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: customCriteria.difficulty || '',\n                onChange: e => setCustomCriteria(prev => ({\n                  ...prev,\n                  difficulty: e.target.value\n                })),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Mixed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 956,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"easy\",\n                  children: \"Easy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 957,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"medium\",\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 958,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"hard\",\n                  children: \"Hard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 959,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"control-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Number of Questions:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: customCriteria.numQuestions || 3,\n                onChange: e => setCustomCriteria(prev => ({\n                  ...prev,\n                  numQuestions: parseInt(e.target.value)\n                })),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 3,\n                  children: \"3 Questions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 969,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 5,\n                  children: \"5 Questions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 970,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 7,\n                  children: \"7 Questions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 971,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => createNewTest({\n                ...customCriteria,\n                mode: 'custom'\n              }),\n              className: \"btn btn-secondary\",\n              disabled: recording || loading,\n              children: \"\\uD83C\\uDFAF Create Custom Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 975,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '15px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetTest,\n              className: \"btn btn-secondary\",\n              disabled: recording || loading,\n              children: \"\\uD83D\\uDD04 Generate Random Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 985,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 984,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-bank-info\",\n            style: {\n              marginTop: '15px',\n              fontSize: '0.9rem',\n              color: '#666'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Question Bank:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 15\n            }, this), \" \", questionBank.length, \" total questions available\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Categories:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 15\n            }, this), \" \", getAvailableCategories().join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help-section\",\n      children: /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"\\uD83D\\uDCDD Instructions & Tips\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"How to use this evaluator:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Click \\\"Start Recording\\\" and speak your answer clearly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"You can also type your response directly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Navigate between questions using the Previous/Next buttons or click question numbers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Aim for detailed responses (100+ words per question)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Submit when you've answered at least one question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"For best pronunciation analysis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Use a quiet environment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1018,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Speak at a natural pace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Ensure good microphone quality\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Use Chrome or Edge browsers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Question Categories Available:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: getAvailableCategories().map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: category\n            }, category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1027,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1003,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 755,\n    columnNumber: 5\n  }, this);\n}\n_s(SpeechEvaluator, \"GNTeXsoSjS9IbaBs+4cvR7MzyKw=\");\n_c = SpeechEvaluator;\nexport default SpeechEvaluator;\nvar _c;\n$RefreshReg$(_c, \"SpeechEvaluator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","questionBank","jsxDEV","_jsxDEV","Fragment","_Fragment","createRandomTest","easyQuestions","filter","q","difficulty","mediumQuestions","hardQuestions","selectedQuestions","Math","floor","random","length","testId","Date","now","title","toLocaleDateString","questions","map","prompt","sampleAnswers","sampleAnswer","categories","category","difficulties","questionIds","id","createCustomTest","criteria","filteredQuestions","toLowerCase","includes","numQuestions","shuffled","sort","slice","SimplePronunciationAnalyzer","constructor","audioContext","analyser","features","pitch","rms","spectralCentroid","zcr","isAnalyzing","initialize","window","AudioContext","webkitAudioContext","error","console","startAnalysis","stream","Error","source","createMediaStreamSource","createAnalyser","fftSize","smoothingTimeConstant","minDecibels","maxDecibels","connect","startFeatureExtraction","bufferLength","frequencyBinCount","dataArray","Float32Array","timeDataArray","extractFeatures","getFloatFrequencyData","getFloatTimeDomainData","timestamp","currentTime","calculateRMS","calculateZCR","calculateSpectralCentroid","detectPitch","push","value","frequency","requestAnimationFrame","timeData","sum","i","sqrt","zeroCrossings","freqData","weightedSum","magnitudeSum","magnitude","pow","sampleRate","minPeriod","maxPeriod","bestCorrelation","bestPeriod","period","min","correlation","analyzeStressPatterns","stressPattern","rhythmScore","intonationVariation","stressAccuracy","syllables","detectSyllables","stressedCount","forEach","syllable","stressScore","calculateSyllableStress","stressRatio","calculateRhythm","calculateIntonation","threshold","calculateEnergyThreshold","currentSyllable","inSyllable","rmsData","index","energy","isVoiced","startTime","peakEnergy","energySum","samples","max","endTime","duration","avgEnergy","avgIntensity","reduce","r","intensityScore","intervals","avgInterval","interval","variance","coefficient","pitches","p","minPitch","maxPitch","avgPitch","pitchRange","energies","a","b","stopAnalysis","getFeatures","analysis","reset","SpeechEvaluator","_s","currentTest","setCurrentTest","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","recording","setRecording","loading","setLoading","feedbacks","setFeedbacks","testSummary","setTestSummary","setError","recordingTime","setRecordingTime","showResults","setShowResults","testMode","setTestMode","customCriteria","setCustomCriteria","pronunciationAnalyzer","setPronunciationAnalyzer","audioFeatures","setAudioFeatures","isAnalyzingPronunciation","setIsAnalyzingPronunciation","realTimeFeatures","setRealTimeFeatures","intensity","recognitionRef","recordingTimerRef","currentStreamRef","test","Array","fill","initAnalyzer","analyzer","initialized","setInterval","latestPitch","latestRms","toFixed","clearInterval","current","getTracks","track","stop","startRecordingTimer","prev","stopRecordingTimer","formatTime","seconds","mins","secs","toString","padStart","createNewTest","mode","Object","keys","toggleRecording","_recognitionRef$curre","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","analysisError","warn","SpeechRecognition","webkitSpeechRecognition","recognition","lang","continuous","interimResults","maxAlternatives","onstart","onresult","event","speechText","from","results","result","transcript","join","newAnswers","trim","onend","onerror","start","err","goNext","goPrev","submitTest","response","fetch","method","headers","body","JSON","stringify","ok","status","data","json","resetTest","getBandColor","band","getAvailableCategories","Set","className","children","fileName","_jsxFileName","lineNumber","columnNumber","f","overall","style","borderColor","color","fluency","lexical","grammar","pronunciation","totalWords","totalErrors","round","intonationScore","feedback","backgroundColor","split","line","idx","dangerouslySetInnerHTML","__html","replace","onClick","print","width","disabled","char","htmlFor","onChange","e","target","placeholder","rows","w","answer","some","cat","parseInt","marginTop","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/ielts-speech-evaluator/src/components/SpeechEvaluator.jsx"],"sourcesContent":["// Enhanced SpeechEvaluator.jsx - Complete IELTS Speech Evaluator with Question Bank Integration\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport questionBank from \"../data/questions\";\nimport './SpeechEvaluator.css';\n\n// Function to create randomized tests from question bank\nconst createRandomTest = () => {\n  // Filter questions by difficulty for balanced test\n  const easyQuestions = questionBank.filter(q => q.difficulty === \"easy\");\n  const mediumQuestions = questionBank.filter(q => q.difficulty === \"medium\");\n  const hardQuestions = questionBank.filter(q => q.difficulty === \"hard\");\n  \n  // Create a balanced test with 1 easy, 1 medium, 1 hard question\n  const selectedQuestions = [\n    easyQuestions[Math.floor(Math.random() * easyQuestions.length)],\n    mediumQuestions[Math.floor(Math.random() * mediumQuestions.length)],\n    hardQuestions[Math.floor(Math.random() * hardQuestions.length)]\n  ];\n\n  return {\n    testId: `test_${Date.now()}`,\n    title: `IELTS Speaking Practice - ${new Date().toLocaleDateString()}`,\n    questions: selectedQuestions.map(q => q.prompt),\n    sampleAnswers: selectedQuestions.map(q => q.sampleAnswer),\n    categories: selectedQuestions.map(q => q.category),\n    difficulties: selectedQuestions.map(q => q.difficulty),\n    questionIds: selectedQuestions.map(q => q.id)\n  };\n};\n\n// Alternative function to create tests by specific criteria\nconst createCustomTest = (criteria = {}) => {\n  let filteredQuestions = questionBank;\n  \n  // Filter by category if specified\n  if (criteria.category) {\n    filteredQuestions = filteredQuestions.filter(q => \n      q.category.toLowerCase().includes(criteria.category.toLowerCase())\n    );\n  }\n  \n  // Filter by difficulty if specified\n  if (criteria.difficulty) {\n    filteredQuestions = filteredQuestions.filter(q => q.difficulty === criteria.difficulty);\n  }\n  \n  // Shuffle and take specified number of questions (default 3)\n  const numQuestions = criteria.numQuestions || 3;\n  const shuffled = [...filteredQuestions].sort(() => Math.random() - 0.5);\n  const selectedQuestions = shuffled.slice(0, numQuestions);\n  \n  return {\n    testId: `custom_test_${Date.now()}`,\n    title: criteria.title || `Custom IELTS Test - ${criteria.category || 'Mixed Topics'}`,\n    questions: selectedQuestions.map(q => q.prompt),\n    sampleAnswers: selectedQuestions.map(q => q.sampleAnswer),\n    categories: selectedQuestions.map(q => q.category),\n    difficulties: selectedQuestions.map(q => q.difficulty),\n    questionIds: selectedQuestions.map(q => q.id)\n  };\n};\n\n// Pronunciation Analyzer Class (simplified for React integration)\nclass SimplePronunciationAnalyzer {\n  constructor() {\n    this.audioContext = null;\n    this.analyser = null;\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isAnalyzing = false;\n  }\n\n  async initialize() {\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize audio context:', error);\n      return false;\n    }\n  }\n\n  async startAnalysis(stream) {\n    if (!this.audioContext) {\n      throw new Error('Audio context not initialized');\n    }\n\n    const source = this.audioContext.createMediaStreamSource(stream);\n    this.analyser = this.audioContext.createAnalyser();\n    \n    this.analyser.fftSize = 2048;\n    this.analyser.smoothingTimeConstant = 0.8;\n    this.analyser.minDecibels = -90;\n    this.analyser.maxDecibels = -10;\n    \n    source.connect(this.analyser);\n    this.isAnalyzing = true;\n    this.startFeatureExtraction();\n  }\n\n  startFeatureExtraction() {\n    const bufferLength = this.analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    const timeDataArray = new Float32Array(this.analyser.fftSize);\n    \n    const extractFeatures = () => {\n      if (!this.isAnalyzing) return;\n      \n      this.analyser.getFloatFrequencyData(dataArray);\n      this.analyser.getFloatTimeDomainData(timeDataArray);\n      \n      const timestamp = this.audioContext.currentTime;\n      const rms = this.calculateRMS(timeDataArray);\n      const zcr = this.calculateZCR(timeDataArray);\n      const spectralCentroid = this.calculateSpectralCentroid(dataArray);\n      const pitch = this.detectPitch(timeDataArray);\n      \n      this.features.rms.push({ value: rms, timestamp });\n      this.features.zcr.push({ value: zcr, timestamp });\n      this.features.spectralCentroid.push({ value: spectralCentroid, timestamp });\n      \n      if (pitch && pitch > 50 && pitch < 800) {\n        this.features.pitch.push({ frequency: pitch, timestamp });\n      }\n      \n      requestAnimationFrame(extractFeatures);\n    };\n    \n    extractFeatures();\n  }\n\n  calculateRMS(timeData) {\n    let sum = 0;\n    for (let i = 0; i < timeData.length; i++) {\n      sum += timeData[i] * timeData[i];\n    }\n    return Math.sqrt(sum / timeData.length);\n  }\n\n  calculateZCR(timeData) {\n    let zeroCrossings = 0;\n    for (let i = 1; i < timeData.length; i++) {\n      if ((timeData[i] >= 0) !== (timeData[i - 1] >= 0)) {\n        zeroCrossings++;\n      }\n    }\n    return zeroCrossings / (timeData.length - 1);\n  }\n\n  calculateSpectralCentroid(freqData) {\n    let weightedSum = 0;\n    let magnitudeSum = 0;\n    \n    for (let i = 0; i < freqData.length; i++) {\n      const magnitude = Math.pow(10, freqData[i] / 10);\n      const frequency = (i * this.audioContext.sampleRate) / (2 * freqData.length);\n      \n      weightedSum += frequency * magnitude;\n      magnitudeSum += magnitude;\n    }\n    \n    return magnitudeSum > 0 ? weightedSum / magnitudeSum : 0;\n  }\n\n  detectPitch(timeData) {\n    const sampleRate = this.audioContext.sampleRate;\n    const minPeriod = Math.floor(sampleRate / 800);\n    const maxPeriod = Math.floor(sampleRate / 50);\n    \n    let bestCorrelation = 0;\n    let bestPeriod = 0;\n    \n    for (let period = minPeriod; period < Math.min(maxPeriod, timeData.length / 2); period++) {\n      let correlation = 0;\n      for (let i = 0; i < timeData.length - period; i++) {\n        correlation += timeData[i] * timeData[i + period];\n      }\n      \n      if (correlation > bestCorrelation) {\n        bestCorrelation = correlation;\n        bestPeriod = period;\n      }\n    }\n    \n    return bestPeriod > 0 ? sampleRate / bestPeriod : 0;\n  }\n\n  analyzeStressPatterns() {\n    if (this.features.rms.length < 10) {\n      return {\n        stressPattern: '',\n        rhythmScore: 0.5,\n        intonationVariation: 0.5,\n        stressAccuracy: 0.5\n      };\n    }\n\n    const syllables = this.detectSyllables();\n    let stressPattern = '';\n    let stressedCount = 0;\n\n    syllables.forEach(syllable => {\n      const stressScore = this.calculateSyllableStress(syllable);\n      if (stressScore > 0.6) {\n        stressPattern += 'S';\n        stressedCount++;\n      } else {\n        stressPattern += 'U';\n      }\n    });\n\n    const stressRatio = syllables.length > 0 ? stressedCount / syllables.length : 0;\n    const stressAccuracy = stressRatio >= 0.2 && stressRatio <= 0.4 ? \n      Math.min(stressRatio / 0.3, 1.0) : 0.5;\n\n    return {\n      stressPattern,\n      rhythmScore: this.calculateRhythm(syllables),\n      intonationVariation: this.calculateIntonation(),\n      stressAccuracy\n    };\n  }\n\n  detectSyllables() {\n    const threshold = this.calculateEnergyThreshold();\n    const syllables = [];\n    let currentSyllable = null;\n    let inSyllable = false;\n\n    this.features.rms.forEach((rmsData, index) => {\n      const energy = rmsData.value;\n      const isVoiced = energy > threshold;\n\n      if (isVoiced && !inSyllable) {\n        currentSyllable = {\n          startTime: rmsData.timestamp,\n          peakEnergy: energy,\n          energySum: energy,\n          samples: 1\n        };\n        inSyllable = true;\n      } else if (isVoiced && inSyllable) {\n        currentSyllable.peakEnergy = Math.max(currentSyllable.peakEnergy, energy);\n        currentSyllable.energySum += energy;\n        currentSyllable.samples++;\n      } else if (!isVoiced && inSyllable) {\n        currentSyllable.endTime = rmsData.timestamp;\n        currentSyllable.duration = currentSyllable.endTime - currentSyllable.startTime;\n        currentSyllable.avgEnergy = currentSyllable.energySum / currentSyllable.samples;\n        syllables.push(currentSyllable);\n        inSyllable = false;\n      }\n    });\n\n    return syllables;\n  }\n\n  calculateSyllableStress(syllable) {\n    const avgIntensity = this.features.rms.reduce((sum, r) => sum + r.value, 0) / this.features.rms.length;\n    const intensityScore = Math.min(syllable.avgEnergy / Math.max(avgIntensity, 0.001), 2.0);\n    return intensityScore / 2.0;\n  }\n\n  calculateRhythm(syllables) {\n    if (syllables.length < 3) return 0.5;\n    const intervals = [];\n    for (let i = 1; i < syllables.length; i++) {\n      intervals.push(syllables[i].startTime - syllables[i-1].startTime);\n    }\n    const avgInterval = intervals.reduce((sum, interval) => sum + interval, 0) / intervals.length;\n    const variance = intervals.reduce((sum, interval) => sum + Math.pow(interval - avgInterval, 2), 0) / intervals.length;\n    const coefficient = Math.sqrt(variance) / Math.max(avgInterval, 0.1);\n    return Math.max(0, 1 - coefficient);\n  }\n\n  calculateIntonation() {\n    if (this.features.pitch.length < 10) return 0.5;\n    const pitches = this.features.pitch.map(p => p.frequency);\n    const minPitch = Math.min(...pitches);\n    const maxPitch = Math.max(...pitches);\n    const avgPitch = pitches.reduce((sum, p) => sum + p, 0) / pitches.length;\n    const pitchRange = (maxPitch - minPitch) / avgPitch;\n    return Math.min(pitchRange / 0.5, 1.0);\n  }\n\n  calculateEnergyThreshold() {\n    if (this.features.rms.length === 0) return 0.01;\n    const energies = this.features.rms.map(r => r.value).sort((a, b) => a - b);\n    return energies[Math.floor(energies.length * 0.75)] * 0.25;\n  }\n\n  stopAnalysis() {\n    this.isAnalyzing = false;\n  }\n\n  getFeatures() {\n    return {\n      ...this.features,\n      analysis: this.analyzeStressPatterns()\n    };\n  }\n\n  reset() {\n    this.features = { pitch: [], rms: [], spectralCentroid: [], zcr: [] };\n    this.isAnalyzing = false;\n  }\n}\n\n// Main Speech Evaluator Component\nfunction SpeechEvaluator() {\n  // State management\n  const [currentTest, setCurrentTest] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [feedbacks, setFeedbacks] = useState(null);\n  const [testSummary, setTestSummary] = useState(null);\n  const [error, setError] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [testMode, setTestMode] = useState('random'); // 'random', 'category', 'difficulty'\n  const [customCriteria, setCustomCriteria] = useState({});\n  \n  // Pronunciation analysis state\n  const [pronunciationAnalyzer, setPronunciationAnalyzer] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState({});\n  const [isAnalyzingPronunciation, setIsAnalyzingPronunciation] = useState(false);\n  const [realTimeFeatures, setRealTimeFeatures] = useState({\n    pitch: 0,\n    intensity: 0,\n    stressPattern: ''\n  });\n\n  // Refs\n  const recognitionRef = useRef(null);\n  const recordingTimerRef = useRef(null);\n  const currentStreamRef = useRef(null);\n\n  // Initialize test and pronunciation analyzer\n  useEffect(() => {\n    const test = createRandomTest();\n    setCurrentTest(test);\n    setAnswers(Array(test.questions.length).fill(\"\"));\n\n    // Initialize pronunciation analyzer\n    const initAnalyzer = async () => {\n      try {\n        const analyzer = new SimplePronunciationAnalyzer();\n        const initialized = await analyzer.initialize();\n        if (initialized) {\n          setPronunciationAnalyzer(analyzer);\n        }\n      } catch (error) {\n        console.error('Failed to initialize pronunciation analyzer:', error);\n      }\n    };\n\n    initAnalyzer();\n  }, []);\n\n  // Real-time feature updates\n  useEffect(() => {\n    let interval;\n    if (isAnalyzingPronunciation && pronunciationAnalyzer) {\n      interval = setInterval(() => {\n        const features = pronunciationAnalyzer.features;\n        if (features.pitch.length > 0) {\n          const latestPitch = features.pitch[features.pitch.length - 1];\n          const latestRms = features.rms.length > 0 ? features.rms[features.rms.length - 1] : { value: 0 };\n          const analysis = pronunciationAnalyzer.analyzeStressPatterns();\n          \n          setRealTimeFeatures({\n            pitch: latestPitch.frequency.toFixed(1),\n            intensity: (latestRms.value * 100).toFixed(1),\n            stressPattern: analysis.stressPattern\n          });\n        }\n      }, 200);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [isAnalyzingPronunciation, pronunciationAnalyzer]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (recordingTimerRef.current) {\n        clearInterval(recordingTimerRef.current);\n      }\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (pronunciationAnalyzer) {\n        pronunciationAnalyzer.stopAnalysis();\n      }\n    };\n  }, [pronunciationAnalyzer]);\n\n  // Timer functions\n  const startRecordingTimer = useCallback(() => {\n    setRecordingTime(0);\n    recordingTimerRef.current = setInterval(() => {\n      setRecordingTime(prev => prev + 1);\n    }, 1000);\n  }, []);\n\n  const stopRecordingTimer = useCallback(() => {\n    if (recordingTimerRef.current) {\n      clearInterval(recordingTimerRef.current);\n      recordingTimerRef.current = null;\n    }\n  }, []);\n\n  const formatTime = useCallback((seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  // Function to create new test\n  const createNewTest = (criteria = {}) => {\n    let test;\n    if (criteria.mode === 'custom' && Object.keys(criteria).length > 1) {\n      test = createCustomTest(criteria);\n    } else {\n      test = createRandomTest();\n    }\n    \n    setCurrentTest(test);\n    setAnswers(Array(test.questions.length).fill(\"\"));\n    setCurrentQuestionIndex(0);\n    setFeedbacks(null);\n    setTestSummary(null);\n    setShowResults(false);\n    setError(null);\n    setRecordingTime(0);\n    setAudioFeatures({});\n    setRealTimeFeatures({ pitch: 0, intensity: 0, stressPattern: '' });\n    if (pronunciationAnalyzer) {\n      pronunciationAnalyzer.reset();\n    }\n  };\n\n  // Enhanced recording with pronunciation analysis\n  const toggleRecording = async () => {\n    if (recording) {\n      // Stop recording\n      recognitionRef.current?.stop();\n      if (pronunciationAnalyzer && isAnalyzingPronunciation) {\n        pronunciationAnalyzer.stopAnalysis();\n        const features = pronunciationAnalyzer.getFeatures();\n        setAudioFeatures(prev => ({\n          ...prev,\n          [currentQuestionIndex]: features\n        }));\n        setIsAnalyzingPronunciation(false);\n      }\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      return;\n    }\n\n    // Check browser support\n    if (!(\"webkitSpeechRecognition\" in window) && !(\"SpeechRecognition\" in window)) {\n      setError(\"Speech recognition is not supported in this browser. Please use Chrome or Edge.\");\n      return;\n    }\n\n    try {\n      // Get microphone stream\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: false,\n          sampleRate: 44100\n        }\n      });\n\n      currentStreamRef.current = stream;\n\n      // Start pronunciation analysis\n      if (pronunciationAnalyzer) {\n        try {\n          pronunciationAnalyzer.reset();\n          await pronunciationAnalyzer.startAnalysis(stream);\n          setIsAnalyzingPronunciation(true);\n        } catch (analysisError) {\n          console.warn('Pronunciation analysis failed:', analysisError);\n        }\n      }\n\n      // Setup speech recognition\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      \n      recognition.lang = \"en-US\";\n      recognition.continuous = true;\n      recognition.interimResults = false;\n      recognition.maxAlternatives = 1;\n\n      recognition.onstart = () => {\n        setRecording(true);\n        setError(null);\n        startRecordingTimer();\n      };\n\n      recognition.onresult = (event) => {\n        const speechText = Array.from(event.results)\n          .map((result) => result[0].transcript)\n          .join(\" \");\n        \n        setAnswers((prev) => {\n          const newAnswers = [...prev];\n          newAnswers[currentQuestionIndex] = speechText.trim();\n          return newAnswers;\n        });\n      };\n\n      recognition.onend = () => {\n        setRecording(false);\n        stopRecordingTimer();\n      };\n\n      recognition.onerror = (event) => {\n        console.error(\"Speech recognition error:\", event.error);\n        setError(`Speech recognition error: ${event.error}. Please try again.`);\n        setRecording(false);\n        stopRecordingTimer();\n        setIsAnalyzingPronunciation(false);\n      };\n\n      recognitionRef.current = recognition;\n      recognition.start();\n      \n    } catch (err) {\n      setError(\"Failed to access microphone. Please check your permissions and try again.\");\n      console.error(\"Microphone access error:\", err);\n    }\n  };\n\n  // Navigation functions\n  const goNext = () => {\n    if (currentQuestionIndex < currentTest.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const goPrev = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  // Enhanced submit with pronunciation analysis\n  const submitTest = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(\"/api/analyze-batch\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          testId: currentTest.testId,\n          questions: currentTest.questions,\n          answers,\n          sampleAnswers: currentTest.sampleAnswers,\n          audioFeatures // Include pronunciation features\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setFeedbacks(data.feedbacks);\n      setTestSummary(data.testSummary);\n      setShowResults(true);\n    } catch (err) {\n      console.error(\"Analysis error:\", err);\n      setError(\"Error during analysis. Please check your connection and try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset function\n  const resetTest = () => {\n    createNewTest({ mode: 'random' });\n  };\n\n  // Band color function\n  const getBandColor = (band) => {\n    if (band >= 8.5) return \"#2e7d32\"; // Dark green\n    if (band >= 7) return \"#388e3c\";   // Green\n    if (band >= 6.5) return \"#689f38\"; // Light green\n    if (band >= 6) return \"#afb42b\";   // Yellow green\n    if (band >= 5.5) return \"#f57f17\"; // Dark yellow\n    if (band >= 5) return \"#ff8f00\";   // Orange\n    if (band >= 4) return \"#f57c00\";   // Dark orange\n    return \"#d32f2f\";                  // Red\n  };\n\n  // Get available categories for custom test creation\n  const getAvailableCategories = () => {\n    const categories = [...new Set(questionBank.map(q => q.category))];\n    return categories;\n  };\n\n  // Loading state\n  if (!currentTest) {\n    return (\n      <div className=\"speech-evaluator loading\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Initializing IELTS Speech Evaluator...</p>\n          <p>Loading {questionBank.length} questions from question bank...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Results display\n  if (showResults && feedbacks) {\n    return (\n      <div className=\"speech-evaluator results-view\">\n        <div className=\"results-header\">\n          <h2>🎯 IELTS Speaking Test Results</h2>\n          <div className=\"test-info\">\n            <span className=\"test-title\">{currentTest.title}</span>\n            <span className=\"questions-completed\">{feedbacks.filter(f => f.overall > 0).length} of {currentTest.questions.length} questions completed</span>\n          </div>\n        </div>\n        \n        {testSummary && (\n          <div className=\"overall-results\" style={{ borderColor: getBandColor(testSummary.overall) }}>\n            <h3>Overall Performance Summary</h3>\n            \n            <div className=\"band-scores-grid\">\n              <div className=\"overall-band\">\n                <div className=\"band-score\" style={{ color: getBandColor(testSummary.overall) }}>\n                  {testSummary.overall}\n                </div>\n                <div className=\"band-label\">Overall Band</div>\n              </div>\n              \n              <div className=\"criteria-bands\">\n                <div className=\"band-item\">\n                  <div className=\"band-score\" style={{ color: getBandColor(testSummary.fluency) }}>\n                    {testSummary.fluency}\n                  </div>\n                  <div className=\"band-label\">Fluency & Coherence</div>\n                </div>\n                <div className=\"band-item\">\n                  <div className=\"band-score\" style={{ color: getBandColor(testSummary.lexical) }}>\n                    {testSummary.lexical}\n                  </div>\n                  <div className=\"band-label\">Lexical Resource</div>\n                </div>\n                <div className=\"band-item\">\n                  <div className=\"band-score\" style={{ color: getBandColor(testSummary.grammar) }}>\n                    {testSummary.grammar}\n                  </div>\n                  <div className=\"band-label\">Grammar</div>\n                </div>\n                <div className=\"band-item\">\n                  <div className=\"band-score\" style={{ color: getBandColor(testSummary.pronunciation) }}>\n                    {testSummary.pronunciation}\n                  </div>\n                  <div className=\"band-label\">Pronunciation</div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"performance-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{testSummary.totalWords}</span>\n                <span className=\"stat-label\">Total Words</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{testSummary.totalErrors}</span>\n                <span className=\"stat-label\">Grammar Errors</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{Math.round((testSummary.stressAccuracy || 0.5) * 100)}%</span>\n                <span className=\"stat-label\">Stress Accuracy</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{Math.round((testSummary.intonationScore || 0.5) * 100)}%</span>\n                <span className=\"stat-label\">Intonation</span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"question-results\">\n          {feedbacks.map((feedback, i) => (\n            <div key={i} className=\"question-result\">\n              <div className=\"question-header\">\n                <div>\n                  <h4>Question {i + 1}</h4>\n                  {currentTest.categories && (\n                    <small className=\"question-category\">Category: {currentTest.categories[i]} | Difficulty: {currentTest.difficulties[i]}</small>\n                  )}\n                </div>\n                <div className=\"question-bands\">\n                  <span className=\"mini-band\" style={{ backgroundColor: getBandColor(feedback.overall) }}>\n                    {feedback.overall}\n                  </span>\n                </div>\n              </div>\n              <div className=\"feedback-content\">\n                {feedback.feedback.split('\\n').map((line, idx) => (\n                  <div key={idx} className=\"feedback-line\">\n                    {line.includes('**') ? (\n                      <div dangerouslySetInnerHTML={{ \n                        __html: line.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>') \n                      }} />\n                    ) : (\n                      <div>{line}</div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"results-actions\">\n          <button onClick={resetTest} className=\"btn btn-primary\">\n            🔄 Take Another Random Test\n          </button>\n          <button onClick={() => window.print()} className=\"btn btn-secondary\">\n            🖨️ Print Results\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Main test interface\n  return (\n    <div className=\"speech-evaluator\">\n      <div className=\"test-header\">\n        <div className=\"test-info\">\n          <h2>{currentTest.title}</h2>\n          <div className=\"progress-info\">\n            <span className=\"question-counter\">Question {currentQuestionIndex + 1} of {currentTest.questions.length}</span>\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\" \n                style={{ width: `${((currentQuestionIndex + 1) / currentTest.questions.length) * 100}%` }}\n              ></div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"question-section\">\n        <div className=\"question-card\">\n          <div className=\"question-text\">\n            {currentTest.questions[currentQuestionIndex]}\n          </div>\n          <div className=\"question-metadata\">\n            <span className=\"recommended-time\">⏱️ Recommended: 1-2 minutes</span>\n            <span className=\"word-target\">🎯 Target: 100+ words</span>\n            {currentTest.categories && (\n              <>\n                <span className=\"category\">📂 {currentTest.categories[currentQuestionIndex]}</span>\n                <span className=\"difficulty\">⭐ {currentTest.difficulties[currentQuestionIndex]}</span>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"recording-section\">\n        <div className=\"recording-controls\">\n          <button \n            onClick={toggleRecording}\n            disabled={loading}\n            className={`record-btn ${recording ? 'recording' : ''}`}\n          >\n            {recording ? (\n              <>\n                <span className=\"record-icon\">⏹️</span>\n                Stop Recording ({formatTime(recordingTime)})\n              </>\n            ) : (\n              <>\n                <span className=\"record-icon\">🎤</span>\n                Start Recording\n              </>\n            )}\n          </button>\n        </div>\n\n        {recording && (\n          <div className=\"real-time-analysis\">\n            <h4>🔴 Live Analysis</h4>\n            <div className=\"analysis-grid\">\n              <div className=\"analysis-item\">\n                <span className=\"label\">Pitch</span>\n                <span className=\"value\">{realTimeFeatures.pitch} Hz</span>\n              </div>\n              <div className=\"analysis-item\">\n                <span className=\"label\">Intensity</span>\n                <span className=\"value\">{realTimeFeatures.intensity}%</span>\n              </div>\n              <div className=\"analysis-item\">\n                <span className=\"label\">Pattern</span>\n                <span className=\"stress-pattern\">\n                  {realTimeFeatures.stressPattern.split('').map((char, idx) => (\n                    <span \n                      key={idx}\n                      className={char === 'S' ? 'stressed' : 'unstressed'}\n                    >\n                      {char}\n                    </span>\n                  ))}\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"error-message\">\n            ⚠️ {error}\n          </div>\n        )}\n      </div>\n\n      <div className=\"response-section\">\n        <label htmlFor=\"response-textarea\">Your Response:</label>\n        <textarea\n          id=\"response-textarea\"\n          value={answers[currentQuestionIndex] || \"\"}\n          onChange={(e) => {\n            const newAnswers = [...answers];\n            newAnswers[currentQuestionIndex] = e.target.value;\n            setAnswers(newAnswers);\n          }}\n          placeholder=\"Your response will appear here as you speak, or you can type directly...\"\n          disabled={recording}\n          rows={6}\n        />\n        \n        <div className=\"response-stats\">\n          <span className=\"word-count\">\n            Words: {(answers[currentQuestionIndex] || \"\").split(/\\s+/).filter(w => w.length > 0).length}\n          </span>\n          {answers[currentQuestionIndex] && (\n            <span className=\"character-count\">\n              Characters: {answers[currentQuestionIndex].length}\n            </span>\n          )}\n        </div>\n      </div>\n\n      <div className=\"navigation-section\">\n        <div className=\"nav-buttons\">\n          <button \n            onClick={goPrev}\n            disabled={currentQuestionIndex === 0 || recording || loading}\n            className=\"btn btn-secondary\"\n          >\n            ← Previous\n          </button>\n\n          <div className=\"questions-status\">\n            {answers.map((answer, idx) => (\n              <div \n                key={idx}\n                className={`question-indicator ${idx === currentQuestionIndex ? 'current' : ''} ${answer.trim() ? 'completed' : ''}`}\n                onClick={() => !recording && !loading && setCurrentQuestionIndex(idx)}\n                title={currentTest.categories ? `${currentTest.categories[idx]} (${currentTest.difficulties[idx]})` : `Question ${idx + 1}`}\n              >\n                {idx + 1}\n              </div>\n            ))}\n          </div>\n\n          <button \n            onClick={goNext}\n            disabled={currentQuestionIndex === currentTest.questions.length - 1 || recording || loading}\n            className=\"btn btn-secondary\"\n          >\n            Next →\n          </button>\n        </div>\n      </div>\n\n      {answers.some(answer => answer.trim().length > 0) && (\n        <div className=\"submit-section\">\n          <div className=\"submit-info\">\n            <h4>Ready to get your results?</h4>\n            <p>You've answered {answers.filter(a => a.trim().length > 0).length} of {currentTest.questions.length} questions.</p>\n          </div>\n          <button\n            onClick={submitTest}\n            disabled={loading}\n            className=\"btn btn-primary submit-btn\"\n          >\n            {loading ? (\n              <>\n                <span className=\"loading-spinner small\"></span>\n                Analyzing your responses...\n              </>\n            ) : (\n              <>\n                📊 Submit Test for Analysis\n              </>\n            )}\n          </button>\n        </div>\n      )}\n\n      <div className=\"test-options-section\">\n        <details>\n          <summary>🎲 Test Options</summary>\n          <div className=\"test-options-content\">\n            <h4>Create a Custom Test:</h4>\n            <div className=\"custom-test-controls\">\n              <div className=\"control-group\">\n                <label>Category:</label>\n                <select \n                  value={customCriteria.category || ''}\n                  onChange={(e) => setCustomCriteria(prev => ({...prev, category: e.target.value}))}\n                >\n                  <option value=\"\">Any Category</option>\n                  {getAvailableCategories().map(cat => (\n                    <option key={cat} value={cat}>{cat}</option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"control-group\">\n                <label>Difficulty:</label>\n                <select \n                  value={customCriteria.difficulty || ''}\n                  onChange={(e) => setCustomCriteria(prev => ({...prev, difficulty: e.target.value}))}\n                >\n                  <option value=\"\">Mixed</option>\n                  <option value=\"easy\">Easy</option>\n                  <option value=\"medium\">Medium</option>\n                  <option value=\"hard\">Hard</option>\n                </select>\n              </div>\n              \n              <div className=\"control-group\">\n                <label>Number of Questions:</label>\n                <select \n                  value={customCriteria.numQuestions || 3}\n                  onChange={(e) => setCustomCriteria(prev => ({...prev, numQuestions: parseInt(e.target.value)}))}\n                >\n                  <option value={3}>3 Questions</option>\n                  <option value={5}>5 Questions</option>\n                  <option value={7}>7 Questions</option>\n                </select>\n              </div>\n              \n              <button \n                onClick={() => createNewTest({...customCriteria, mode: 'custom'})}\n                className=\"btn btn-secondary\"\n                disabled={recording || loading}\n              >\n                🎯 Create Custom Test\n              </button>\n            </div>\n            \n            <div style={{marginTop: '15px'}}>\n              <button \n                onClick={resetTest}\n                className=\"btn btn-secondary\"\n                disabled={recording || loading}\n              >\n                🔄 Generate Random Test\n              </button>\n            </div>\n            \n            <div className=\"question-bank-info\" style={{marginTop: '15px', fontSize: '0.9rem', color: '#666'}}>\n              <strong>Question Bank:</strong> {questionBank.length} total questions available\n              <br />\n              <strong>Categories:</strong> {getAvailableCategories().join(', ')}\n            </div>\n          </div>\n        </details>\n      </div>\n\n      <div className=\"help-section\">\n        <details>\n          <summary>📝 Instructions & Tips</summary>\n          <div className=\"help-content\">\n            <h4>How to use this evaluator:</h4>\n            <ul>\n              <li>Click \"Start Recording\" and speak your answer clearly</li>\n              <li>You can also type your response directly</li>\n              <li>Navigate between questions using the Previous/Next buttons or click question numbers</li>\n              <li>Aim for detailed responses (100+ words per question)</li>\n              <li>Submit when you've answered at least one question</li>\n            </ul>\n            \n            <h4>For best pronunciation analysis:</h4>\n            <ul>\n              <li>Use a quiet environment</li>\n              <li>Speak at a natural pace</li>\n              <li>Ensure good microphone quality</li>\n              <li>Use Chrome or Edge browsers</li>\n            </ul>\n            \n            <h4>Question Categories Available:</h4>\n            <ul>\n              {getAvailableCategories().map(category => (\n                <li key={category}>{category}</li>\n              ))}\n            </ul>\n          </div>\n        </details>\n      </div>\n    </div>\n  );\n}\n\nexport default SpeechEvaluator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}