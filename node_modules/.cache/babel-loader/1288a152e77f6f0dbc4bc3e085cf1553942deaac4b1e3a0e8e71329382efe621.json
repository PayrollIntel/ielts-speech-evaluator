{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ielts-speech-evaluator\\\\src\\\\components\\\\SpeechEvaluator.jsx\",\n  _s = $RefreshSig$();\n// Enhanced SpeechEvaluator.jsx - Complete IELTS Speech Evaluator with Pronunciation Analysis\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport './SpeechEvaluator.css';\n\n// Test repository with comprehensive IELTS questions\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst testsRepo = [{\n  testId: \"Test1\",\n  title: \"Personal Experience & Preferences\",\n  questions: [\"Describe your hometown. What do you like most about it, and how has it changed over the years?\", \"Talk about your hobbies and interests. Why do you enjoy them, and how do they benefit you?\", \"Tell me about a book, movie, or TV show that has influenced you. How did it change your perspective on life?\"],\n  sampleAnswers: [\"My hometown is a beautiful coastal city with stunning beaches and a rich cultural heritage. What I love most about it is the perfect blend of modern amenities and traditional charm. Over the years, I've witnessed significant development in infrastructure, with new shopping centers, restaurants, and recreational facilities. However, the local government has done an excellent job preserving the historical architecture and cultural landmarks. The people remain incredibly friendly and welcoming, maintaining the community spirit despite urban growth. The climate is pleasant year-round, which allows for an active outdoor lifestyle, and there's always something interesting happening, whether it's local festivals, art exhibitions, or cultural events that celebrate our diverse heritage.\", \"I have several hobbies that I'm genuinely passionate about. Reading is probably my favorite because it allows me to explore different worlds and perspectives without leaving my home. I particularly enjoy contemporary fiction and historical biographies, as they provide insights into human nature and different time periods. I also enjoy hiking and photography, often combining the two when I explore nature trails on weekends. These activities help me disconnect from the stress of daily life while keeping me physically active and mentally stimulated. Photography has taught me to observe details more carefully, and hiking has improved my physical fitness and given me a deeper appreciation for nature's beauty.\", \"One book that profoundly influenced me was 'To Kill a Mockingbird' by Harper Lee. It opened my eyes to issues of social justice and the importance of standing up for what's right, even when it's difficult or unpopular. The character of Atticus Finch taught me about moral courage and integrity in the face of adversity. This book fundamentally changed how I view prejudice and discrimination, making me more aware of social issues in my own community and inspiring me to be more empathetic towards others who face challenges different from my own. It also influenced my career choice, as I decided to pursue law to help fight for justice and equality.\"]\n}, {\n  testId: \"Test2\",\n  title: \"Education & Career Goals\",\n  questions: [\"Talk about your education and what subjects you found most interesting. How have they shaped your career aspirations?\", \"Describe your best friend and explain why this friendship is important to you. How do you maintain strong relationships?\", \"What are your career goals for the next five years, and how do you plan to achieve them? What challenges do you anticipate?\"],\n  sampleAnswers: [\"I completed my bachelor's degree in Computer Science, which I found incredibly fascinating and challenging. The subjects I enjoyed most were artificial intelligence, software development, and data structures because they challenged me to think logically and creatively simultaneously. Programming languages like Python and Java became tools for solving complex problems, and I discovered a passion for creating efficient, elegant solutions. What I particularly appreciated about my education was how it taught me to approach challenges systematically and think critically about problems. The collaborative projects helped me develop teamwork skills, while individual assignments fostered independent learning. This education has shaped my career aspirations toward becoming a software engineer specializing in AI and machine learning applications.\", \"My best friend Sarah has been in my life for over ten years, and what makes our friendship truly special is our ability to communicate openly and honestly about anything. She's incredibly supportive during difficult times and genuinely celebrates my successes without any jealousy. We share similar values regarding honesty, loyalty, and personal growth, but we're different enough to learn from each other constantly. To maintain our strong relationship, we make effort to stay in regular contact, plan monthly activities together, and always make time for each other despite our busy schedules. This friendship has taught me the importance of having someone who accepts you completely for who you are, while also encouraging you to become the best version of yourself.\", \"My primary career goal for the next five years is to become a senior software engineer specializing in sustainable technology solutions and artificial intelligence applications. I plan to achieve this by continuously learning new programming languages and frameworks, contributing to open-source projects to build my portfolio, and pursuing additional certifications in machine learning and cloud computing. I'm also planning to attend industry conferences and networking events to stay current with technological advances and connect with professionals in my field. The main challenges I anticipate include keeping up with rapidly evolving technology, managing work-life balance as I advance in my career, and potentially competing with highly skilled professionals from around the world in an increasingly global job market.\"]\n}, {\n  testId: \"Test3\",\n  title: \"Travel, Technology & Society\",\n  questions: [\"Describe a memorable travel experience and explain what made it special. How did it broaden your perspective?\", \"Talk about a skill you would like to learn and explain why it interests you. How would you go about learning it?\", \"Discuss the role of technology in modern communication. What are the advantages and disadvantages you've observed?\"],\n  sampleAnswers: [\"Last year, I traveled to Japan, which was absolutely extraordinary and life-changing. What made it special was the incredible attention to detail in everything - from the perfectly organized transportation system to the beautiful presentation of food in even the smallest restaurants. I was amazed by how technology and tradition coexisted harmoniously throughout the country. The people were exceptionally polite and helpful, even despite language barriers, which taught me about the universal nature of human kindness. Visiting ancient temples in Kyoto while experiencing the ultra-modern atmosphere of Tokyo gave me a unique perspective on how cultures can preserve their heritage while embracing innovation and progress. This experience broadened my understanding of different approaches to life and made me more adaptable and open-minded in my daily interactions.\", \"I would absolutely love to learn how to play the piano because music has always been a passion of mine, but I never had the opportunity to learn an instrument properly during my childhood. Piano appeals to me because it's incredibly versatile - you can play classical pieces, jazz, contemporary music, or even compose your own original pieces. I believe learning piano would improve my cognitive abilities, provide excellent stress relief after long work days, and give me a creative outlet for self-expression. To learn effectively, I would start with online tutorials and apps, then progress to formal lessons with a qualified instructor. I'd also practice regularly, set realistic goals for myself, and join local music groups to stay motivated and learn from other musicians in my community.\", \"Technology has revolutionized modern communication in remarkable and unprecedented ways. We can now instantly connect with people across the globe through video calls, social media platforms, and messaging applications, which has made the world feel smaller and more interconnected than ever before. This has tremendous advantages for maintaining long-distance relationships, conducting international business, and sharing knowledge rapidly across cultures. However, I've observed significant disadvantages as well. Technology can lead to superficial interactions and reduced face-to-face communication skills, especially among younger generations. There's also the problem of information overload and the spread of misinformation through social media. The key is finding the right balance and using technology to enhance rather than replace meaningful human connections and authentic communication.\"]\n}];\n\n// Pronunciation Analyzer Class (simplified for React integration)\nclass SimplePronunciationAnalyzer {\n  constructor() {\n    this.audioContext = null;\n    this.analyser = null;\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isAnalyzing = false;\n  }\n  async initialize() {\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize audio context:', error);\n      return false;\n    }\n  }\n  async startAnalysis(stream) {\n    if (!this.audioContext) {\n      throw new Error('Audio context not initialized');\n    }\n    const source = this.audioContext.createMediaStreamSource(stream);\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = 2048;\n    this.analyser.smoothingTimeConstant = 0.8;\n    this.analyser.minDecibels = -90;\n    this.analyser.maxDecibels = -10;\n    source.connect(this.analyser);\n    this.isAnalyzing = true;\n    this.startFeatureExtraction();\n  }\n  startFeatureExtraction() {\n    const bufferLength = this.analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    const timeDataArray = new Float32Array(this.analyser.fftSize);\n    const extractFeatures = () => {\n      if (!this.isAnalyzing) return;\n      this.analyser.getFloatFrequencyData(dataArray);\n      this.analyser.getFloatTimeDomainData(timeDataArray);\n      const timestamp = this.audioContext.currentTime;\n      const rms = this.calculateRMS(timeDataArray);\n      const zcr = this.calculateZCR(timeDataArray);\n      const spectralCentroid = this.calculateSpectralCentroid(dataArray);\n      const pitch = this.detectPitch(timeDataArray);\n      this.features.rms.push({\n        value: rms,\n        timestamp\n      });\n      this.features.zcr.push({\n        value: zcr,\n        timestamp\n      });\n      this.features.spectralCentroid.push({\n        value: spectralCentroid,\n        timestamp\n      });\n      if (pitch && pitch > 50 && pitch < 800) {\n        this.features.pitch.push({\n          frequency: pitch,\n          timestamp\n        });\n      }\n      requestAnimationFrame(extractFeatures);\n    };\n    extractFeatures();\n  }\n  calculateRMS(timeData) {\n    let sum = 0;\n    for (let i = 0; i < timeData.length; i++) {\n      sum += timeData[i] * timeData[i];\n    }\n    return Math.sqrt(sum / timeData.length);\n  }\n  calculateZCR(timeData) {\n    let zeroCrossings = 0;\n    for (let i = 1; i < timeData.length; i++) {\n      if (timeData[i] >= 0 !== timeData[i - 1] >= 0) {\n        zeroCrossings++;\n      }\n    }\n    return zeroCrossings / (timeData.length - 1);\n  }\n  calculateSpectralCentroid(freqData) {\n    let weightedSum = 0;\n    let magnitudeSum = 0;\n    for (let i = 0; i < freqData.length; i++) {\n      const magnitude = Math.pow(10, freqData[i] / 10);\n      const frequency = i * this.audioContext.sampleRate / (2 * freqData.length);\n      weightedSum += frequency * magnitude;\n      magnitudeSum += magnitude;\n    }\n    return magnitudeSum > 0 ? weightedSum / magnitudeSum : 0;\n  }\n  detectPitch(timeData) {\n    const sampleRate = this.audioContext.sampleRate;\n    const minPeriod = Math.floor(sampleRate / 800);\n    const maxPeriod = Math.floor(sampleRate / 50);\n    let bestCorrelation = 0;\n    let bestPeriod = 0;\n    for (let period = minPeriod; period < Math.min(maxPeriod, timeData.length / 2); period++) {\n      let correlation = 0;\n      for (let i = 0; i < timeData.length - period; i++) {\n        correlation += timeData[i] * timeData[i + period];\n      }\n      if (correlation > bestCorrelation) {\n        bestCorrelation = correlation;\n        bestPeriod = period;\n      }\n    }\n    return bestPeriod > 0 ? sampleRate / bestPeriod : 0;\n  }\n  analyzeStressPatterns() {\n    if (this.features.rms.length < 10) {\n      return {\n        stressPattern: '',\n        rhythmScore: 0.5,\n        intonationVariation: 0.5,\n        stressAccuracy: 0.5\n      };\n    }\n    const syllables = this.detectSyllables();\n    let stressPattern = '';\n    let stressedCount = 0;\n    syllables.forEach(syllable => {\n      const stressScore = this.calculateSyllableStress(syllable);\n      if (stressScore > 0.6) {\n        stressPattern += 'S';\n        stressedCount++;\n      } else {\n        stressPattern += 'U';\n      }\n    });\n    const stressRatio = syllables.length > 0 ? stressedCount / syllables.length : 0;\n    const stressAccuracy = stressRatio >= 0.2 && stressRatio <= 0.4 ? Math.min(stressRatio / 0.3, 1.0) : 0.5;\n    return {\n      stressPattern,\n      rhythmScore: this.calculateRhythm(syllables),\n      intonationVariation: this.calculateIntonation(),\n      stressAccuracy\n    };\n  }\n  detectSyllables() {\n    const threshold = this.calculateEnergyThreshold();\n    const syllables = [];\n    let currentSyllable = null;\n    let inSyllable = false;\n    this.features.rms.forEach((rmsData, index) => {\n      const energy = rmsData.value;\n      const isVoiced = energy > threshold;\n      if (isVoiced && !inSyllable) {\n        currentSyllable = {\n          startTime: rmsData.timestamp,\n          peakEnergy: energy,\n          energySum: energy,\n          samples: 1\n        };\n        inSyllable = true;\n      } else if (isVoiced && inSyllable) {\n        currentSyllable.peakEnergy = Math.max(currentSyllable.peakEnergy, energy);\n        currentSyllable.energySum += energy;\n        currentSyllable.samples++;\n      } else if (!isVoiced && inSyllable) {\n        currentSyllable.endTime = rmsData.timestamp;\n        currentSyllable.duration = currentSyllable.endTime - currentSyllable.startTime;\n        currentSyllable.avgEnergy = currentSyllable.energySum / currentSyllable.samples;\n        syllables.push(currentSyllable);\n        inSyllable = false;\n      }\n    });\n    return syllables;\n  }\n  calculateSyllableStress(syllable) {\n    const avgIntensity = this.features.rms.reduce((sum, r) => sum + r.value, 0) / this.features.rms.length;\n    const intensityScore = Math.min(syllable.avgEnergy / Math.max(avgIntensity, 0.001), 2.0);\n    return intensityScore / 2.0;\n  }\n  calculateRhythm(syllables) {\n    if (syllables.length < 3) return 0.5;\n    const intervals = [];\n    for (let i = 1; i < syllables.length; i++) {\n      intervals.push(syllables[i].startTime - syllables[i - 1].startTime);\n    }\n    const avgInterval = intervals.reduce((sum, interval) => sum + interval, 0) / intervals.length;\n    const variance = intervals.reduce((sum, interval) => sum + Math.pow(interval - avgInterval, 2), 0) / intervals.length;\n    const coefficient = Math.sqrt(variance) / Math.max(avgInterval, 0.1);\n    return Math.max(0, 1 - coefficient);\n  }\n  calculateIntonation() {\n    if (this.features.pitch.length < 10) return 0.5;\n    const pitches = this.features.pitch.map(p => p.frequency);\n    const minPitch = Math.min(...pitches);\n    const maxPitch = Math.max(...pitches);\n    const avgPitch = pitches.reduce((sum, p) => sum + p, 0) / pitches.length;\n    const pitchRange = (maxPitch - minPitch) / avgPitch;\n    return Math.min(pitchRange / 0.5, 1.0);\n  }\n  calculateEnergyThreshold() {\n    if (this.features.rms.length === 0) return 0.01;\n    const energies = this.features.rms.map(r => r.value).sort((a, b) => a - b);\n    return energies[Math.floor(energies.length * 0.75)] * 0.25;\n  }\n  stopAnalysis() {\n    this.isAnalyzing = false;\n  }\n  getFeatures() {\n    return {\n      ...this.features,\n      analysis: this.analyzeStressPatterns()\n    };\n  }\n  reset() {\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isAnalyzing = false;\n  }\n}\n\n// Main Speech Evaluator Component\nfunction SpeechEvaluator() {\n  _s();\n  // State management\n  const [currentTest, setCurrentTest] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [feedbacks, setFeedbacks] = useState(null);\n  const [testSummary, setTestSummary] = useState(null);\n  const [error, setError] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n\n  // Pronunciation analysis state\n  const [pronunciationAnalyzer, setPronunciationAnalyzer] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState({});\n  const [isAnalyzingPronunciation, setIsAnalyzingPronunciation] = useState(false);\n  const [realTimeFeatures, setRealTimeFeatures] = useState({\n    pitch: 0,\n    intensity: 0,\n    stressPattern: ''\n  });\n\n  // Refs\n  const recognitionRef = useRef(null);\n  const recordingTimerRef = useRef(null);\n  const currentStreamRef = useRef(null);\n\n  // Initialize test and pronunciation analyzer\n  useEffect(() => {\n    const randomTest = testsRepo[Math.floor(Math.random() * testsRepo.length)];\n    setCurrentTest(randomTest);\n    setAnswers(Array(randomTest.questions.length).fill(\"\"));\n\n    // Initialize pronunciation analyzer\n    const initAnalyzer = async () => {\n      try {\n        const analyzer = new SimplePronunciationAnalyzer();\n        const initialized = await analyzer.initialize();\n        if (initialized) {\n          setPronunciationAnalyzer(analyzer);\n        }\n      } catch (error) {\n        console.error('Failed to initialize pronunciation analyzer:', error);\n      }\n    };\n    initAnalyzer();\n  }, []);\n\n  // Real-time feature updates\n  useEffect(() => {\n    let interval;\n    if (isAnalyzingPronunciation && pronunciationAnalyzer) {\n      interval = setInterval(() => {\n        const features = pronunciationAnalyzer.features;\n        if (features.pitch.length > 0) {\n          const latestPitch = features.pitch[features.pitch.length - 1];\n          const latestRms = features.rms.length > 0 ? features.rms[features.rms.length - 1] : {\n            value: 0\n          };\n          const analysis = pronunciationAnalyzer.analyzeStressPatterns();\n          setRealTimeFeatures({\n            pitch: latestPitch.frequency.toFixed(1),\n            intensity: (latestRms.value * 100).toFixed(1),\n            stressPattern: analysis.stressPattern\n          });\n        }\n      }, 200);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [isAnalyzingPronunciation, pronunciationAnalyzer]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (recordingTimerRef.current) {\n        clearInterval(recordingTimerRef.current);\n      }\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (pronunciationAnalyzer) {\n        pronunciationAnalyzer.stopAnalysis();\n      }\n    };\n  }, [pronunciationAnalyzer]);\n\n  // Timer functions\n  const startRecordingTimer = useCallback(() => {\n    setRecordingTime(0);\n    recordingTimerRef.current = setInterval(() => {\n      setRecordingTime(prev => prev + 1);\n    }, 1000);\n  }, []);\n  const stopRecordingTimer = useCallback(() => {\n    if (recordingTimerRef.current) {\n      clearInterval(recordingTimerRef.current);\n      recordingTimerRef.current = null;\n    }\n  }, []);\n  const formatTime = useCallback(seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  // Enhanced recording with pronunciation analysis\n  const toggleRecording = async () => {\n    if (recording) {\n      var _recognitionRef$curre;\n      // Stop recording\n      (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n      if (pronunciationAnalyzer && isAnalyzingPronunciation) {\n        pronunciationAnalyzer.stopAnalysis();\n        const features = pronunciationAnalyzer.getFeatures();\n        setAudioFeatures(prev => ({\n          ...prev,\n          [currentQuestionIndex]: features\n        }));\n        setIsAnalyzingPronunciation(false);\n      }\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      return;\n    }\n\n    // Check browser support\n    if (!(\"webkitSpeechRecognition\" in window) && !(\"SpeechRecognition\" in window)) {\n      setError(\"Speech recognition is not supported in this browser. Please use Chrome or Edge.\");\n      return;\n    }\n    try {\n      // Get microphone stream\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: false,\n          sampleRate: 44100\n        }\n      });\n      currentStreamRef.current = stream;\n\n      // Start pronunciation analysis\n      if (pronunciationAnalyzer) {\n        try {\n          pronunciationAnalyzer.reset();\n          await pronunciationAnalyzer.startAnalysis(stream);\n          setIsAnalyzingPronunciation(true);\n        } catch (analysisError) {\n          console.warn('Pronunciation analysis failed:', analysisError);\n        }\n      }\n\n      // Setup speech recognition\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.lang = \"en-US\";\n      recognition.continuous = true;\n      recognition.interimResults = false;\n      recognition.maxAlternatives = 1;\n      recognition.onstart = () => {\n        setRecording(true);\n        setError(null);\n        startRecordingTimer();\n      };\n      recognition.onresult = event => {\n        const speechText = Array.from(event.results).map(result => result[0].transcript).join(\" \");\n        setAnswers(prev => {\n          const newAnswers = [...prev];\n          newAnswers[currentQuestionIndex] = speechText.trim();\n          return newAnswers;\n        });\n      };\n      recognition.onend = () => {\n        setRecording(false);\n        stopRecordingTimer();\n      };\n      recognition.onerror = event => {\n        console.error(\"Speech recognition error:\", event.error);\n        setError(`Speech recognition error: ${event.error}. Please try again.`);\n        setRecording(false);\n        stopRecordingTimer();\n        setIsAnalyzingPronunciation(false);\n      };\n      recognitionRef.current = recognition;\n      recognition.start();\n    } catch (err) {\n      setError(\"Failed to access microphone. Please check your permissions and try again.\");\n      console.error(\"Microphone access error:\", err);\n    }\n  };\n\n  // Navigation functions\n  const goNext = () => {\n    if (currentQuestionIndex < currentTest.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const goPrev = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  // Enhanced submit with pronunciation analysis\n  const submitTest = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"/api/analyze-batch\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          testId: currentTest.testId,\n          questions: currentTest.questions,\n          answers,\n          sampleAnswers: currentTest.sampleAnswers,\n          audioFeatures // Include pronunciation features\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n      const data = await response.json();\n      setFeedbacks(data.feedbacks);\n      setTestSummary(data.testSummary);\n      setShowResults(true);\n    } catch (err) {\n      console.error(\"Analysis error:\", err);\n      setError(\"Error during analysis. Please check your connection and try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset function\n  const resetTest = () => {\n    const randomTest = testsRepo[Math.floor(Math.random() * testsRepo.length)];\n    setCurrentTest(randomTest);\n    setAnswers(Array(randomTest.questions.length).fill(\"\"));\n    setCurrentQuestionIndex(0);\n    setFeedbacks(null);\n    setTestSummary(null);\n    setShowResults(false);\n    setError(null);\n    setRecordingTime(0);\n    setAudioFeatures({});\n    setRealTimeFeatures({\n      pitch: 0,\n      intensity: 0,\n      stressPattern: ''\n    });\n    if (pronunciationAnalyzer) {\n      pronunciationAnalyzer.reset();\n    }\n  };\n\n  // Band color function\n  const getBandColor = band => {\n    if (band >= 8.5) return \"#2e7d32\"; // Dark green\n    if (band >= 7) return \"#388e3c\"; // Green\n    if (band >= 6.5) return \"#689f38\"; // Light green\n    if (band >= 6) return \"#afb42b\"; // Yellow green\n    if (band >= 5.5) return \"#f57f17\"; // Dark yellow\n    if (band >= 5) return \"#ff8f00\"; // Orange\n    if (band >= 4) return \"#f57c00\"; // Dark orange\n    return \"#d32f2f\"; // Red\n  };\n\n  // Loading state\n  if (!currentTest) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"speech-evaluator loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Initializing IELTS Speech Evaluator...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Results display\n  if (showResults && feedbacks) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"speech-evaluator results-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDFAF IELTS Speaking Test Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"test-title\",\n            children: currentTest.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"questions-completed\",\n            children: [feedbacks.filter(f => f.overall > 0).length, \" of \", currentTest.questions.length, \" questions completed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 9\n      }, this), testSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overall-results\",\n        style: {\n          borderColor: getBandColor(testSummary.overall)\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Overall Performance Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"band-scores-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overall-band\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-score\",\n              style: {\n                color: getBandColor(testSummary.overall)\n              },\n              children: testSummary.overall\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-label\",\n              children: \"Overall Band\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"criteria-bands\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-score\",\n                style: {\n                  color: getBandColor(testSummary.fluency)\n                },\n                children: testSummary.fluency\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-label\",\n                children: \"Fluency & Coherence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-score\",\n                style: {\n                  color: getBandColor(testSummary.lexical)\n                },\n                children: testSummary.lexical\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-label\",\n                children: \"Lexical Resource\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-score\",\n                style: {\n                  color: getBandColor(testSummary.grammar)\n                },\n                children: testSummary.grammar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-label\",\n                children: \"Grammar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"band-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-score\",\n                style: {\n                  color: getBandColor(testSummary.pronunciation)\n                },\n                children: testSummary.pronunciation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"band-label\",\n                children: \"Pronunciation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"performance-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: testSummary.totalWords\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Words\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: testSummary.totalErrors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Grammar Errors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [Math.round((testSummary.stressAccuracy || 0.5) * 100), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Stress Accuracy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [Math.round((testSummary.intonationScore || 0.5) * 100), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Intonation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-results\",\n        children: feedbacks.map((feedback, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-result\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Question \", i + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-bands\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mini-band\",\n                style: {\n                  backgroundColor: getBandColor(feedback.overall)\n                },\n                children: feedback.overall\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-content\",\n            children: feedback.feedback.split('\\n').map((line, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback-line\",\n              children: line.includes('**') ? /*#__PURE__*/_jsxDEV(\"div\", {\n                dangerouslySetInnerHTML: {\n                  __html: line.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: line\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 23\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetTest,\n          className: \"btn btn-primary\",\n          children: \"\\uD83D\\uDD04 Take Another Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.print(),\n          className: \"btn btn-secondary\",\n          children: \"\\uD83D\\uDDA8\\uFE0F Print Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main test interface\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-evaluator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentTest.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-counter\",\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", currentTest.questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${(currentQuestionIndex + 1) / currentTest.questions.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: currentTest.questions[currentQuestionIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-metadata\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"recommended-time\",\n            children: \"\\u23F1\\uFE0F Recommended: 1-2 minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"word-target\",\n            children: \"\\uD83C\\uDFAF Target: 100+ words\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleRecording,\n          disabled: loading,\n          className: `record-btn ${recording ? 'recording' : ''}`,\n          children: recording ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"record-icon\",\n              children: \"\\u23F9\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 17\n            }, this), \"Stop Recording (\", formatTime(recordingTime), \")\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"record-icon\",\n              children: \"\\uD83C\\uDFA4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 17\n            }, this), \"Start Recording\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 9\n      }, this), recording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"real-time-analysis\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDD34 Live Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Pitch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: [realTimeFeatures.pitch, \" Hz\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Intensity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: [realTimeFeatures.intensity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Pattern\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stress-pattern\",\n              children: realTimeFeatures.stressPattern.split('').map((char, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: char === 'S' ? 'stressed' : 'unstressed',\n                children: char\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [\"\\u26A0\\uFE0F \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"response-textarea\",\n        children: \"Your Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"response-textarea\",\n        value: answers[currentQuestionIndex] || \"\",\n        onChange: e => {\n          const newAnswers = [...answers];\n          newAnswers[currentQuestionIndex] = e.target.value;\n          setAnswers(newAnswers);\n        },\n        placeholder: \"Your response will appear here as you speak, or you can type directly...\",\n        disabled: recording,\n        rows: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"word-count\",\n          children: [\"Words: \", (answers[currentQuestionIndex] || \"\").split(/\\s+/).filter(w => w.length > 0).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 11\n        }, this), answers[currentQuestionIndex] && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"character-count\",\n          children: [\"Characters: \", answers[currentQuestionIndex].length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goPrev,\n          disabled: currentQuestionIndex === 0 || recording || loading,\n          className: \"btn btn-secondary\",\n          children: \"\\u2190 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-status\",\n          children: answers.map((answer, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `question-indicator ${idx === currentQuestionIndex ? 'current' : ''} ${answer.trim() ? 'completed' : ''}`,\n            onClick: () => !recording && !loading && setCurrentQuestionIndex(idx),\n            children: idx + 1\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goNext,\n          disabled: currentQuestionIndex === currentTest.questions.length - 1 || recording || loading,\n          className: \"btn btn-secondary\",\n          children: \"Next \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 7\n    }, this), answers.some(answer => answer.trim().length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Ready to get your results?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You've answered \", answers.filter(a => a.trim().length > 0).length, \" of \", currentTest.questions.length, \" questions.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitTest,\n        disabled: loading,\n        className: \"btn btn-primary submit-btn\",\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-spinner small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 17\n          }, this), \"Analyzing your responses...\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"\\uD83D\\uDCCA Submit Test for Analysis\"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help-section\",\n      children: /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"\\uD83D\\uDCDD Instructions & Tips\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"How to use this evaluator:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Click \\\"Start Recording\\\" and speak your answer clearly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"You can also type your response directly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Navigate between questions using the Previous/Next buttons or click question numbers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Aim for detailed responses (100+ words per question)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Submit when you've answered at least one question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"For best pronunciation analysis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Use a quiet environment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Speak at a natural pace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Ensure good microphone quality\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Use Chrome or Edge browsers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 718,\n    columnNumber: 5\n  }, this);\n}\n_s(SpeechEvaluator, \"xpc2PNQp0VEIgwnT3eHo3Wle8W8=\");\n_c = SpeechEvaluator;\nexport default SpeechEvaluator;\nvar _c;\n$RefreshReg$(_c, \"SpeechEvaluator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","testsRepo","testId","title","questions","sampleAnswers","SimplePronunciationAnalyzer","constructor","audioContext","analyser","features","pitch","rms","spectralCentroid","zcr","isAnalyzing","initialize","window","AudioContext","webkitAudioContext","error","console","startAnalysis","stream","Error","source","createMediaStreamSource","createAnalyser","fftSize","smoothingTimeConstant","minDecibels","maxDecibels","connect","startFeatureExtraction","bufferLength","frequencyBinCount","dataArray","Float32Array","timeDataArray","extractFeatures","getFloatFrequencyData","getFloatTimeDomainData","timestamp","currentTime","calculateRMS","calculateZCR","calculateSpectralCentroid","detectPitch","push","value","frequency","requestAnimationFrame","timeData","sum","i","length","Math","sqrt","zeroCrossings","freqData","weightedSum","magnitudeSum","magnitude","pow","sampleRate","minPeriod","floor","maxPeriod","bestCorrelation","bestPeriod","period","min","correlation","analyzeStressPatterns","stressPattern","rhythmScore","intonationVariation","stressAccuracy","syllables","detectSyllables","stressedCount","forEach","syllable","stressScore","calculateSyllableStress","stressRatio","calculateRhythm","calculateIntonation","threshold","calculateEnergyThreshold","currentSyllable","inSyllable","rmsData","index","energy","isVoiced","startTime","peakEnergy","energySum","samples","max","endTime","duration","avgEnergy","avgIntensity","reduce","r","intensityScore","intervals","avgInterval","interval","variance","coefficient","pitches","map","p","minPitch","maxPitch","avgPitch","pitchRange","energies","sort","a","b","stopAnalysis","getFeatures","analysis","reset","SpeechEvaluator","_s","currentTest","setCurrentTest","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","recording","setRecording","loading","setLoading","feedbacks","setFeedbacks","testSummary","setTestSummary","setError","recordingTime","setRecordingTime","showResults","setShowResults","pronunciationAnalyzer","setPronunciationAnalyzer","audioFeatures","setAudioFeatures","isAnalyzingPronunciation","setIsAnalyzingPronunciation","realTimeFeatures","setRealTimeFeatures","intensity","recognitionRef","recordingTimerRef","currentStreamRef","randomTest","random","Array","fill","initAnalyzer","analyzer","initialized","setInterval","latestPitch","latestRms","toFixed","clearInterval","current","getTracks","track","stop","startRecordingTimer","prev","stopRecordingTimer","formatTime","seconds","mins","secs","toString","padStart","toggleRecording","_recognitionRef$curre","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","analysisError","warn","SpeechRecognition","webkitSpeechRecognition","recognition","lang","continuous","interimResults","maxAlternatives","onstart","onresult","event","speechText","from","results","result","transcript","join","newAnswers","trim","onend","onerror","start","err","goNext","goPrev","submitTest","response","fetch","method","headers","body","JSON","stringify","ok","status","data","json","resetTest","getBandColor","band","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","f","overall","style","borderColor","color","fluency","lexical","grammar","pronunciation","totalWords","totalErrors","round","intonationScore","feedback","backgroundColor","split","line","idx","includes","dangerouslySetInnerHTML","__html","replace","onClick","print","width","disabled","char","htmlFor","id","onChange","e","target","placeholder","rows","w","answer","some","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/ielts-speech-evaluator/src/components/SpeechEvaluator.jsx"],"sourcesContent":["// Enhanced SpeechEvaluator.jsx - Complete IELTS Speech Evaluator with Pronunciation Analysis\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport './SpeechEvaluator.css';\n\n// Test repository with comprehensive IELTS questions\nconst testsRepo = [\n  {\n    testId: \"Test1\",\n    title: \"Personal Experience & Preferences\",\n    questions: [\n      \"Describe your hometown. What do you like most about it, and how has it changed over the years?\",\n      \"Talk about your hobbies and interests. Why do you enjoy them, and how do they benefit you?\",\n      \"Tell me about a book, movie, or TV show that has influenced you. How did it change your perspective on life?\"\n    ],\n    sampleAnswers: [\n      \"My hometown is a beautiful coastal city with stunning beaches and a rich cultural heritage. What I love most about it is the perfect blend of modern amenities and traditional charm. Over the years, I've witnessed significant development in infrastructure, with new shopping centers, restaurants, and recreational facilities. However, the local government has done an excellent job preserving the historical architecture and cultural landmarks. The people remain incredibly friendly and welcoming, maintaining the community spirit despite urban growth. The climate is pleasant year-round, which allows for an active outdoor lifestyle, and there's always something interesting happening, whether it's local festivals, art exhibitions, or cultural events that celebrate our diverse heritage.\",\n      \"I have several hobbies that I'm genuinely passionate about. Reading is probably my favorite because it allows me to explore different worlds and perspectives without leaving my home. I particularly enjoy contemporary fiction and historical biographies, as they provide insights into human nature and different time periods. I also enjoy hiking and photography, often combining the two when I explore nature trails on weekends. These activities help me disconnect from the stress of daily life while keeping me physically active and mentally stimulated. Photography has taught me to observe details more carefully, and hiking has improved my physical fitness and given me a deeper appreciation for nature's beauty.\",\n      \"One book that profoundly influenced me was 'To Kill a Mockingbird' by Harper Lee. It opened my eyes to issues of social justice and the importance of standing up for what's right, even when it's difficult or unpopular. The character of Atticus Finch taught me about moral courage and integrity in the face of adversity. This book fundamentally changed how I view prejudice and discrimination, making me more aware of social issues in my own community and inspiring me to be more empathetic towards others who face challenges different from my own. It also influenced my career choice, as I decided to pursue law to help fight for justice and equality.\"\n    ]\n  },\n  {\n    testId: \"Test2\",\n    title: \"Education & Career Goals\",\n    questions: [\n      \"Talk about your education and what subjects you found most interesting. How have they shaped your career aspirations?\",\n      \"Describe your best friend and explain why this friendship is important to you. How do you maintain strong relationships?\",\n      \"What are your career goals for the next five years, and how do you plan to achieve them? What challenges do you anticipate?\"\n    ],\n    sampleAnswers: [\n      \"I completed my bachelor's degree in Computer Science, which I found incredibly fascinating and challenging. The subjects I enjoyed most were artificial intelligence, software development, and data structures because they challenged me to think logically and creatively simultaneously. Programming languages like Python and Java became tools for solving complex problems, and I discovered a passion for creating efficient, elegant solutions. What I particularly appreciated about my education was how it taught me to approach challenges systematically and think critically about problems. The collaborative projects helped me develop teamwork skills, while individual assignments fostered independent learning. This education has shaped my career aspirations toward becoming a software engineer specializing in AI and machine learning applications.\",\n      \"My best friend Sarah has been in my life for over ten years, and what makes our friendship truly special is our ability to communicate openly and honestly about anything. She's incredibly supportive during difficult times and genuinely celebrates my successes without any jealousy. We share similar values regarding honesty, loyalty, and personal growth, but we're different enough to learn from each other constantly. To maintain our strong relationship, we make effort to stay in regular contact, plan monthly activities together, and always make time for each other despite our busy schedules. This friendship has taught me the importance of having someone who accepts you completely for who you are, while also encouraging you to become the best version of yourself.\",\n      \"My primary career goal for the next five years is to become a senior software engineer specializing in sustainable technology solutions and artificial intelligence applications. I plan to achieve this by continuously learning new programming languages and frameworks, contributing to open-source projects to build my portfolio, and pursuing additional certifications in machine learning and cloud computing. I'm also planning to attend industry conferences and networking events to stay current with technological advances and connect with professionals in my field. The main challenges I anticipate include keeping up with rapidly evolving technology, managing work-life balance as I advance in my career, and potentially competing with highly skilled professionals from around the world in an increasingly global job market.\"\n    ]\n  },\n  {\n    testId: \"Test3\",\n    title: \"Travel, Technology & Society\",\n    questions: [\n      \"Describe a memorable travel experience and explain what made it special. How did it broaden your perspective?\",\n      \"Talk about a skill you would like to learn and explain why it interests you. How would you go about learning it?\",\n      \"Discuss the role of technology in modern communication. What are the advantages and disadvantages you've observed?\"\n    ],\n    sampleAnswers: [\n      \"Last year, I traveled to Japan, which was absolutely extraordinary and life-changing. What made it special was the incredible attention to detail in everything - from the perfectly organized transportation system to the beautiful presentation of food in even the smallest restaurants. I was amazed by how technology and tradition coexisted harmoniously throughout the country. The people were exceptionally polite and helpful, even despite language barriers, which taught me about the universal nature of human kindness. Visiting ancient temples in Kyoto while experiencing the ultra-modern atmosphere of Tokyo gave me a unique perspective on how cultures can preserve their heritage while embracing innovation and progress. This experience broadened my understanding of different approaches to life and made me more adaptable and open-minded in my daily interactions.\",\n      \"I would absolutely love to learn how to play the piano because music has always been a passion of mine, but I never had the opportunity to learn an instrument properly during my childhood. Piano appeals to me because it's incredibly versatile - you can play classical pieces, jazz, contemporary music, or even compose your own original pieces. I believe learning piano would improve my cognitive abilities, provide excellent stress relief after long work days, and give me a creative outlet for self-expression. To learn effectively, I would start with online tutorials and apps, then progress to formal lessons with a qualified instructor. I'd also practice regularly, set realistic goals for myself, and join local music groups to stay motivated and learn from other musicians in my community.\",\n      \"Technology has revolutionized modern communication in remarkable and unprecedented ways. We can now instantly connect with people across the globe through video calls, social media platforms, and messaging applications, which has made the world feel smaller and more interconnected than ever before. This has tremendous advantages for maintaining long-distance relationships, conducting international business, and sharing knowledge rapidly across cultures. However, I've observed significant disadvantages as well. Technology can lead to superficial interactions and reduced face-to-face communication skills, especially among younger generations. There's also the problem of information overload and the spread of misinformation through social media. The key is finding the right balance and using technology to enhance rather than replace meaningful human connections and authentic communication.\"\n    ]\n  }\n];\n\n// Pronunciation Analyzer Class (simplified for React integration)\nclass SimplePronunciationAnalyzer {\n  constructor() {\n    this.audioContext = null;\n    this.analyser = null;\n    this.features = {\n      pitch: [],\n      rms: [],\n      spectralCentroid: [],\n      zcr: []\n    };\n    this.isAnalyzing = false;\n  }\n\n  async initialize() {\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize audio context:', error);\n      return false;\n    }\n  }\n\n  async startAnalysis(stream) {\n    if (!this.audioContext) {\n      throw new Error('Audio context not initialized');\n    }\n\n    const source = this.audioContext.createMediaStreamSource(stream);\n    this.analyser = this.audioContext.createAnalyser();\n    \n    this.analyser.fftSize = 2048;\n    this.analyser.smoothingTimeConstant = 0.8;\n    this.analyser.minDecibels = -90;\n    this.analyser.maxDecibels = -10;\n    \n    source.connect(this.analyser);\n    this.isAnalyzing = true;\n    this.startFeatureExtraction();\n  }\n\n  startFeatureExtraction() {\n    const bufferLength = this.analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    const timeDataArray = new Float32Array(this.analyser.fftSize);\n    \n    const extractFeatures = () => {\n      if (!this.isAnalyzing) return;\n      \n      this.analyser.getFloatFrequencyData(dataArray);\n      this.analyser.getFloatTimeDomainData(timeDataArray);\n      \n      const timestamp = this.audioContext.currentTime;\n      const rms = this.calculateRMS(timeDataArray);\n      const zcr = this.calculateZCR(timeDataArray);\n      const spectralCentroid = this.calculateSpectralCentroid(dataArray);\n      const pitch = this.detectPitch(timeDataArray);\n      \n      this.features.rms.push({ value: rms, timestamp });\n      this.features.zcr.push({ value: zcr, timestamp });\n      this.features.spectralCentroid.push({ value: spectralCentroid, timestamp });\n      \n      if (pitch && pitch > 50 && pitch < 800) {\n        this.features.pitch.push({ frequency: pitch, timestamp });\n      }\n      \n      requestAnimationFrame(extractFeatures);\n    };\n    \n    extractFeatures();\n  }\n\n  calculateRMS(timeData) {\n    let sum = 0;\n    for (let i = 0; i < timeData.length; i++) {\n      sum += timeData[i] * timeData[i];\n    }\n    return Math.sqrt(sum / timeData.length);\n  }\n\n  calculateZCR(timeData) {\n    let zeroCrossings = 0;\n    for (let i = 1; i < timeData.length; i++) {\n      if ((timeData[i] >= 0) !== (timeData[i - 1] >= 0)) {\n        zeroCrossings++;\n      }\n    }\n    return zeroCrossings / (timeData.length - 1);\n  }\n\n  calculateSpectralCentroid(freqData) {\n    let weightedSum = 0;\n    let magnitudeSum = 0;\n    \n    for (let i = 0; i < freqData.length; i++) {\n      const magnitude = Math.pow(10, freqData[i] / 10);\n      const frequency = (i * this.audioContext.sampleRate) / (2 * freqData.length);\n      \n      weightedSum += frequency * magnitude;\n      magnitudeSum += magnitude;\n    }\n    \n    return magnitudeSum > 0 ? weightedSum / magnitudeSum : 0;\n  }\n\n  detectPitch(timeData) {\n    const sampleRate = this.audioContext.sampleRate;\n    const minPeriod = Math.floor(sampleRate / 800);\n    const maxPeriod = Math.floor(sampleRate / 50);\n    \n    let bestCorrelation = 0;\n    let bestPeriod = 0;\n    \n    for (let period = minPeriod; period < Math.min(maxPeriod, timeData.length / 2); period++) {\n      let correlation = 0;\n      for (let i = 0; i < timeData.length - period; i++) {\n        correlation += timeData[i] * timeData[i + period];\n      }\n      \n      if (correlation > bestCorrelation) {\n        bestCorrelation = correlation;\n        bestPeriod = period;\n      }\n    }\n    \n    return bestPeriod > 0 ? sampleRate / bestPeriod : 0;\n  }\n\n  analyzeStressPatterns() {\n    if (this.features.rms.length < 10) {\n      return {\n        stressPattern: '',\n        rhythmScore: 0.5,\n        intonationVariation: 0.5,\n        stressAccuracy: 0.5\n      };\n    }\n\n    const syllables = this.detectSyllables();\n    let stressPattern = '';\n    let stressedCount = 0;\n\n    syllables.forEach(syllable => {\n      const stressScore = this.calculateSyllableStress(syllable);\n      if (stressScore > 0.6) {\n        stressPattern += 'S';\n        stressedCount++;\n      } else {\n        stressPattern += 'U';\n      }\n    });\n\n    const stressRatio = syllables.length > 0 ? stressedCount / syllables.length : 0;\n    const stressAccuracy = stressRatio >= 0.2 && stressRatio <= 0.4 ? \n      Math.min(stressRatio / 0.3, 1.0) : 0.5;\n\n    return {\n      stressPattern,\n      rhythmScore: this.calculateRhythm(syllables),\n      intonationVariation: this.calculateIntonation(),\n      stressAccuracy\n    };\n  }\n\n  detectSyllables() {\n    const threshold = this.calculateEnergyThreshold();\n    const syllables = [];\n    let currentSyllable = null;\n    let inSyllable = false;\n\n    this.features.rms.forEach((rmsData, index) => {\n      const energy = rmsData.value;\n      const isVoiced = energy > threshold;\n\n      if (isVoiced && !inSyllable) {\n        currentSyllable = {\n          startTime: rmsData.timestamp,\n          peakEnergy: energy,\n          energySum: energy,\n          samples: 1\n        };\n        inSyllable = true;\n      } else if (isVoiced && inSyllable) {\n        currentSyllable.peakEnergy = Math.max(currentSyllable.peakEnergy, energy);\n        currentSyllable.energySum += energy;\n        currentSyllable.samples++;\n      } else if (!isVoiced && inSyllable) {\n        currentSyllable.endTime = rmsData.timestamp;\n        currentSyllable.duration = currentSyllable.endTime - currentSyllable.startTime;\n        currentSyllable.avgEnergy = currentSyllable.energySum / currentSyllable.samples;\n        syllables.push(currentSyllable);\n        inSyllable = false;\n      }\n    });\n\n    return syllables;\n  }\n\n  calculateSyllableStress(syllable) {\n    const avgIntensity = this.features.rms.reduce((sum, r) => sum + r.value, 0) / this.features.rms.length;\n    const intensityScore = Math.min(syllable.avgEnergy / Math.max(avgIntensity, 0.001), 2.0);\n    return intensityScore / 2.0;\n  }\n\n  calculateRhythm(syllables) {\n    if (syllables.length < 3) return 0.5;\n    const intervals = [];\n    for (let i = 1; i < syllables.length; i++) {\n      intervals.push(syllables[i].startTime - syllables[i-1].startTime);\n    }\n    const avgInterval = intervals.reduce((sum, interval) => sum + interval, 0) / intervals.length;\n    const variance = intervals.reduce((sum, interval) => sum + Math.pow(interval - avgInterval, 2), 0) / intervals.length;\n    const coefficient = Math.sqrt(variance) / Math.max(avgInterval, 0.1);\n    return Math.max(0, 1 - coefficient);\n  }\n\n  calculateIntonation() {\n    if (this.features.pitch.length < 10) return 0.5;\n    const pitches = this.features.pitch.map(p => p.frequency);\n    const minPitch = Math.min(...pitches);\n    const maxPitch = Math.max(...pitches);\n    const avgPitch = pitches.reduce((sum, p) => sum + p, 0) / pitches.length;\n    const pitchRange = (maxPitch - minPitch) / avgPitch;\n    return Math.min(pitchRange / 0.5, 1.0);\n  }\n\n  calculateEnergyThreshold() {\n    if (this.features.rms.length === 0) return 0.01;\n    const energies = this.features.rms.map(r => r.value).sort((a, b) => a - b);\n    return energies[Math.floor(energies.length * 0.75)] * 0.25;\n  }\n\n  stopAnalysis() {\n    this.isAnalyzing = false;\n  }\n\n  getFeatures() {\n    return {\n      ...this.features,\n      analysis: this.analyzeStressPatterns()\n    };\n  }\n\n  reset() {\n    this.features = { pitch: [], rms: [], spectralCentroid: [], zcr: [] };\n    this.isAnalyzing = false;\n  }\n}\n\n// Main Speech Evaluator Component\nfunction SpeechEvaluator() {\n  // State management\n  const [currentTest, setCurrentTest] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [feedbacks, setFeedbacks] = useState(null);\n  const [testSummary, setTestSummary] = useState(null);\n  const [error, setError] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  \n  // Pronunciation analysis state\n  const [pronunciationAnalyzer, setPronunciationAnalyzer] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState({});\n  const [isAnalyzingPronunciation, setIsAnalyzingPronunciation] = useState(false);\n  const [realTimeFeatures, setRealTimeFeatures] = useState({\n    pitch: 0,\n    intensity: 0,\n    stressPattern: ''\n  });\n\n  // Refs\n  const recognitionRef = useRef(null);\n  const recordingTimerRef = useRef(null);\n  const currentStreamRef = useRef(null);\n\n  // Initialize test and pronunciation analyzer\n  useEffect(() => {\n    const randomTest = testsRepo[Math.floor(Math.random() * testsRepo.length)];\n    setCurrentTest(randomTest);\n    setAnswers(Array(randomTest.questions.length).fill(\"\"));\n\n    // Initialize pronunciation analyzer\n    const initAnalyzer = async () => {\n      try {\n        const analyzer = new SimplePronunciationAnalyzer();\n        const initialized = await analyzer.initialize();\n        if (initialized) {\n          setPronunciationAnalyzer(analyzer);\n        }\n      } catch (error) {\n        console.error('Failed to initialize pronunciation analyzer:', error);\n      }\n    };\n\n    initAnalyzer();\n  }, []);\n\n  // Real-time feature updates\n  useEffect(() => {\n    let interval;\n    if (isAnalyzingPronunciation && pronunciationAnalyzer) {\n      interval = setInterval(() => {\n        const features = pronunciationAnalyzer.features;\n        if (features.pitch.length > 0) {\n          const latestPitch = features.pitch[features.pitch.length - 1];\n          const latestRms = features.rms.length > 0 ? features.rms[features.rms.length - 1] : { value: 0 };\n          const analysis = pronunciationAnalyzer.analyzeStressPatterns();\n          \n          setRealTimeFeatures({\n            pitch: latestPitch.frequency.toFixed(1),\n            intensity: (latestRms.value * 100).toFixed(1),\n            stressPattern: analysis.stressPattern\n          });\n        }\n      }, 200);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [isAnalyzingPronunciation, pronunciationAnalyzer]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (recordingTimerRef.current) {\n        clearInterval(recordingTimerRef.current);\n      }\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (pronunciationAnalyzer) {\n        pronunciationAnalyzer.stopAnalysis();\n      }\n    };\n  }, [pronunciationAnalyzer]);\n\n  // Timer functions\n  const startRecordingTimer = useCallback(() => {\n    setRecordingTime(0);\n    recordingTimerRef.current = setInterval(() => {\n      setRecordingTime(prev => prev + 1);\n    }, 1000);\n  }, []);\n\n  const stopRecordingTimer = useCallback(() => {\n    if (recordingTimerRef.current) {\n      clearInterval(recordingTimerRef.current);\n      recordingTimerRef.current = null;\n    }\n  }, []);\n\n  const formatTime = useCallback((seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  // Enhanced recording with pronunciation analysis\n  const toggleRecording = async () => {\n    if (recording) {\n      // Stop recording\n      recognitionRef.current?.stop();\n      if (pronunciationAnalyzer && isAnalyzingPronunciation) {\n        pronunciationAnalyzer.stopAnalysis();\n        const features = pronunciationAnalyzer.getFeatures();\n        setAudioFeatures(prev => ({\n          ...prev,\n          [currentQuestionIndex]: features\n        }));\n        setIsAnalyzingPronunciation(false);\n      }\n      if (currentStreamRef.current) {\n        currentStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      return;\n    }\n\n    // Check browser support\n    if (!(\"webkitSpeechRecognition\" in window) && !(\"SpeechRecognition\" in window)) {\n      setError(\"Speech recognition is not supported in this browser. Please use Chrome or Edge.\");\n      return;\n    }\n\n    try {\n      // Get microphone stream\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: false,\n          sampleRate: 44100\n        }\n      });\n\n      currentStreamRef.current = stream;\n\n      // Start pronunciation analysis\n      if (pronunciationAnalyzer) {\n        try {\n          pronunciationAnalyzer.reset();\n          await pronunciationAnalyzer.startAnalysis(stream);\n          setIsAnalyzingPronunciation(true);\n        } catch (analysisError) {\n          console.warn('Pronunciation analysis failed:', analysisError);\n        }\n      }\n\n      // Setup speech recognition\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      \n      recognition.lang = \"en-US\";\n      recognition.continuous = true;\n      recognition.interimResults = false;\n      recognition.maxAlternatives = 1;\n\n      recognition.onstart = () => {\n        setRecording(true);\n        setError(null);\n        startRecordingTimer();\n      };\n\n      recognition.onresult = (event) => {\n        const speechText = Array.from(event.results)\n          .map((result) => result[0].transcript)\n          .join(\" \");\n        \n        setAnswers((prev) => {\n          const newAnswers = [...prev];\n          newAnswers[currentQuestionIndex] = speechText.trim();\n          return newAnswers;\n        });\n      };\n\n      recognition.onend = () => {\n        setRecording(false);\n        stopRecordingTimer();\n      };\n\n      recognition.onerror = (event) => {\n        console.error(\"Speech recognition error:\", event.error);\n        setError(`Speech recognition error: ${event.error}. Please try again.`);\n        setRecording(false);\n        stopRecordingTimer();\n        setIsAnalyzingPronunciation(false);\n      };\n\n      recognitionRef.current = recognition;\n      recognition.start();\n      \n    } catch (err) {\n      setError(\"Failed to access microphone. Please check your permissions and try again.\");\n      console.error(\"Microphone access error:\", err);\n    }\n  };\n\n  // Navigation functions\n  const goNext = () => {\n    if (currentQuestionIndex < currentTest.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const goPrev = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  // Enhanced submit with pronunciation analysis\n  const submitTest = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(\"/api/analyze-batch\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          testId: currentTest.testId,\n          questions: currentTest.questions,\n          answers,\n          sampleAnswers: currentTest.sampleAnswers,\n          audioFeatures // Include pronunciation features\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setFeedbacks(data.feedbacks);\n      setTestSummary(data.testSummary);\n      setShowResults(true);\n    } catch (err) {\n      console.error(\"Analysis error:\", err);\n      setError(\"Error during analysis. Please check your connection and try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset function\n  const resetTest = () => {\n    const randomTest = testsRepo[Math.floor(Math.random() * testsRepo.length)];\n    setCurrentTest(randomTest);\n    setAnswers(Array(randomTest.questions.length).fill(\"\"));\n    setCurrentQuestionIndex(0);\n    setFeedbacks(null);\n    setTestSummary(null);\n    setShowResults(false);\n    setError(null);\n    setRecordingTime(0);\n    setAudioFeatures({});\n    setRealTimeFeatures({ pitch: 0, intensity: 0, stressPattern: '' });\n    if (pronunciationAnalyzer) {\n      pronunciationAnalyzer.reset();\n    }\n  };\n\n  // Band color function\n  const getBandColor = (band) => {\n    if (band >= 8.5) return \"#2e7d32\"; // Dark green\n    if (band >= 7) return \"#388e3c\";   // Green\n    if (band >= 6.5) return \"#689f38\"; // Light green\n    if (band >= 6) return \"#afb42b\";   // Yellow green\n    if (band >= 5.5) return \"#f57f17\"; // Dark yellow\n    if (band >= 5) return \"#ff8f00\";   // Orange\n    if (band >= 4) return \"#f57c00\";   // Dark orange\n    return \"#d32f2f\";                  // Red\n  };\n\n  // Loading state\n  if (!currentTest) {\n    return (\n      <div className=\"speech-evaluator loading\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Initializing IELTS Speech Evaluator...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Results display\n  if (showResults && feedbacks) {\n    return (\n      <div className=\"speech-evaluator results-view\">\n        <div className=\"results-header\">\n          <h2>🎯 IELTS Speaking Test Results</h2>\n          <div className=\"test-info\">\n            <span className=\"test-title\">{currentTest.title}</span>\n            <span className=\"questions-completed\">{feedbacks.filter(f => f.overall > 0).length} of {currentTest.questions.length} questions completed</span>\n          </div>\n        </div>\n        \n        {testSummary && (\n          <div className=\"overall-results\" style={{ borderColor: getBandColor(testSummary.overall) }}>\n            <h3>Overall Performance Summary</h3>\n            \n            <div className=\"band-scores-grid\">\n              <div className=\"overall-band\">\n                <div className=\"band-score\" style={{ color: getBandColor(testSummary.overall) }}>\n                  {testSummary.overall}\n                </div>\n                <div className=\"band-label\">Overall Band</div>\n              </div>\n              \n              <div className=\"criteria-bands\">\n                <div className=\"band-item\">\n                  <div className=\"band-score\" style={{ color: getBandColor(testSummary.fluency) }}>\n                    {testSummary.fluency}\n                  </div>\n                  <div className=\"band-label\">Fluency & Coherence</div>\n                </div>\n                <div className=\"band-item\">\n                  <div className=\"band-score\" style={{ color: getBandColor(testSummary.lexical) }}>\n                    {testSummary.lexical}\n                  </div>\n                  <div className=\"band-label\">Lexical Resource</div>\n                </div>\n                <div className=\"band-item\">\n                  <div className=\"band-score\" style={{ color: getBandColor(testSummary.grammar) }}>\n                    {testSummary.grammar}\n                  </div>\n                  <div className=\"band-label\">Grammar</div>\n                </div>\n                <div className=\"band-item\">\n                  <div className=\"band-score\" style={{ color: getBandColor(testSummary.pronunciation) }}>\n                    {testSummary.pronunciation}\n                  </div>\n                  <div className=\"band-label\">Pronunciation</div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"performance-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{testSummary.totalWords}</span>\n                <span className=\"stat-label\">Total Words</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{testSummary.totalErrors}</span>\n                <span className=\"stat-label\">Grammar Errors</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{Math.round((testSummary.stressAccuracy || 0.5) * 100)}%</span>\n                <span className=\"stat-label\">Stress Accuracy</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{Math.round((testSummary.intonationScore || 0.5) * 100)}%</span>\n                <span className=\"stat-label\">Intonation</span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"question-results\">\n          {feedbacks.map((feedback, i) => (\n            <div key={i} className=\"question-result\">\n              <div className=\"question-header\">\n                <h4>Question {i + 1}</h4>\n                <div className=\"question-bands\">\n                  <span className=\"mini-band\" style={{ backgroundColor: getBandColor(feedback.overall) }}>\n                    {feedback.overall}\n                  </span>\n                </div>\n              </div>\n              <div className=\"feedback-content\">\n                {feedback.feedback.split('\\n').map((line, idx) => (\n                  <div key={idx} className=\"feedback-line\">\n                    {line.includes('**') ? (\n                      <div dangerouslySetInnerHTML={{ \n                        __html: line.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>') \n                      }} />\n                    ) : (\n                      <div>{line}</div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"results-actions\">\n          <button onClick={resetTest} className=\"btn btn-primary\">\n            🔄 Take Another Test\n          </button>\n          <button onClick={() => window.print()} className=\"btn btn-secondary\">\n            🖨️ Print Results\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Main test interface\n  return (\n    <div className=\"speech-evaluator\">\n      <div className=\"test-header\">\n        <div className=\"test-info\">\n          <h2>{currentTest.title}</h2>\n          <div className=\"progress-info\">\n            <span className=\"question-counter\">Question {currentQuestionIndex + 1} of {currentTest.questions.length}</span>\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\" \n                style={{ width: `${((currentQuestionIndex + 1) / currentTest.questions.length) * 100}%` }}\n              ></div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"question-section\">\n        <div className=\"question-card\">\n          <div className=\"question-text\">\n            {currentTest.questions[currentQuestionIndex]}\n          </div>\n          <div className=\"question-metadata\">\n            <span className=\"recommended-time\">⏱️ Recommended: 1-2 minutes</span>\n            <span className=\"word-target\">🎯 Target: 100+ words</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"recording-section\">\n        <div className=\"recording-controls\">\n          <button \n            onClick={toggleRecording}\n            disabled={loading}\n            className={`record-btn ${recording ? 'recording' : ''}`}\n          >\n            {recording ? (\n              <>\n                <span className=\"record-icon\">⏹️</span>\n                Stop Recording ({formatTime(recordingTime)})\n              </>\n            ) : (\n              <>\n                <span className=\"record-icon\">🎤</span>\n                Start Recording\n              </>\n            )}\n          </button>\n        </div>\n\n        {recording && (\n          <div className=\"real-time-analysis\">\n            <h4>🔴 Live Analysis</h4>\n            <div className=\"analysis-grid\">\n              <div className=\"analysis-item\">\n                <span className=\"label\">Pitch</span>\n                <span className=\"value\">{realTimeFeatures.pitch} Hz</span>\n              </div>\n              <div className=\"analysis-item\">\n                <span className=\"label\">Intensity</span>\n                <span className=\"value\">{realTimeFeatures.intensity}%</span>\n              </div>\n              <div className=\"analysis-item\">\n                <span className=\"label\">Pattern</span>\n                <span className=\"stress-pattern\">\n                  {realTimeFeatures.stressPattern.split('').map((char, idx) => (\n                    <span \n                      key={idx}\n                      className={char === 'S' ? 'stressed' : 'unstressed'}\n                    >\n                      {char}\n                    </span>\n                  ))}\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"error-message\">\n            ⚠️ {error}\n          </div>\n        )}\n      </div>\n\n      <div className=\"response-section\">\n        <label htmlFor=\"response-textarea\">Your Response:</label>\n        <textarea\n          id=\"response-textarea\"\n          value={answers[currentQuestionIndex] || \"\"}\n          onChange={(e) => {\n            const newAnswers = [...answers];\n            newAnswers[currentQuestionIndex] = e.target.value;\n            setAnswers(newAnswers);\n          }}\n          placeholder=\"Your response will appear here as you speak, or you can type directly...\"\n          disabled={recording}\n          rows={6}\n        />\n        \n        <div className=\"response-stats\">\n          <span className=\"word-count\">\n            Words: {(answers[currentQuestionIndex] || \"\").split(/\\s+/).filter(w => w.length > 0).length}\n          </span>\n          {answers[currentQuestionIndex] && (\n            <span className=\"character-count\">\n              Characters: {answers[currentQuestionIndex].length}\n            </span>\n          )}\n        </div>\n      </div>\n\n      <div className=\"navigation-section\">\n        <div className=\"nav-buttons\">\n          <button \n            onClick={goPrev}\n            disabled={currentQuestionIndex === 0 || recording || loading}\n            className=\"btn btn-secondary\"\n          >\n            ← Previous\n          </button>\n\n          <div className=\"questions-status\">\n            {answers.map((answer, idx) => (\n              <div \n                key={idx}\n                className={`question-indicator ${idx === currentQuestionIndex ? 'current' : ''} ${answer.trim() ? 'completed' : ''}`}\n                onClick={() => !recording && !loading && setCurrentQuestionIndex(idx)}\n              >\n                {idx + 1}\n              </div>\n            ))}\n          </div>\n\n          <button \n            onClick={goNext}\n            disabled={currentQuestionIndex === currentTest.questions.length - 1 || recording || loading}\n            className=\"btn btn-secondary\"\n          >\n            Next →\n          </button>\n        </div>\n      </div>\n\n      {answers.some(answer => answer.trim().length > 0) && (\n        <div className=\"submit-section\">\n          <div className=\"submit-info\">\n            <h4>Ready to get your results?</h4>\n            <p>You've answered {answers.filter(a => a.trim().length > 0).length} of {currentTest.questions.length} questions.</p>\n          </div>\n          <button\n            onClick={submitTest}\n            disabled={loading}\n            className=\"btn btn-primary submit-btn\"\n          >\n            {loading ? (\n              <>\n                <span className=\"loading-spinner small\"></span>\n                Analyzing your responses...\n              </>\n            ) : (\n              <>\n                📊 Submit Test for Analysis\n              </>\n            )}\n          </button>\n        </div>\n      )}\n\n      <div className=\"help-section\">\n        <details>\n          <summary>📝 Instructions & Tips</summary>\n          <div className=\"help-content\">\n            <h4>How to use this evaluator:</h4>\n            <ul>\n              <li>Click \"Start Recording\" and speak your answer clearly</li>\n              <li>You can also type your response directly</li>\n              <li>Navigate between questions using the Previous/Next buttons or click question numbers</li>\n              <li>Aim for detailed responses (100+ words per question)</li>\n              <li>Submit when you've answered at least one question</li>\n            </ul>\n            \n            <h4>For best pronunciation analysis:</h4>\n            <ul>\n              <li>Use a quiet environment</li>\n              <li>Speak at a natural pace</li>\n              <li>Ensure good microphone quality</li>\n              <li>Use Chrome or Edge browsers</li>\n            </ul>\n          </div>\n        </details>\n      </div>\n    </div>\n  );\n}\n\nexport default SpeechEvaluator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}